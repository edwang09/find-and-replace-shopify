{"version":3,"file":"static/development/pages/index.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/graphql.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-properties.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/define-property.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptor.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-descriptors.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-own-property-symbols.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/keys.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty.js","webpack:///./pages/index.js","webpack:///./pages/tutorial.js","webpack:///external \"@fortawesome/free-solid-svg-icons\"","webpack:///external \"@fortawesome/react-fontawesome\"","webpack:///external \"@shopify/app-bridge-react\"","webpack:///external \"@shopify/app-bridge/actions\"","webpack:///external \"@shopify/polaris\"","webpack:///external \"@shopify/polaris-icons\"","webpack:///external \"core-js/library/fn/object/define-properties\"","webpack:///external \"core-js/library/fn/object/define-property\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptor\"","webpack:///external \"core-js/library/fn/object/get-own-property-descriptors\"","webpack:///external \"core-js/library/fn/object/get-own-property-symbols\"","webpack:///external \"core-js/library/fn/object/keys\"","webpack:///external \"graphql-tag\"","webpack:///external \"lodash\"","webpack:///external \"react\"","webpack:///external \"store-js\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import gql from 'graphql-tag';\nexport const UPDATE_PRODUCTS = gql`\n  mutation productUpdate($input: ProductInput!) {\n    productUpdate(input: $input) {\n      product {\n        id\n        title\n        handle\n        description\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\n\nexport const SEARCH_PRODUCTS = gql`\n  query getProducts($searchquery: String!) {\n    products(query: $searchquery first: 50) {\n      edges {\n        node {\n          title\n          handle\n          description\n          id\n          variants(first: 1) {\n            edges {\n              node {\n                price\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport const constructListproduct = (cursor)=>{\n  let addon = \"\"\n  if (cursor) {\n    addon = `, after : \"${cursor}\"`\n  }\n  return gql`\n  query getProducts {\n    products(first:50 ${addon}) {\n        pageInfo { \n          hasNextPage \n          hasPreviousPage \n        }\n        edges {\n            cursor\n            node {\n                title\n                handle\n                description\n                productType\n                tags\n                vendor\n                id\n                variants(first: 1) {\n                    edges {\n                        node {\n                            price\n                            sku\n                            id\n                        }\n                    }\n                }\n            }\n        }\n    }\n  }\n`;\n}\n\nexport const constructSearchProduct = (productList, VariantList)=>{\n\n    return gql`\n    query getProducts($searchquery: String!) {\n      products(query: $searchquery first: 50) {\n        edges {\n          node {\n              ${productList.join(\"\\n\")}\n            id\n            variants(first: 1) {\n              edges {\n                node {\n                  ${VariantList.join(\"\\n\")}\n                  id\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `;\n}","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","import _Object$defineProperty from \"../../core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import store from 'store-js';\nimport { Welcome, Tutorial} from './tutorial'\nimport { \n  Card,\n  Page,\n  TextField,\n  DataTable,\n  Button,\n  Checkbox,\n  Icon,\n  Frame,\n  Toast,\n  ChoiceList,\n  Loading,\n  Modal\n} from '@shopify/polaris';\nimport {\n  StarFilledMinor,\n  StarOutlineMinor\n} from '@shopify/polaris-icons';\nimport { Context } from '@shopify/app-bridge-react';\nimport _ from 'lodash'\nimport './index.css'\nimport{ UPDATE_PRODUCTS, constructListproduct, constructSearchProduct }from \"../components/graphql\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronUp, faChevronDown } from '@fortawesome/free-solid-svg-icons'\n\nclass Index extends React.Component {\n    static contextType = Context;\n    state = {\n      fetching:true,\n      loading:false,\n        searchquery: \"\",\n        replacestring:\"\",\n        matchcase:false,\n        saved: false,\n        scopes:[],\n        scopesV:[],\n        fields:[],\n        products:[],\n        productList:[],\n        allproducts:[],\n        operation: '',\n        cursor: 0,\n        total : 0,\n        tutorial: -1\n    }\n    componentDidMount(){\n      const tutorial = store.get('tutorial')\n      this.setState({tutorial:0})\n      if(tutorial===undefined || tutorial>-1){\n        this.setState({tutorial:0})\n      }\n      this.fetchQuery()\n    }\n    getRegexCase(){return this.state.matchcase ? \"g\" : \"gi\"}\n    getRegex(searchquery){\n      return new RegExp(searchquery.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), this.getRegexCase());\n    }\n    async fetchQuery(){\n      // console.log(\"fetch\")\n      this.setState({fetching:true})\n      let fetch = true\n      let cursor\n      while (fetch) {\n        const response = await this.props.apolloClient.query({query: constructListproduct(cursor)})\n        // console.log(response.data)\n        fetch = response.data.products.pageInfo.hasNextPage\n        cursor = response.data.products.edges[response.data.products.edges.length-1].cursor\n        this.setState({allproducts:[...this.state.allproducts, ...response.data.products.edges]})\n      }\n      this.setState({fetching:false})\n    }\n\n    filterQuery(){\n      // console.log(\"filter\")\n      // console.log(this.state.allproducts)\n      if(this.state.searchquery!==\"\" && (this.state.scopes.length + this.state.scopesV.length !== 0) && (this.state.allproducts !== 0) ){\n        const currentproducts = this.state.allproducts.filter(prod=>{\n          const regx = this.getRegex(this.state.searchquery);\n          return this.state.scopes.some(sco=>{\n            if(sco===\"tags\"){\n              return (prod.node[sco].join(\"/n\").search(regx)>-1)\n            }\n            return (prod.node[sco].search(regx)>-1)\n          })\n        })\n        // console.log(currentproducts)\n        this.setState({products: currentproducts, productList: this.ConvertDatatoTable(currentproducts, 0),cursor:0})\n      }else{\n        this.setState({products:[], productList:[]})\n      }\n    }\n\n    getHeader(){\n      let scopes = this.state.scopes\n      if(this.state.operation === \"insert\" || this.state.operation === \"append\"){\n        scopes = [...scopes, ...this.state.fields.filter(sco=>scopes.findIndex(s=>s===sco)===-1)]\n      }\n      return [\"title\",\"handle\",...scopes.filter(sco=>(sco!==\"title\" && sco!==\"handle\"))]\n    }\n    getHeaderType(){\n      return Array(this.state.scopes.length).fill('text')\n    }\n\n    isScopeSelected(scope, field){\n      if (field === undefined) field = 0\n      const scopetype = [\"scopes\", \"scopesV\", \"fields\"][field]\n      return (this.state[scopetype].findIndex(sco=>sco===scope)>-1)\n    }\n\n    handleScopeSelect=(scope,field)=>()=>{\n      if (field === undefined) field = 0\n      const scopetype = [\"scopes\", \"scopesV\", \"fields\"][field]\n      const scopes = this.state[scopetype]\n      const newscope = [\"title\",\"handle\",\"productType\",\"vendor\",\"tags\",\"description\"].filter(scop=>{\n        if (scop === scope) return (scopes.findIndex(sco=>sco===scop) === -1)\n        return (scopes.findIndex(sco=>sco===scop) > -1)\n      })\n      this.setState({[scopetype]: newscope},()=>{\n        this.filterQuery()\n      })\n    }\n\n    toggleFavorite = () => {\n      // console.log(\"toggle fav\")\n      const favorite = store.get('favorite')\n      const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase','scopes', 'operation'])\n      const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n      if(!this.state.saved){\n        if (!store.get('favorite')){\n          // console.log(\"no current fav\")\n          // console.log(\"hashedfav:\" + hashedfav)\n          store.set(\"favorite\",{[hashedfav]:searchform})\n        }else{\n          // console.log(store.get('favorite'))\n          store.set(\"favorite\",{...favorite, [hashedfav]:searchform})\n        }\n        this.setState({ saved:true })\n      }else{\n        delete favorite[hashedfav]\n        store.set(\"favorite\",favorite)\n        this.setState({ saved:false })\n      }\n    }\n\n    handleChange = (field) =>  (value) => {\n      if (field===\"operation\"){\n        value = value[0]\n      }\n      this.setState({ [field]: value }, ()=>{\n        const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase','scopes'])\n        const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n        const saved = store.get('favorite') && store.get('favorite')[hashedfav]\n        this.setState({ saved })\n        if (true || (field && field!==\"operation\" && field!==\"replacestring\")){\n          this.filterQuery()\n        }\n      })\n    };\n\n\n    handleReplaceAll = () => {\n      if(!this.state.products || this.state.products.length<1){\n        return \n      }\n      this.setState({ loading:true })\n      const promises = this.state.products.length\n      let count = promises\n      this.state.products.map((item,idx)=>{\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables:{input:this.transformData(item.node)}\n        })\n        .then(response=>{\n          // console.log(response)\n          count -= 1\n          if(count === 0){\n            this.fetchQuery()\n            this.setState({ loading:false, showtoast:true, products:[], toastcontent: `${promises} products changed.`, cursor: 0 })\n          }\n        })\n      })\n    }\n\n    handleReplace = () => {\n      if(!this.state.products || this.state.products.length<1){\n        return \n      }\n      this.setState({ loading:true })\n      const currentCursor = this.FindTextByCursor(this.state.products, this.state.cursor)\n      // console.log(currentCursor)\n      const promises = this.state.products.length\n      let count = promises\n      this.props.apolloClient.mutate({\n        mutation: UPDATE_PRODUCTS,\n        variables:{input:this.transformData(this.state.products[currentCursor.index].node, currentCursor.sco, currentCursor.count)}\n      })\n      .then(response=>{\n        // console.log(response)\n          this.setState({ loading:false, showtoast:true, toastcontent: `products change submitted.` })\n      })\n    }\n\n    //handle data manipulation\n    transformData = (data, scope, count)=>{\n      const searchquery = this.getRegex(this.state.searchquery);\n      let replacestring =  this.state.replacestring\n      let result = {id:data.id}\n      const { operation } = this.state\n      // console.log(operation)\n      if (operation === \"delete\"){\n        replacestring = \"\"\n      }\n      if(scope!== undefined ){\n        // console.log(scope, count)\n        if(scope===\"tags\"){\n          if (operation === \"insert\"){\n            result[scope] = [ replacestring, ...data[scope]]\n          }else if (operation === \"append\"){\n            result[scope] = [...data[scope], replacestring]\n          }else{\n            let nth = -1\n            result[scope] = data[scope].join(\", \").replace(searchquery, function (x) {\n              nth++\n              if (count === nth){\n                return replacestring;\n              }\n              return x;\n            }).split(\", \")\n          }\n          data[scope] = result[scope]\n        }else if(scope===\"description\"){\n          if (operation === \"insert\"){\n            result[\"descriptionHtml\"] = `<p>${replacestring}</p><p>` + data[scope] + '</p>'\n            data[scope] = replacestring + data[scope]\n          }else if (operation === \"append\"){\n            result[\"descriptionHtml\"] = '<p>' + data[scope] + `</p><p>${replacestring}</p>`\n            data[scope] = data[scope] + replacestring\n          }else{\n            let nth = -1\n            data[scope] = data[scope].replace(searchquery, function (x) {\n              nth++\n              if (count === nth){\n                return replacestring;\n              }\n              return x;\n            })\n            result[\"descriptionHtml\"] = '<p>' + data[scope] + '</p>'\n          }\n        }else{\n          if (operation === \"insert\"){\n            result[scope] = replacestring + data[scope]\n          }else if (operation === \"append\"){\n            result[scope] = data[scope] + replacestring\n          }else{\n            let nth = -1\n            result[scope] = data[scope].replace(searchquery, function (x) {\n              nth++\n              if (count === nth){\n                return replacestring;\n              }\n              return x;\n            })\n          }\n          data[scope] = result[scope]\n        }\n        const newproducts = this.state.products.map(p=>{\n          if(data.id === p.node.id) return {...p, node: data}\n          return p\n        })\n        this.setState({products:newproducts, productList:this.ConvertDatatoTable(this.state.products,this.state.cursor)})\n        return result\n      }\n      this.state.scopes.map(sco=>{\n        if(sco===\"tags\"){\n          if (operation === \"insert\"){\n            result[sco] = [ replacestring, ...data[sco]]\n          }else if (operation === \"append\"){\n            result[sco] = [...data[sco], replacestring]\n          }else{\n            result[sco] = data[sco].map(tag=>tag.replace(searchquery, replacestring))\n          }\n        }else if(sco===\"description\"){\n          if (operation === \"insert\"){\n            result[sco] = `<p>${replacestring}</p><p>` + data[sco] + '</p>'\n          }else if (operation === \"append\"){\n            result[sco] = '<p>' + data[sco] + `</p><p>${replacestring}</p>`\n          }else{\n            result[\"descriptionHtml\"] = '<p>' + data[sco].replace(searchquery, replacestring) + '</p>'\n          }\n        }else{\n          if (operation === \"insert\"){\n            result[sco] = replacestring + data[sco]\n          }else if (operation === \"append\"){\n            result[sco] = data[sco] + replacestring\n          }else{\n            result[sco] = data[sco].replace(searchquery, replacestring)\n          }\n        }\n      })\n      return result\n    }\n\n    \n    InjectHighlight = (text, count) => {\n      if (!text){\n        return \"NA\"\n      }\n      const replace = this.getRegex(this.state.searchquery);\n      const operation = this.state.operation\n      let insert = \"\", append = \"\"\n      if (count !== undefined && operation === \"insert\"){\n        insert = `<span style=\"color:orange\">${this.state.replacestring}</span>`\n      }else if (count !== undefined && operation === \"append\"){\n        append = `<span style=\"color:orange\">${this.state.replacestring}</span>`\n      }\n      const replacestring = this.state.replacestring !== \"\" ? this.state.replacestring : null\n      let nth = -1\n      return (\n        <span dangerouslySetInnerHTML={{ __html : insert + text.replace(replace, function (x) {\n              nth++\n              switch (operation) {\n                case \"replace\":\n                  if (count !== undefined && count === nth){\n                    // console.log(count, text)\n                    return `<span style=\"background-color:#3297FD; color:white\">${replacestring ? replacestring : x}</span>`;\n                  }\n                  return `<span style=\"background-color:yellow\">${x}</span>`;\n                case \"delete\":\n                  if (count !== undefined && count === nth){\n                    // console.log(count, text)\n                    return `<span style=\"background-color:#3297FD; color:white; text-decoration: line-through;\">${x}</span>`;\n                  }\n                  return `<span style=\"background-color:yellow\">${x}</span>`;\n                default:\n                  if (count !== undefined && count === nth){\n                    // console.log(count, text)\n                    return `<span style=\"background-color:#3297FD; color:white\">${x}</span>`;\n                  }\n                  return `<span style=\"background-color:yellow\">${x}</span>`;\n              }\n            }) + append\n          }} />\n      )\n    }\n\n    HandleTagDisplay(node){\n      return {...node, tags:node.tags.join(\"/n\") }\n    }\n\n    FindTextByCursor(data, cursor){\n      // console.log(\"find cursor\")\n      let counter = 0\n      let result\n      const replace = this.getRegex(this.state.searchquery);\n      for (let index = 0; index < data.length; index++) {\n        const node = this.HandleTagDisplay(data[index].node);\n        for (let scoid = 0; scoid < this.state.scopes.length; scoid++) {\n          const sco = this.state.scopes[scoid]\n          const count = node[sco].match(replace) ? node[sco].match(replace).length : 0\n          if (result === undefined && count + counter > cursor){\n            result = {index:index ,sco: sco, count : (cursor - counter) }\n          }\n          counter += count\n        }\n      }\n      return {...result, total:counter}\n    }\n    //format data to display in table\n    ConvertDatatoTable = (data, cursor) =>{\n      // console.log(\"convert data\")\n      if (!data || data.length < 1){\n        this.setState({total: 0})\n        return [[]]\n      }\n      const currentCursor = this.FindTextByCursor(data, cursor)\n      // console.log(currentCursor)\n      this.setState({total: currentCursor.total})\n      return data.map((item,id)=>{\n        const node = this.HandleTagDisplay(item.node)\n        return this.getHeader().map((sco)=>{\n          if(this.state.scopes.findIndex(sc=>sc===sco)===-1){\n            return node[sco]\n          }\n          if(id===currentCursor.index && sco === currentCursor.sco){\n            return this.InjectHighlight(node[sco],currentCursor.count)\n          }\n          return this.InjectHighlight(node[sco])\n        })\n      })\n    }\n\n\n\n\n    next(){\n      const cursor = this.state.cursor+1 >= this.state.total ? 0 : this.state.cursor + 1 \n      this.setState({productList: this.ConvertDatatoTable(this.state.products, cursor), cursor})\n    }\n    previous(){\n      const cursor = this.state.cursor-1 < 0 ? this.state.total - 1 : this.state.cursor - 1 \n      this.setState({productList: this.ConvertDatatoTable(this.state.products, cursor), cursor})\n    }\n    selectAll(){\n      if(this.state.scopes.length === 6){ this.setState({scopes:[]})}\n      else {this.setState({scopes:[\"title\", \"handle\", \"productType\", \"vendor\", \"tags\", \"description\"]})}\n    }\n    handleTutorialChange = (type) => () => {\n      console.log(\"tutorial change\")\n      const tutorial = this.state.tutorial\n      switch (type) {\n        case \"next\":\n          if (tutorial === 8){\n            this.setState({tutorial:-1})\n            store.set(\"tutorial\",-1)\n          }else{\n            this.setState({tutorial:tutorial + 1})\n          }\n          break;\n        case \"close\":\n          this.setState({tutorial:-1})\n          store.set(\"tutorial\",-1)\n          break;\n        case \"previous\":\n            this.setState({tutorial:tutorial - 1})\n            break;\n        default:\n          break;\n      }\n    }\n    \n    render() {\n      const app = this.context;\n      const {operation, searchquery, loading, replacestring, tutorial} = this.state\n\n    return (\n      <Page fullWidth>\n      <Frame>\n        <Welcome tutorial={tutorial} handleChange={this.handleTutorialChange}/>\n        <div className=\"form-container\">\n          {(tutorial > 0) && <div className = \"overlay\"></div>}\n          <div className=\"form\">\n            {(this.state.loading || this.state.fetching) && <Loading />}\n\n            <div className={(tutorial === 1) ? \"section focused\" : \"section\"}>\n                <h3 className=\"select-all\"><b>In fields: </b><Button onClick={this.selectAll.bind(this)}>select all</Button></h3>\n                <div className=\"form-row field-list\">\n                    <Checkbox label=\"Title\" checked={this.isScopeSelected('title')} onChange={this.handleScopeSelect('title')} />\n                    <Checkbox label=\"Handle\" checked={this.isScopeSelected('handle')} onChange={this.handleScopeSelect('handle')} />\n                    <Checkbox label=\"Product types\" checked={this.isScopeSelected('productType')} onChange={this.handleScopeSelect('productType')} />\n                    <Checkbox label=\"Vendor\" checked={this.isScopeSelected('vendor')} onChange={this.handleScopeSelect('vendor')} />\n                    <Checkbox label=\"Tags\" checked={this.isScopeSelected('tags')} onChange={this.handleScopeSelect('tags')} />\n                    <Checkbox label=\"Description\" checked={this.isScopeSelected('description')} onChange={this.handleScopeSelect('description')} />\n                </div>\n            </div>\n\n            <div className={(tutorial === 2) ? \"section focused\" : \"section\"}>\n              <h3><b>Search keywords: </b></h3>\n              <div className=\"form-row find-text\">\n                <div className=\"form-input\" >\n                  <TextField placeholder=\"Find\" value={searchquery} onChange={this.handleChange('searchquery')} />\n                </div>\n                <Button className=\"\" onClick={this.previous.bind(this)}> <FontAwesomeIcon icon={faChevronUp} /> </Button>\n                <Button className=\"\" onClick={this.next.bind(this)}> <FontAwesomeIcon icon={faChevronDown} /> </Button>\n                {(!this.state.total && searchquery !== \"\") && (<p style={{color:\"red\", fontWeight: \"bold\"}}>No result</p>)}\n                {(this.state.total > 0 && searchquery !== \"\") && (<p style={{fontWeight: \"bold\"}}>{this.state.cursor + 1} of {this.state.total}</p>)}\n              </div>\n            </div>\n\n            {/* <h3><b>Variant fields</b>(not in use): </h3>\n            <div className=\"form-row\">\n                <Checkbox label=\"Price\" disabled checked={this.isScopeSelected('price',1)} onChange={this.handleScopeSelect('price',1)} />\n                <Checkbox label=\"SKU\" disabled checked={this.isScopeSelected('sku',1)} onChange={this.handleScopeSelect('sku',1)} />\n            </div> */}\n\n            <div className={(tutorial > 2 && tutorial < 7) ? \"section focused\" : \"section\"}>\n              <h3><b>Operation: </b></h3>\n              <div className={(tutorial > 2 && tutorial < 7) ? \"form-row circle\"+tutorial: \"form-row\"}>\n                <ChoiceList\n                  choices={[\n                    {label: 'Replace text', value: 'replace'},\n                    {label: 'Insert in front', value: 'insert'},\n                    {label: 'Append to end', value: 'append'},\n                    {label: 'Remove text', value: 'delete'},\n                  ]}\n                  selected={operation}\n                  onChange={this.handleChange('operation')}\n                />\n              </div>\n\n              {(operation ) && <div className=\"form-row replace-text\">\n              {(operation ===\"replace\" || operation ===\"insert\" || operation ===\"append\") && <div className=\"form-input\" >\n                  <TextField placeholder={operation + \" text\"} disabled = {operation === \"delete\"} value={replacestring} onChange={this.handleChange('replacestring')} />\n                </div>}\n                <Button className=\"form-button\" loading={loading} onClick={this.handleReplace.bind(this)}>{operation} </Button>\n                <Button className=\"form-button\" loading={loading} onClick={this.handleReplaceAll.bind(this)}>{operation} all</Button>\n              </div>}\n            </div>\n\n\n            <div className={(tutorial === 2 || tutorial === 7 || tutorial === 8) ? \"section focused\" : \"section\"}>\n            <h3><b>Options: </b></h3>\n            <div className=\"form-row option-list\">\n              <Checkbox label=\"Match case\" checked={this.state.matchcase} onChange={this.handleChange('matchcase')} />\n              <a  className=\"form-item\" onClick={this.toggleFavorite.bind(this)} >\n                <Icon source={this.state.saved ? StarFilledMinor : StarOutlineMinor} />\n                <p>{this.state.saved ? \"Saved\" : \"Save to Favorite\"}</p>\n              </a>\n            </div>\n            </div>\n          </div>\n          <div className=\"tutorial\">\n            <Tutorial tutorial={this.state.tutorial} handleChange={this.handleTutorialChange}/>\n          </div>\n        </div>\n        <Card>\n          <DataTable\n            columnContentTypes={this.getHeaderType()}\n            headings={this.getHeader()}\n            rows={this.state.productList}\n          />\n        </Card>\n        {this.state.showtoast ? (<Toast content={this.state.toastcontent} onDismiss={() => this.setState({showtoast:false})} />) : null}\n      </Frame>\n      </Page>\n    );\n  }\n}\n\nexport default Index;","import React from 'react'\nimport { \n    Modal,\n    TextContainer,\n    Card\n  } from '@shopify/polaris';\n  import { Redirect } from '@shopify/app-bridge/actions';\n  const tutorialText = [\n      \"To get started, you'll need to select the relevant in fields. There's also an option to select all.\",\n      \"Type in your keywords here. You also have the option to match case.\",\n      \"There are 4 main operations, Replace searched text with text you specify. For example:\",\n      \"Insert in front of the column with text you specify. For example:\",\n      \"Append to end of the column with text you specify. For example:\",\n      \"Remove searched text. For example:\",\n      \"For keywords/phrases that you use regularly, save them to favorites\",\n      \"Once saved to favorites, you can bundle together multiple queries and run them as a set with one click.\"\n  ]\n  export function Welcome(props) {\n    return (\n        <div>\n            <Modal\n                open={(props.tutorial === 0)}\n                onClose={props.handleChange(\"close\")}\n                title=\"Welcome to Find & Replace for Shopify\"\n                primaryAction={{\n                content: 'Yes',\n                onAction: props.handleChange(\"next\"),\n                }}\n                secondaryActions={[\n                {\n                    content: 'No',\n                    onAction: props.handleChange(\"close\"),\n                },\n                ]}\n            >\n                <Modal.Section>\n                <TextContainer>\n                    <p>\n                    Welcome to Find & Replace for Shopify. Want to take a quick tour? It's less than 2 minutes..\n                    </p>\n                </TextContainer>\n                </Modal.Section>\n            </Modal>\n        </div>\n    )\n}\nexport function Tutorial(props) {\n    if (!props.tutorial || props.tutorial < 1) return null\n    const primaryButtonText = (props.tutorial===8?'Close':'Next')\n    const titleText = `Find & Replace for Shopify Tutorial ${props.tutorial}/8`\n    return (\n            <div>\n            <Card\n                sectioned\n                actions={[{\n                    content: 'Close tutorial',\n                    onAction: props.handleChange(\"close\"),\n                }]}\n                title={titleText}\n                primaryFooterAction={{\n                    content: primaryButtonText,\n                    onAction: props.handleChange(\"next\"),\n                    }}\n                secondaryFooterActions={[{\n                    content: 'Previous',\n                    onAction: props.handleChange(\"previous\"),\n                    }]}\n            >\n                <TextContainer>\n                    <p>\n                        {tutorialText[props.tutorial-1]}\n                    </p>\n                    {\n                        props.tutorial === 3 &&\n                        (\n                            <div>\n                                <h5><b>original text :</b></h5>\n                                <p>This is a <span style={{color:\"green\"}}>red</span> apple.</p>\n                                <h5><b>replaced text :</b> </h5>\n                                <p>This is a <span style={{backgroundColor:\"#3297FD\",color:\"white\"}}>green</span> apple.</p>\n                            </div>\n                        )\n                    }\n                    {\n                        props.tutorial === 4 &&\n                        (\n                            <div>\n                                <h5><b>original text :</b></h5>\n                                <p>This is a <span style={{color:\"green\"}}>red</span> apple.</p>\n                                <h5><b>inserted text :</b> </h5>\n                                <p><span style={{color:\"orange\"}}>Hello, </span>This is a <span style={{color:\"green\"}}>red</span> apple.</p>\n                            </div>\n                        )\n                    }\n                    {\n                        props.tutorial === 5 &&\n                        (\n                            <div>\n                                <h5><b>original text :</b></h5>\n                                <p>This is a <span style={{color:\"green\"}}>red</span> apple.</p>\n                                <h5><b>appended text :</b> </h5>\n                                <p>This is a <span style={{color:\"green\"}}>red</span> apple.<span style={{color:\"orange\"}}>Thanks</span></p>\n                            </div>\n                        )\n                    }\n                    {\n                        props.tutorial === 6 &&\n                        (\n                            <div>\n                                <h5><b>original text :</b></h5>\n                                <p>This is a  <span style={{backgroundColor:\"#3297FD\",color:\"white\",textDecoration:\"line-through\"}}>red</span>  apple.</p>\n                                <h5><b>deleted text :</b> </h5>\n                                <p>This is a apple.</p>\n                            </div>\n                        )\n                    }\n                    {\n                        props.tutorial === 8 &&\n                        (\n                            <div>\n                                <p>you can access and run your saved operations in the <b>favorites tab</b> on the top.</p>\n                            </div>\n                        )\n                    }\n                </TextContainer>\n            </Card>\n        </div>\n    )\n}\n","module.exports = require(\"@fortawesome/free-solid-svg-icons\");","module.exports = require(\"@fortawesome/react-fontawesome\");","module.exports = require(\"@shopify/app-bridge-react\");","module.exports = require(\"@shopify/app-bridge/actions\");","module.exports = require(\"@shopify/polaris\");","module.exports = require(\"@shopify/polaris-icons\");","module.exports = require(\"core-js/library/fn/object/define-properties\");","module.exports = require(\"core-js/library/fn/object/define-property\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptor\");","module.exports = require(\"core-js/library/fn/object/get-own-property-descriptors\");","module.exports = require(\"core-js/library/fn/object/get-own-property-symbols\");","module.exports = require(\"core-js/library/fn/object/keys\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"lodash\");","module.exports = require(\"react\");","module.exports = require(\"store-js\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAAA;AAiBA;;;;;;;;;;;;;;;;;;;;;AAAA;AAsBA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAFA;AA+BA;AAEA;AAEA;;;;;AAKA;;;;;AAKA;;;;;;;;;AAVA;AAoBA;;;;;;;;;;;ACpGA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AAcA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBA;AACA;AAHA;AAqFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAhGA;AAkGA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAtHA;AAwHA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AArIA;AAwIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AA7JA;AA+JA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAhLA;AAmpRA;AAuRA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAlBA;AAoBA;AAtBA;AAAA;AAyBA;AACA;AA/TA;AAwVA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AA7WA;AA8XA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAjBA;AAmBA;AAnZA;AACA;AAmwBA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAUA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AARA;AAYA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AAAA;AAKA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AArfA;AACA;AADA;AACA;AAsfA;;;;;;;;;;;;;;;;;;;;;;AClhBA;AACA;AAKA;AACA;AAUA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAEA;AACA;AAFA;AATA;AAyBA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAXA;AAyBA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;;;;;;;;;;;;;;;;;;;;;;;AChIA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}