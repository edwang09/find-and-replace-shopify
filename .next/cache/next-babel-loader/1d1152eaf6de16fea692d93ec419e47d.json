{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, ResourceItem, TextField, Thumbnail, DataTable, Button, Checkbox, Icon } from '@shopify/polaris';\nimport { StarFilledMinor, StarOutlineMinor } from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport './ResourceList.css';\nimport { UPDATE_PRODUCTS, SEARCH_PRODUCTS } from \"./graphql.js\";\n\nclass ResourceListWithProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      favorites: {},\n      bundles: {},\n      selectedItems: []\n    });\n\n    _defineProperty(this, \"transformData\", (data, searchquery, replacestring) => {\n      const regexsearchquery = new RegExp(searchquery, \"gi\");\n      const result = {\n        id: data.id,\n        title: data.title.replace(regexsearchquery, replacestring),\n        handle: data.handle.replace(regexsearchquery, replacestring),\n        descriptionHtml: `<p>${data.description.replace(regexsearchquery, replacestring)}</p>`\n      };\n      return result;\n    });\n\n    _defineProperty(this, \"handleReplace\", (products, searchquery, replacestring) => {\n      if (!products || products.length < 1) {\n        return;\n      }\n\n      products.edges.map(item => {\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables: {\n            input: this.transformData(item.node, searchquery, replacestring)\n          }\n        }).then(response => {\n          console.log(response);\n        });\n      });\n    });\n  }\n\n  setSelectedItems(selectedItems) {\n    console.log(selectedItems);\n    return this.setState({\n      selectedItems\n    });\n  }\n\n  ObjtoArray(obj) {\n    return _Object$keys(obj).map(key => {\n      return _objectSpread({}, obj[key], {\n        key\n      });\n    });\n  }\n\n  componentDidMount() {\n    const favorites = store.get(\"favorite\") ? store.get(\"favorite\") : {};\n    const bundles = store.get(\"bundle\") ? store.get(\"bundle\") : {}; // if(Object.keys.length(bundles)===0){\n    //     store.set(\"bundle\",{})\n    // }\n\n    console.log(favorites);\n    console.log(bundles);\n    this.setState({\n      favorites,\n      bundles\n    });\n  }\n\n  runFavorite(key) {\n    const {\n      searchquery,\n      replacestring\n    } = this.state.favorites[key];\n    this.props.apolloClient.query({\n      query: SEARCH_PRODUCTS,\n      variables: {\n        searchquery\n      }\n    }).then(response => {\n      if (response && response.data && response.data.products) {\n        this.handleReplace(response.data.products, searchquery, replacestring);\n      } else {\n        console.log(\"no item found\");\n      }\n    });\n  }\n\n  removeFavorite(key) {\n    const {\n      favorites\n    } = this.state;\n    delete favorites[key];\n    store.set(\"favorite\", favorites);\n    this.setState({\n      favorites\n    });\n  }\n\n  createBundle() {\n    const {\n      favorites,\n      bundles\n    } = this.state;\n    const newbundle = this.state.selectedItems.reduce((bundle, key) => {\n      const fav = favorites[key];\n      delete favorites[key];\n      return bundle.push(fav);\n    }, []);\n    const newbundlekey = \"bundle:\" + this.state.selectedItems.join(';');\n    console.log(newbundle);\n    console.log(newbundlekey);\n    console.log(favorites);\n    store.set(\"favorite\", favorites);\n\n    if (!store.get('bundle')) {\n      console.log(\"no current bundle\");\n      store.set(\"bundle\", {\n        [newbundlekey]: newbundle\n      });\n    } else {\n      store.set(\"bundle\", _objectSpread({}, bundles, {\n        [newbundlekey]: newbundle\n      }));\n    }\n\n    this.setState({\n      selectedItems: []\n    });\n  }\n\n  unbundle(key) {\n    const {\n      favorites,\n      bundles\n    } = this.state;\n    const bundle = bundles[key];\n    bundle.map(fav => {\n      const hashedfav = _Object$keys(fav).sort().map(x => fav[x].toString()).join(\";\");\n\n      favorites[hashedfav] = fav;\n    });\n    delete bundles[key];\n    console.log(bundles);\n    console.log(favorites);\n    store.set(\"favorite\", favorites);\n    store.set(\"bundle\", bundles);\n    this.setState({\n      favorites,\n      bundles\n    });\n  }\n\n  runBundle(key) {\n    const bundle = this.state.bundles[key];\n    bundle.map(fav => {\n      const {\n        searchquery,\n        replacestring\n      } = fav;\n      this.props.apolloClient.query({\n        query: SEARCH_PRODUCTS,\n        variables: {\n          searchquery\n        }\n      }).then(response => {\n        if (response && response.data && response.data.products) {\n          this.handleReplace(response.data.products, searchquery, replacestring);\n        } else {\n          console.log(\"no item found\");\n        }\n      });\n    });\n  }\n\n  render() {\n    const app = this.context;\n\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/edit-products');\n    };\n\n    return __jsx(\"div\", null, __jsx(Card, null, __jsx(ResourceList, {\n      resourceName: {\n        singular: 'favorite',\n        plural: 'favorites'\n      },\n      items: this.ObjtoArray(this.state.favorites),\n      selectedItems: this.state.selectedItems,\n      onSelectionChange: this.setSelectedItems.bind(this),\n      selectable: true,\n      promotedBulkActions: [{\n        content: 'Bundle',\n        onAction: () => this.createBundle()\n      }],\n      renderItem: item => {\n        const {\n          key,\n          searchquery,\n          replacestring,\n          matchcase\n        } = item;\n        const shortcutActions = [{\n          content: 'Run',\n          onAction: () => this.runFavorite(key)\n        }, {\n          content: 'Remove',\n          onAction: () => this.removeFavorite(key)\n        }];\n        return __jsx(ResourceItem, {\n          id: key,\n          url: \"url\",\n          shortcutActions: shortcutActions,\n          name: searchquery\n        }, __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, searchquery)), __jsx(\"div\", null, \"Replace with :\\\"\", replacestring, \"\\\" \", matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"));\n      }\n    })), __jsx(Card, null, __jsx(ResourceList, {\n      resourceName: {\n        singular: 'bundle',\n        plural: 'bundles'\n      },\n      items: this.ObjtoArray(this.state.bundles),\n      renderItem: item => {\n        const {\n          key,\n          searchquery,\n          replacestring,\n          matchcase\n        } = item;\n        const shortcutActions = [{\n          content: 'Run',\n          onAction: () => this.runBundle(key)\n        }, {\n          content: 'Unbundle',\n          onAction: () => this.unbundle(key)\n        }];\n        return __jsx(ResourceItem, {\n          id: key,\n          url: \"url\",\n          shortcutActions: shortcutActions,\n          name: searchquery\n        }, __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, searchquery)), __jsx(\"div\", null, \"Replace with :\\\"\", replacestring, \"\\\" \", matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"));\n      }\n    })));\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/components/FavoriteList.js"],"names":["gql","Query","Mutation","Card","ResourceList","Stack","TextStyle","ResourceItem","TextField","Thumbnail","DataTable","Button","Checkbox","Icon","StarFilledMinor","StarOutlineMinor","store","Redirect","Context","useMutation","_","UPDATE_PRODUCTS","SEARCH_PRODUCTS","ResourceListWithProducts","React","Component","favorites","bundles","selectedItems","data","searchquery","replacestring","regexsearchquery","RegExp","result","id","title","replace","handle","descriptionHtml","description","products","length","edges","map","item","props","apolloClient","mutate","mutation","variables","input","transformData","node","then","response","console","log","setSelectedItems","setState","ObjtoArray","obj","key","componentDidMount","get","runFavorite","state","query","handleReplace","removeFavorite","set","createBundle","newbundle","reduce","bundle","fav","push","newbundlekey","join","unbundle","hashedfav","sort","x","toString","runBundle","render","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","singular","plural","bind","content","onAction","matchcase","shortcutActions"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    ResourceItem,\n    TextField,\n    Thumbnail,\n    DataTable,\n    Button,\n    Checkbox,\n    Icon\n } from '@shopify/polaris';\n import {\n  StarFilledMinor,\n  StarOutlineMinor\n} from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash'\nimport './ResourceList.css'\nimport{ UPDATE_PRODUCTS, SEARCH_PRODUCTS }from \"./graphql.js\"\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n    state = {\n        favorites:{},\n        bundles:{},\n        selectedItems: [],\n\n    }\n    transformData = (data, searchquery, replacestring)=>{\n        const regexsearchquery = new RegExp(searchquery, \"gi\");\n        const result = {\n            id:data.id,\n            title: data.title.replace(regexsearchquery, replacestring),\n            handle: data.handle.replace(regexsearchquery, replacestring),\n            descriptionHtml: `<p>${data.description.replace(regexsearchquery, replacestring)}</p>`,\n        }\n        return result\n    }\n    handleReplace = (products, searchquery, replacestring) => {\n        if(!products || products.length<1){\n            return \n        }\n        products.edges.map(item=>{\n            this.props.apolloClient.mutate({\n                mutation: UPDATE_PRODUCTS,\n                variables:{input:this.transformData(item.node, searchquery, replacestring)}\n            })\n            .then(response=>{\n                console.log(response)\n            })\n        })\n    }\n\n    setSelectedItems(selectedItems){\n        console.log(selectedItems)\n        return this.setState({selectedItems})\n    }\n\n    ObjtoArray(obj){\n        return Object.keys(obj).map((key)=>{\n            return {...obj[key], key}\n        })\n    }\n\n    componentDidMount(){\n        const favorites = store.get(\"favorite\") ? store.get(\"favorite\") : {}\n        const bundles = store.get(\"bundle\") ? store.get(\"bundle\") : {}\n        // if(Object.keys.length(bundles)===0){\n        //     store.set(\"bundle\",{})\n        // }\n        console.log(favorites)\n        console.log(bundles)\n        this.setState({favorites, bundles})\n    }\n    runFavorite(key){\n        const  {searchquery, replacestring} = this.state.favorites[key]\n        this.props.apolloClient.query({\n            query: SEARCH_PRODUCTS,\n            variables:{searchquery}\n        })\n        .then(response=>{\n            if(response && response.data && response.data.products){\n                this.handleReplace(response.data.products,searchquery, replacestring)\n            }else{\n                console.log(\"no item found\")\n            }\n        })\n    }\n    removeFavorite(key){\n        const { favorites } = this.state\n        delete favorites[key]\n        store.set(\"favorite\",favorites)\n        this.setState({favorites})\n    }\n\n    createBundle(){\n        const { favorites, bundles } = this.state\n        const newbundle = this.state.selectedItems.reduce((bundle, key)=>{\n            const fav = favorites[key]\n            delete favorites[key]\n            return bundle.push(fav)\n        },[])\n        const newbundlekey = \"bundle:\"+this.state.selectedItems.join(';')\n        console.log(newbundle)\n        console.log(newbundlekey)\n        console.log(favorites)\n        store.set(\"favorite\",favorites)\n        if (!store.get('bundle')){\n            console.log(\"no current bundle\")\n            store.set(\"bundle\",{[newbundlekey]:newbundle})\n        }else{\n            store.set(\"bundle\",{...bundles, [newbundlekey]:newbundle})\n        }\n        this.setState({selectedItems:[]})\n    }\n    \n    unbundle(key){\n        const { favorites, bundles } = this.state\n        const bundle = bundles[key]\n        bundle.map(fav => {\n            const hashedfav = Object.keys(fav).sort().map(x => fav[x].toString()).join(\";\");\n            favorites[hashedfav] = fav\n        })\n        delete bundles[key]\n        console.log(bundles)\n        console.log(favorites)\n        store.set(\"favorite\",favorites)\n        store.set(\"bundle\",bundles)\n        this.setState({favorites, bundles})\n    }\n\n    runBundle(key){\n        const bundle = this.state.bundles[key]\n        bundle.map(fav => {\n            const  {searchquery, replacestring} = fav\n            this.props.apolloClient.query({\n                query: SEARCH_PRODUCTS,\n                variables:{searchquery}\n            })\n            .then(response=>{\n                if(response && response.data && response.data.products){\n                    this.handleReplace(response.data.products,searchquery, replacestring)\n                }else{\n                    console.log(\"no item found\")\n                }\n            })\n        })\n    }\n    \n    render() {\n      const app = this.context;\n      const redirectToProduct = () => {\n        const redirect = Redirect.create(app);\n        redirect.dispatch(\n          Redirect.Action.APP,\n          '/edit-products',\n        );\n      };\n    return (\n        <div>\n        <Card>\n        <ResourceList\n            resourceName={{singular: 'favorite', plural: 'favorites'}}\n            items={this.ObjtoArray(this.state.favorites)}\n            selectedItems={this.state.selectedItems}\n            onSelectionChange={this.setSelectedItems.bind(this)}\n            selectable\n            promotedBulkActions={[\n                {\n                  content: 'Bundle',\n                  onAction: ()=>this.createBundle(),\n                }\n            ]}\n            renderItem={(item) => {\n            const {key, searchquery, replacestring, matchcase} = item;\n            const shortcutActions = [\n                {\n                    content: 'Run',\n                    onAction: ()=>this.runFavorite(key),\n                }, {\n                    content: 'Remove',\n                    onAction: ()=>this.removeFavorite(key),\n                }]\n              \n            return (\n                <ResourceItem\n                id={key}\n                url={\"url\"}\n                shortcutActions={shortcutActions}\n                name={searchquery}\n                >\n                <h3>\n                    <TextStyle variation=\"strong\">{searchquery}</TextStyle>\n                </h3>\n                <div>Replace with :\"{replacestring}\" {matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"}</div>\n                </ResourceItem>\n            );\n            }}\n        />\n        </Card>\n\n        <Card>\n        <ResourceList\n            resourceName={{singular: 'bundle', plural: 'bundles'}}\n            items={this.ObjtoArray(this.state.bundles)}\n            renderItem={(item) => {\n            const {key, searchquery, replacestring, matchcase} = item;\n            const shortcutActions = [\n                {\n                    content: 'Run',\n                    onAction: ()=>this.runBundle(key),\n                }, {\n                    content: 'Unbundle',\n                    onAction: ()=>this.unbundle(key),\n                }]\n              \n            return (\n                <ResourceItem\n                id={key}\n                url={\"url\"}\n                shortcutActions={shortcutActions}\n                name={searchquery}\n                >\n                <h3>\n                    <TextStyle variation=\"strong\">{searchquery}</TextStyle>\n                </h3>\n                <div>Replace with :\"{replacestring}\" {matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"}</div>\n                </ResourceItem>\n            );\n            }}\n        />\n        </Card>\n        </div>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}