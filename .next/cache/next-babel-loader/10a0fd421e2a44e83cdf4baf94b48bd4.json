{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, TextField, Thumbnail, DataTable } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nconst SEARCH_PRODUCTS = gql`\n  query getProducts($searchquery: String!) {\n    products(query: $searchquery first: 1) {\n      edges {\n        node {\n          title\n          handle\n          descriptionHtml\n          id\n          images(first: 1) {\n            edges {\n              node {\n                originalSrc\n                altText\n              }\n            }\n          }\n          variants(first: 1) {\n            edges {\n              node {\n                price\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      searchquery: \"LED\"\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      return value => this.setState({\n        [field]: value\n      });\n    });\n\n    _defineProperty(this, \"ConvertDatatoTable\", data => {\n      if (!data || data.length < 1) {\n        return [[]];\n      }\n\n      return data.edges.map(node => {\n        console.log(node);\n        return [node.title, node.handle, node.descriptionHTML, node.id];\n      });\n    });\n  }\n\n  render() {\n    const app = this.context;\n\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/edit-products');\n    };\n\n    const twoWeeksFromNow = new Date(_Date$now() + 12096e5).toDateString();\n    return __jsx(\"div\", null, __jsx(TextField, {\n      label: \"search\",\n      value: this.state.searchquery,\n      onChange: this.handleChange('searchquery')\n    }), __jsx(Query, {\n      query: SEARCH_PRODUCTS,\n      variables: {\n        searchquery: this.state.searchquery\n      }\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n      if (error) return __jsx(\"div\", null, error.message);\n      console.log(data);\n      const rows = this.ConvertDatatoTable(data.products);\n      console.log(rows);\n      return __jsx(Card, null, __jsx(DataTable, {\n        columnContentTypes: ['text', 'text', 'text', 'text'],\n        headings: ['title', 'handle', 'description', 'id'],\n        rows: rows\n      }));\n    }));\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","TextField","Thumbnail","DataTable","store","Redirect","Context","SEARCH_PRODUCTS","ResourceListWithProducts","React","Component","searchquery","field","value","setState","data","length","edges","map","node","console","log","title","handle","descriptionHTML","id","render","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","twoWeeksFromNow","Date","toDateString","state","handleChange","loading","error","message","rows","ConvertDatatoTable","products"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    TextField,\n    Thumbnail,\n    DataTable\n } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nconst SEARCH_PRODUCTS = gql`\n  query getProducts($searchquery: String!) {\n    products(query: $searchquery first: 1) {\n      edges {\n        node {\n          title\n          handle\n          descriptionHtml\n          id\n          images(first: 1) {\n            edges {\n              node {\n                originalSrc\n                altText\n              }\n            }\n          }\n          variants(first: 1) {\n            edges {\n              node {\n                price\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n    state = {\n        searchquery: \"LED\"\n    }\n    \n    handleChange = (field) => {\n      return (value) => this.setState({ [field]: value });\n    };\n    ConvertDatatoTable = (data) =>{\n      if (!data || data.length < 1){\n        return [[]]\n      }\n      return data.edges.map(node=>{\n        console.log(node)\n        return [node.title, node.handle, node.descriptionHTML, node.id]\n      })\n    }\n\n    render() {\n      const app = this.context;\n      const redirectToProduct = () => {\n        const redirect = Redirect.create(app);\n        redirect.dispatch(\n          Redirect.Action.APP,\n          '/edit-products',\n        );\n      };\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return (\n      <div>\n      <TextField label=\"search\" value={this.state.searchquery} onChange={this.handleChange('searchquery')} />\n      <Query query={SEARCH_PRODUCTS} variables={{ searchquery: this.state.searchquery }}>\n        {({ data, loading, error }) => {\n          if (loading) return <div>Loadingâ€¦</div>;\n          if (error) return <div>{error.message}</div>;\n          console.log(data);\n          const rows = this.ConvertDatatoTable(data.products)\n          console.log(rows)\n          return (\n            <Card>\n              <DataTable\n                columnContentTypes={[\n                  'text',\n                  'text',\n                  'text',\n                  'text',\n                ]}\n                headings={[\n                  'title',\n                  'handle',\n                  'description',\n                  'id'\n                ]}\n                rows={rows}\n              />\n            </Card>\n          );\n        }}\n      </Query>\n\n      </div>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}