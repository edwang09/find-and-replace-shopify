{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport fetch from 'node-fetch';\nimport Head from 'next/head';\nimport { AppProvider } from '@shopify/polaris';\nimport { Provider } from '@shopify/app-bridge-react';\nimport '@shopify/polaris/styles.css';\nimport translations from '@shopify/polaris/locales/en.json';\nimport Cookies from 'js-cookie';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nconst client = new ApolloClient({\n  fetchOptions: {\n    credentials: 'include'\n  },\n  fetch: fetch,\n  defaultOptions: {\n    watchQuery: {\n      fetchPolicy: 'no-cache',\n      errorPolicy: 'ignore'\n    },\n    query: {\n      fetchPolicy: 'no-cache',\n      errorPolicy: 'all'\n    }\n  }\n});\n\nclass MyApp extends App {\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    const config = {\n      apiKey: API_KEY,\n      shopOrigin: Cookies.get(\"shopOrigin\"),\n      forceRedirect: true\n    };\n    return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Sample App\"), __jsx(\"meta\", {\n      charSet: \"utf-8\"\n    })), __jsx(Provider, {\n      config: config\n    }, __jsx(AppProvider, {\n      i18n: translations\n    }, __jsx(ApolloProvider, {\n      client: client\n    }, __jsx(Component, _extends({}, pageProps, {\n      apolloClient: client\n    }))))));\n  }\n\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}