{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($searchquery: String!) {\\n    products(query: $searchquery first: 50) {\\n      edges {\\n        node {\\n          title\\n          handle\\n          description\\n          id\\n          images(first: 1) {\\n            edges {\\n              node {\\n                originalSrc\\n                altText\\n              }\\n            }\\n          }\\n          variants(first: 1) {\\n            edges {\\n              node {\\n                price\\n                id\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation productUpdate($input: ProductInput!) {\\n    productUpdate(input: $input) {\\n      product {\\n        id\\n        title\\n        handle\\n        description\\n      }\\n      userErrors {\\n        field\\n        message\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, ResourceItem, TextField, Thumbnail, DataTable, Button, Checkbox, Icon } from '@shopify/polaris';\nimport { StarFilledMinor, StarOutlineMinor } from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport './ResourceList.css';\nvar UPDATE_PRODUCTS = gql(_templateObject());\nvar SEARCH_PRODUCTS = gql(_templateObject2());\n\nvar ResourceListWithProducts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  function ResourceListWithProducts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResourceListWithProducts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      favorites: [],\n      selectedItems: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleFavorite\", function () {\n      console.log(\"toggle fav\");\n      var favorite = store.get('favorite');\n\n      var searchform = _.pick(_this.state, ['searchquery', 'replacestring', 'matchcase']);\n\n      var hashedfav = _Object$keys(searchform).sort().map(function (x) {\n        return searchform[x].toString();\n      }).join(\";\");\n\n      if (!_this.state.saved) {\n        if (!store.get('favorite')) {\n          console.log(\"no current fav\");\n          console.log(\"hashedfav:\" + hashedfav);\n          store.set(\"favorite\", _defineProperty({}, hashedfav, searchform));\n        } else {\n          console.log(store.get('favorite'));\n          store.set(\"favorite\", _objectSpread({}, favorite, _defineProperty({}, hashedfav, searchform)));\n        }\n\n        _this.setState({\n          saved: true\n        });\n      } else {\n        delete favorite[hashedfav];\n        store.set(\"favorite\", favorite);\n\n        _this.setState({\n          saved: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        _this.setState(_defineProperty({}, field, value), function () {\n          console.log(field);\n\n          var searchform = _.pick(_this.state, ['searchquery', 'replacestring', 'matchcase']);\n\n          var hashedfav = _Object$keys(searchform).sort().map(function (x) {\n            return searchform[x].toString();\n          }).join(\";\");\n\n          console.log(store.get('favorite'));\n          console.log(hashedfav);\n          console.log(store.get('favorite')[hashedfav]);\n          var saved = store.get('favorite') && store.get('favorite')[hashedfav];\n          console.log(saved);\n\n          _this.setState({\n            saved: saved\n          });\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleReplace\", function () {\n      if (!_this.state.products || _this.state.products.length < 1) {\n        return;\n      }\n\n      _this.state.products.edges.map(function (item) {\n        _this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables: {\n            input: _this.transformData(item.node)\n          }\n        }).then(function (response) {\n          console.log(response);\n        });\n      });\n\n      _this.setState({\n        searchquery: \"\",\n        replacestring: \"\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"transformData\", function (data) {\n      var searchquery = new RegExp(_this.state.searchquery, \"gi\");\n      var result = {\n        id: data.id,\n        title: data.title.replace(searchquery, _this.state.replacestring),\n        handle: data.handle.replace(searchquery, _this.state.replacestring),\n        descriptionHtml: \"<p>\".concat(data.description.replace(searchquery, _this.state.replacestring), \"</p>\")\n      };\n      return result;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"InjectHighlight\", function (text) {\n      var replace = new RegExp(_this.state.searchquery, \"gi\");\n      return __jsx(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: text.replace(replace, function (x) {\n            return \"<span style=\\\"background-color:yellow\\\">\".concat(x, \"</span>\");\n          })\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ConvertDatatoTable\", function (data) {\n      if (!data || data.length < 1) {\n        return [[]];\n      }\n\n      return data.edges.map(function (item) {\n        var node = item.node;\n        return [_this.InjectHighlight(node.title), _this.InjectHighlight(node.handle), _this.InjectHighlight(node.description)];\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"setSelectedItems\",\n    value: function setSelectedItems() {\n      return;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var favorite = store.get(\"favorite\");\n\n      var arrayfavorite = _Object$keys(favorite).map(function (key) {\n        return _objectSpread({}, favorite, {\n          key: key\n        });\n      });\n\n      console.log(arrayfavorite);\n      this.setState({\n        favorites: arrayfavorite\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var app = this.context;\n\n      var redirectToProduct = function redirectToProduct() {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.APP, '/edit-products');\n      };\n\n      return __jsx(\"div\", null, __jsx(Card, null, __jsx(ResourceList, {\n        resourceName: {\n          singular: 'favorite',\n          plural: 'favorites'\n        },\n        items: this.state.favorites,\n        selectedItems: this.state.selectedItems,\n        onSelectionChange: this.setSelectedItems.bind(this),\n        selectable: true,\n        renderItem: function renderItem(item) {\n          var key = item.key,\n              searchquery = item.searchquery,\n              replacestring = item.replacestring,\n              matchcase = item.matchcase;\n          var shortcutActions = [{\n            content: 'Run'\n          }];\n          return __jsx(ResourceItem, {\n            id: key,\n            url: \"url\",\n            shortcutActions: shortcutActions,\n            accessibilityLabel: \"View details for \".concat(name),\n            name: searchquery\n          }, __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, searchquery)), __jsx(\"div\", null, \"Replace with : \", replacestring, \" ; \", matchcase ? \"Case Sensitive\" : \"Case Insensitive\"));\n        }\n      })));\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/components/FavoriteList.js"],"names":["gql","Query","Mutation","Card","ResourceList","Stack","TextStyle","ResourceItem","TextField","Thumbnail","DataTable","Button","Checkbox","Icon","StarFilledMinor","StarOutlineMinor","store","Redirect","Context","useMutation","_","UPDATE_PRODUCTS","SEARCH_PRODUCTS","ResourceListWithProducts","favorites","selectedItems","console","log","favorite","get","searchform","pick","state","hashedfav","sort","map","x","toString","join","saved","set","setState","field","value","products","length","edges","item","props","apolloClient","mutate","mutation","variables","input","transformData","node","then","response","searchquery","replacestring","data","RegExp","result","id","title","replace","handle","descriptionHtml","description","text","__html","InjectHighlight","arrayfavorite","key","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","singular","plural","setSelectedItems","bind","matchcase","shortcutActions","content","name","React","Component"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    ResourceItem,\n    TextField,\n    Thumbnail,\n    DataTable,\n    Button,\n    Checkbox,\n    Icon\n } from '@shopify/polaris';\n import {\n  StarFilledMinor,\n  StarOutlineMinor\n} from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash'\nimport './ResourceList.css'\nconst UPDATE_PRODUCTS = gql`\n  mutation productUpdate($input: ProductInput!) {\n    productUpdate(input: $input) {\n      product {\n        id\n        title\n        handle\n        description\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\nconst SEARCH_PRODUCTS = gql`\n  query getProducts($searchquery: String!) {\n    products(query: $searchquery first: 50) {\n      edges {\n        node {\n          title\n          handle\n          description\n          id\n          images(first: 1) {\n            edges {\n              node {\n                originalSrc\n                altText\n              }\n            }\n          }\n          variants(first: 1) {\n            edges {\n              node {\n                price\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n    state = {\n        favorites:[],\n        selectedItems: [],\n\n    }\n    setSelectedItems(){\n        return \n    }\n    componentDidMount(){\n        const favorite = store.get(\"favorite\")\n        const arrayfavorite = Object.keys(favorite).map((key)=>{\n            return {...favorite, key}\n        })\n        console.log(arrayfavorite)\n        this.setState({favorites:arrayfavorite})\n    }\n\n\n\n\n    toggleFavorite = () => {\n      console.log(\"toggle fav\")\n      const favorite = store.get('favorite')\n      const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase'])\n      const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n      if(!this.state.saved){\n        if (!store.get('favorite')){\n          console.log(\"no current fav\")\n          console.log(\"hashedfav:\" + hashedfav)\n          store.set(\"favorite\",{[hashedfav]:searchform})\n        }else{\n          console.log(store.get('favorite'))\n          store.set(\"favorite\",{...favorite, [hashedfav]:searchform})\n        }\n        this.setState({ saved:true })\n      }else{\n        delete favorite[hashedfav]\n        store.set(\"favorite\",favorite)\n        this.setState({ saved:false })\n      }\n    }\n\n    handleChange = (field) =>  (value) => {\n      this.setState({ [field]: value }, ()=>{\n        console.log(field)\n        const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase'])\n        const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n        console.log(store.get('favorite'))\n        console.log(hashedfav)\n        console.log(store.get('favorite')[hashedfav])\n        const saved = store.get('favorite') && store.get('favorite')[hashedfav]\n        console.log(saved)\n        this.setState({ saved })\n      })\n    };\n\n    handleReplace = () => {\n      if(!this.state.products || this.state.products.length<1){\n        return \n      }\n      this.state.products.edges.map(item=>{\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables:{input:this.transformData(item.node)}\n        })\n        .then(response=>{\n          console.log(response)\n        })\n      })\n\n      this.setState({searchquery:\"\",replacestring:\"\"})\n\n    }\n\n    transformData = (data)=>{\n      const searchquery = new RegExp(this.state.searchquery, \"gi\");\n      const result = {\n        id:data.id,\n        title: data.title.replace(searchquery, this.state.replacestring),\n        handle: data.handle.replace(searchquery, this.state.replacestring),\n        descriptionHtml: `<p>${data.description.replace(searchquery, this.state.replacestring)}</p>`,\n      }\n      return result\n    }\n\n    InjectHighlight = (text) => {\n      const replace = new RegExp(this.state.searchquery, \"gi\");\n      return (\n        <span\n          dangerouslySetInnerHTML={{\n            __html : text.replace(replace, function (x) {\n              return `<span style=\"background-color:yellow\">${x}</span>`;\n            })\n          }} />\n      )\n    }\n\n    ConvertDatatoTable = (data) =>{\n      if (!data || data.length < 1){\n        return [[]]\n      }\n      return data.edges.map(item=>{\n        const node = item.node\n        return [this.InjectHighlight(node.title), this.InjectHighlight(node.handle), this.InjectHighlight(node.description)]\n      })\n    }\n    \n    render() {\n      const app = this.context;\n      const redirectToProduct = () => {\n        const redirect = Redirect.create(app);\n        redirect.dispatch(\n          Redirect.Action.APP,\n          '/edit-products',\n        );\n      };\n    return (\n      <div>\n        {/* <div className=\"form-container\">\n          \n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Find\" value={this.state.searchquery} onChange={this.handleChange('searchquery')} />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Replace with\"  value={this.state.replacestring} onChange={this.handleChange('replacestring')} />\n            </div>\n            <Button className=\"form-button\" onClick={this.handleReplace.bind(this)}>Replace </Button>\n            <Button className=\"form-button\" onClick={this.handleReplace.bind(this)}>Replace all</Button>\n          </div>\n\n\n          <div className=\"form-row\">\n            <Checkbox label=\"Match case\" checked={this.state.matchcase} onChange={this.handleChange('matchcase')} />\n            <a onClick={this.toggleFavorite.bind(this)} >\n              <Icon source={this.state.saved ? StarFilledMinor : StarOutlineMinor} />\n              {this.state.saved ? \"Saved\" : \"Save to Favorite\"}\n            </a>\n          </div>\n\n        </div> */}\n\n        <Card>\n        <ResourceList\n            resourceName={{singular: 'favorite', plural: 'favorites'}}\n            items={this.state.favorites}\n            selectedItems={this.state.selectedItems}\n            onSelectionChange={this.setSelectedItems.bind(this)}\n            selectable\n            renderItem={(item) => {\n            const {key, searchquery, replacestring, matchcase} = item;\n            const shortcutActions = [{content: 'Run'}]\n\n            return (\n                <ResourceItem\n                id={key}\n                url={\"url\"}\n                shortcutActions={shortcutActions}\n                accessibilityLabel={`View details for ${name}`}\n                name={searchquery}\n                >\n                <h3>\n                    <TextStyle variation=\"strong\">{searchquery}</TextStyle>\n                </h3>\n                <div>Replace with : {replacestring} ; {matchcase ? \"Case Sensitive\" : \"Case Insensitive\"}</div>\n                </ResourceItem>\n            );\n            }}\n        />\n        </Card>\n      </div>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}