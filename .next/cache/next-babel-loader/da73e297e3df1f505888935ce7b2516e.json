{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, ResourceItem, TextField, Thumbnail, DataTable, Button, Checkbox, Icon } from '@shopify/polaris';\nimport { StarFilledMinor, StarOutlineMinor } from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport './ResourceList.css';\nimport { UPDATE_PRODUCTS, SEARCH_PRODUCTS } from \"./graphql.js\";\n\nclass ResourceListWithProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      favorites: {},\n      bundles: {},\n      selectedItems: []\n    });\n\n    _defineProperty(this, \"transformData\", (data, searchquery, replacestring, scopes, matchcase) => {\n      const regsearchquery = new RegExp(searchquery, this.getRegexCase(matchcase));\n      let result = {\n        id: data.id\n      };\n      scopes.map(sco => {\n        if (sco === \"tags\") {\n          result[sco] = data[sco].map(tag => tag.replace(regsearchquery, replacestring));\n        } else if (sco === \"description\") {\n          result[\"descriptionHtml\"] = data[sco].replace(regsearchquery, replacestring);\n        } else {\n          result[sco] = data[sco].replace(regsearchquery, replacestring);\n        }\n      });\n      console.log(result);\n      return result;\n    });\n\n    _defineProperty(this, \"handleReplace\", (products, searchquery, replacestring, scopes, matchcase) => {\n      if (!products || products.length < 1) {\n        return;\n      }\n\n      products.edges.map(item => {\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables: {\n            input: this.transformData(item.node, searchquery, replacestring, scopes, matchcase)\n          }\n        }).then(response => {\n          console.log(response);\n        });\n      });\n    });\n  }\n\n  getRegexCase(matchcase) {\n    return matchcase ? \"g\" : \"gi\";\n  }\n\n  setSelectedItems(selectedItems) {\n    console.log(selectedItems);\n    return this.setState({\n      selectedItems\n    });\n  }\n\n  ObjtoArray(obj) {\n    return _Object$keys(obj).map(key => {\n      return _objectSpread({}, obj[key], {\n        key\n      });\n    });\n  }\n\n  ArrayobjtoArray(obj) {\n    return _Object$keys(obj).map(key => {\n      return {\n        content: obj[key],\n        key\n      };\n    });\n  }\n\n  componentDidMount() {\n    const favorites = store.get(\"favorite\") ? store.get(\"favorite\") : {};\n    const bundles = store.get(\"bundle\") ? store.get(\"bundle\") : {}; // if(Object.keys.length(bundles)===0){\n    //     store.set(\"bundle\",{})\n    // }\n\n    console.log(favorites);\n    console.log(bundles);\n    this.setState({\n      favorites,\n      bundles\n    });\n  }\n\n  runFavorite(key) {\n    const {\n      searchquery,\n      replacestring,\n      scopes,\n      matchcase\n    } = this.state.favorites[key];\n    this.props.apolloClient.query({\n      query: SEARCH_PRODUCTS,\n      variables: {\n        searchquery\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response && response.data && response.data.products) {\n        this.handleReplace(response.data.products, searchquery, replacestring, scopes, matchcase);\n      } else {\n        console.log(\"no item found\");\n      }\n    });\n  }\n\n  removeFavorite(key) {\n    const {\n      favorites\n    } = this.state;\n    delete favorites[key];\n    store.set(\"favorite\", favorites);\n    this.setState({\n      favorites\n    });\n  }\n\n  createBundle() {\n    const {\n      favorites,\n      bundles\n    } = this.state;\n    const newbundle = this.state.selectedItems.reduce((bundle, key) => {\n      console.log(bundle);\n      const fav = favorites[key];\n      console.log(fav);\n      delete favorites[key];\n      return [...bundle, fav];\n    }, []);\n    const newbundlekey = \"bundle:\" + this.state.selectedItems.join(';');\n    console.log(newbundle);\n    console.log(newbundlekey);\n    console.log(favorites);\n    store.set(\"favorite\", favorites);\n    let newbundles;\n\n    if (!store.get('bundle')) {\n      console.log(\"no current bundle\");\n      newbundles = {\n        [newbundlekey]: newbundle\n      };\n    } else {\n      newbundles = _objectSpread({}, bundles, {\n        [newbundlekey]: newbundle\n      });\n    }\n\n    store.set(\"bundle\", newbundles);\n    this.setState({\n      selectedItems: [],\n      favorites,\n      bundles: newbundles\n    });\n  }\n\n  unbundle(key) {\n    const {\n      favorites,\n      bundles\n    } = this.state;\n    const bundle = bundles[key];\n    bundle.map(fav => {\n      const hashedfav = _Object$keys(fav).sort().map(x => fav[x].toString()).join(\";\");\n\n      favorites[hashedfav] = fav;\n    });\n    delete bundles[key];\n    console.log(bundles);\n    console.log(favorites);\n    store.set(\"favorite\", favorites);\n    store.set(\"bundle\", bundles);\n    this.setState({\n      favorites,\n      bundles\n    });\n  }\n\n  runBundle(key) {\n    const bundle = this.state.bundles[key];\n    bundle.map(fav => {\n      const {\n        searchquery,\n        replacestring\n      } = fav;\n      this.props.apolloClient.query({\n        query: SEARCH_PRODUCTS,\n        variables: {\n          searchquery\n        }\n      }).then(response => {\n        if (response && response.data && response.data.products) {\n          this.handleReplace(response.data.products, searchquery, replacestring);\n        } else {\n          console.log(\"no item found\");\n        }\n      });\n    });\n  }\n\n  render() {\n    const app = this.context;\n\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/edit-products');\n    };\n\n    return __jsx(\"div\", null, __jsx(Card, null, __jsx(ResourceList, {\n      resourceName: {\n        singular: 'favorite',\n        plural: 'favorites'\n      },\n      items: this.ObjtoArray(this.state.favorites),\n      selectedItems: this.state.selectedItems,\n      onSelectionChange: this.setSelectedItems.bind(this),\n      selectable: true,\n      promotedBulkActions: [{\n        content: 'Bundle',\n        onAction: () => this.createBundle()\n      }],\n      renderItem: item => {\n        const {\n          key,\n          searchquery,\n          replacestring,\n          matchcase,\n          scopes\n        } = item;\n        const shortcutActions = [{\n          content: 'Run',\n          onAction: () => this.runFavorite(key)\n        }, {\n          content: 'Remove',\n          onAction: () => this.removeFavorite(key)\n        }];\n        return __jsx(ResourceItem, {\n          id: key,\n          shortcutActions: shortcutActions,\n          persistActions: true,\n          name: searchquery\n        }, __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, searchquery, \" | \"), __jsx(TextStyle, {\n          variation: \"subdued\"\n        }, \"in (\", scopes.toString(), \")\")), __jsx(\"div\", null, \"Replace with :\\\"\", replacestring, \"\\\" \", matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"));\n      }\n    })), __jsx(Card, null, __jsx(ResourceList, {\n      resourceName: {\n        singular: 'bundle',\n        plural: 'bundles'\n      },\n      items: this.ArrayobjtoArray(this.state.bundles),\n      renderItem: item => {\n        const {\n          key,\n          content\n        } = item;\n        console.log(item);\n        const shortcutActions = [{\n          content: 'Run',\n          onAction: () => this.runBundle(key)\n        }, {\n          content: 'Unbundle',\n          onAction: () => this.unbundle(key)\n        }];\n        return __jsx(ResourceItem, {\n          id: key,\n          shortcutActions: shortcutActions\n        }, __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, \"Bundle\")), content.map(item => {\n          return __jsx(\"div\", null, \"Find: \\\"\", item.searchquery, \"\\\" in (\", item.scopes.toString(), \"); Replace with :\\\"\", item.replacestring, \"\\\" \", item.matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\");\n        }));\n      }\n    })));\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/components/FavoriteList.js"],"names":["gql","Query","Mutation","Card","ResourceList","Stack","TextStyle","ResourceItem","TextField","Thumbnail","DataTable","Button","Checkbox","Icon","StarFilledMinor","StarOutlineMinor","store","Redirect","Context","useMutation","_","UPDATE_PRODUCTS","SEARCH_PRODUCTS","ResourceListWithProducts","React","Component","favorites","bundles","selectedItems","data","searchquery","replacestring","scopes","matchcase","regsearchquery","RegExp","getRegexCase","result","id","map","sco","tag","replace","console","log","products","length","edges","item","props","apolloClient","mutate","mutation","variables","input","transformData","node","then","response","setSelectedItems","setState","ObjtoArray","obj","key","ArrayobjtoArray","content","componentDidMount","get","runFavorite","state","query","handleReplace","removeFavorite","set","createBundle","newbundle","reduce","bundle","fav","newbundlekey","join","newbundles","unbundle","hashedfav","sort","x","toString","runBundle","render","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","singular","plural","bind","onAction","shortcutActions"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    ResourceItem,\n    TextField,\n    Thumbnail,\n    DataTable,\n    Button,\n    Checkbox,\n    Icon\n } from '@shopify/polaris';\n import {\n  StarFilledMinor,\n  StarOutlineMinor\n} from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash'\nimport './ResourceList.css'\nimport{ UPDATE_PRODUCTS, SEARCH_PRODUCTS }from \"./graphql.js\"\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n    state = {\n        favorites:{},\n        bundles:{},\n        selectedItems: [],\n\n    }\n    getRegexCase(matchcase){return matchcase ? \"g\" : \"gi\"}\n    transformData = (data, searchquery, replacestring, scopes, matchcase)=>{\n        const regsearchquery = new RegExp(searchquery, this.getRegexCase(matchcase));\n        let result = {id:data.id}\n        scopes.map(sco=>{\n            if(sco===\"tags\"){\n                result[sco] = data[sco].map(tag=>tag.replace(regsearchquery, replacestring))\n            }else if(sco===\"description\"){\n                result[\"descriptionHtml\"] = data[sco].replace(regsearchquery, replacestring)\n            }else{\n                result[sco] = data[sco].replace(regsearchquery, replacestring)\n            }\n        })\n        console.log(result)\n        return result\n    }\n    handleReplace = (products, searchquery, replacestring, scopes, matchcase) => {\n        if(!products || products.length<1){\n            return \n        }\n        products.edges.map(item=>{\n            this.props.apolloClient.mutate({\n                mutation: UPDATE_PRODUCTS,\n                variables:{input:this.transformData(item.node, searchquery, replacestring, scopes, matchcase)}\n            })\n            .then(response=>{\n                console.log(response)\n            })\n        })\n    }\n\n    setSelectedItems(selectedItems){\n        console.log(selectedItems)\n        return this.setState({selectedItems})\n    }\n\n    ObjtoArray(obj){\n        return Object.keys(obj).map((key)=>{\n            return {...obj[key], key}\n        })\n    }\n    ArrayobjtoArray(obj){\n        return Object.keys(obj).map((key)=>{\n            return {content: obj[key], key}\n        })\n    }\n    componentDidMount(){\n        const favorites = store.get(\"favorite\") ? store.get(\"favorite\") : {}\n        const bundles = store.get(\"bundle\") ? store.get(\"bundle\") : {}\n        // if(Object.keys.length(bundles)===0){\n        //     store.set(\"bundle\",{})\n        // }\n        console.log(favorites)\n        console.log(bundles)\n        this.setState({favorites, bundles})\n    }\n    runFavorite(key){\n        const  {searchquery, replacestring, scopes, matchcase} = this.state.favorites[key]\n        this.props.apolloClient.query({\n            query: SEARCH_PRODUCTS,\n            variables:{searchquery}\n        })\n        .then(response=>{\n            console.log(response)\n            if(response && response.data && response.data.products){\n                this.handleReplace(response.data.products,searchquery, replacestring, scopes, matchcase)\n            }else{\n                console.log(\"no item found\")\n            }\n        })\n    }\n    removeFavorite(key){\n        const { favorites } = this.state\n        delete favorites[key]\n        store.set(\"favorite\",favorites)\n        this.setState({favorites})\n    }\n\n    createBundle(){\n        const { favorites, bundles } = this.state\n        const newbundle = this.state.selectedItems.reduce((bundle, key)=>{\n            console.log(bundle)\n            const fav = favorites[key]\n            console.log(fav)\n            delete favorites[key]\n            return [...bundle,fav]\n        },[])\n        const newbundlekey = \"bundle:\"+this.state.selectedItems.join(';')\n        console.log(newbundle)\n        console.log(newbundlekey)\n        console.log(favorites)\n        store.set(\"favorite\",favorites)\n        let newbundles\n        if (!store.get('bundle')){\n            console.log(\"no current bundle\")\n            newbundles = {[newbundlekey]:newbundle}\n        }else{\n            newbundles = {...bundles, [newbundlekey]:newbundle}\n        }\n        store.set(\"bundle\",newbundles)\n        this.setState({selectedItems:[], favorites, bundles: newbundles})\n    }\n    \n    unbundle(key){\n        const { favorites, bundles } = this.state\n        const bundle = bundles[key]\n        bundle.map(fav => {\n            const hashedfav = Object.keys(fav).sort().map(x => fav[x].toString()).join(\";\");\n            favorites[hashedfav] = fav\n        })\n        delete bundles[key]\n        console.log(bundles)\n        console.log(favorites)\n        store.set(\"favorite\",favorites)\n        store.set(\"bundle\",bundles)\n        this.setState({favorites, bundles})\n    }\n\n    runBundle(key){\n        const bundle = this.state.bundles[key]\n        bundle.map(fav => {\n            const  {searchquery, replacestring} = fav\n            this.props.apolloClient.query({\n                query: SEARCH_PRODUCTS,\n                variables:{searchquery}\n            })\n            .then(response=>{\n                if(response && response.data && response.data.products){\n                    this.handleReplace(response.data.products,searchquery, replacestring)\n                }else{\n                    console.log(\"no item found\")\n                }\n            })\n        })\n    }\n    \n    render() {\n      const app = this.context;\n      const redirectToProduct = () => {\n        const redirect = Redirect.create(app);\n        redirect.dispatch(\n          Redirect.Action.APP,\n          '/edit-products',\n        );\n      };\n    return (\n        <div>\n        <Card>\n        <ResourceList\n            resourceName={{singular: 'favorite', plural: 'favorites'}}\n            items={this.ObjtoArray(this.state.favorites)}\n            selectedItems={this.state.selectedItems}\n            onSelectionChange={this.setSelectedItems.bind(this)}\n            selectable\n            promotedBulkActions={[\n                {\n                  content: 'Bundle',\n                  onAction: ()=>this.createBundle(),\n                }\n            ]}\n            renderItem={(item) => {\n            const {key, searchquery, replacestring, matchcase, scopes} = item;\n            const shortcutActions = [\n                {\n                    content: 'Run',\n                    onAction: ()=>this.runFavorite(key),\n                }, {\n                    content: 'Remove',\n                    onAction: ()=>this.removeFavorite(key),\n                }]\n              \n            return (\n                <ResourceItem\n                id={key}\n                shortcutActions={shortcutActions}\n                persistActions\n                name={searchquery}\n                >\n                <h3>\n                <TextStyle variation=\"strong\">{searchquery} | </TextStyle>\n                <TextStyle variation=\"subdued\">in ({scopes.toString()})</TextStyle>\n                </h3>\n                <div>Replace with :\"{replacestring}\" {matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"}</div>\n                </ResourceItem>\n            );\n            }}\n        />\n        </Card>\n\n        <Card>\n        <ResourceList\n            resourceName={{singular: 'bundle', plural: 'bundles'}}\n            items={this.ArrayobjtoArray(this.state.bundles)}\n            renderItem={(item) => {\n            const {key, content} = item;\n            console.log(item)\n            const shortcutActions = [\n                {\n                    content: 'Run',\n                    onAction: ()=>this.runBundle(key),\n                }, {\n                    content: 'Unbundle',\n                    onAction: ()=>this.unbundle(key),\n                }]\n              \n            return (\n                <ResourceItem\n                id={key}\n                shortcutActions={shortcutActions}\n                >\n                <h3>\n                    <TextStyle variation=\"strong\">Bundle</TextStyle>\n                </h3>\n                {content.map((item)=>{\n                    return (<div>Find: \"{item.searchquery}\" in ({item.scopes.toString()}); Replace with :\"{item.replacestring}\" {item.matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"}</div>)\n                })}\n                </ResourceItem>\n            );\n            }}\n        />\n        </Card>\n        </div>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}