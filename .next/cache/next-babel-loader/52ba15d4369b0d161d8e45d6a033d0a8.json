{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, ResourceItem, TextField, Thumbnail, DataTable, Button, Checkbox, Icon } from '@shopify/polaris';\nimport { StarFilledMinor, StarOutlineMinor } from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport './ResourceList.css';\nimport { UPDATE_PRODUCTS, SEARCH_PRODUCTS } from \"./graphql.js\";\n\nvar ResourceListWithProducts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  function ResourceListWithProducts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResourceListWithProducts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      favorites: [],\n      selectedItems: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"transformData\", function (data, searchquery, replacestring) {\n      var regexsearchquery = new RegExp(searchquery, \"gi\");\n      var result = {\n        id: data.id,\n        title: data.title.replace(regexsearchquery, replacestring),\n        handle: data.handle.replace(regexsearchquery, replacestring),\n        descriptionHtml: \"<p>\".concat(data.description.replace(regexsearchquery, replacestring), \"</p>\")\n      };\n      return result;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleReplace\", function (products, searchquery, replacestring) {\n      if (!products || products.length < 1) {\n        return;\n      }\n\n      products.edges.map(function (item) {\n        _this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables: {\n            input: _this.transformData(item.node, searchquery, replacestring)\n          }\n        }).then(function (response) {\n          console.log(response);\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"setSelectedItems\",\n    value: function setSelectedItems(selectedItems) {\n      console.log(selectedItems);\n      return this.setState({\n        selectedItems: selectedItems\n      });\n    }\n  }, {\n    key: \"ObjtoArray\",\n    value: function ObjtoArray(favorite) {\n      return _Object$keys(favorite).map(function (key) {\n        return _objectSpread({}, favorite[key], {\n          key: key\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var favorite = store.get(\"favorite\");\n      this.setState({\n        favorites: this.ObjtoArray(favorite)\n      });\n    }\n  }, {\n    key: \"runFavorite\",\n    value: function runFavorite(key) {\n      var _this$state$favorites = this.state.favorites[key],\n          searchquery = _this$state$favorites.searchquery,\n          replacestring = _this$state$favorites.replacestring;\n      this.props.apolloClient.query({\n        query: SEARCH_PRODUCTS,\n        variables: {\n          searchquery: searchquery\n        }\n      }).then(function (response) {\n        handleReplace(response.products, searchquery, replacestring);\n      });\n    }\n  }, {\n    key: \"removeFavorite\",\n    value: function removeFavorite(key) {\n      var favorite = store.get(\"favorite\");\n      delete favorite[key];\n      store.set(\"favorite\", favorite);\n      this.setState({\n        favorites: this.ObjtoArray(favorite)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var app = this.context;\n\n      var redirectToProduct = function redirectToProduct() {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.APP, '/edit-products');\n      };\n\n      return __jsx(\"div\", null, __jsx(Card, null, __jsx(ResourceList, {\n        resourceName: {\n          singular: 'favorite',\n          plural: 'favorites'\n        },\n        items: this.state.favorites,\n        selectedItems: this.state.selectedItems,\n        onSelectionChange: this.setSelectedItems.bind(this),\n        selectable: true,\n        promotedBulkActions: [{\n          content: 'Bundle',\n          onAction: function onAction() {\n            return console.log('Todo: implement bulk edit');\n          }\n        }],\n        renderItem: function renderItem(item) {\n          var key = item.key,\n              searchquery = item.searchquery,\n              replacestring = item.replacestring,\n              matchcase = item.matchcase;\n          var shortcutActions = [{\n            content: 'Run',\n            onAction: _this2.runFavorite(key)\n          }, {\n            content: 'Remove',\n            onAction: _this2.removeFavorite(key)\n          }];\n          return __jsx(ResourceItem, {\n            id: key,\n            url: \"url\",\n            shortcutActions: shortcutActions,\n            name: searchquery\n          }, __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, searchquery)), __jsx(\"div\", null, \"Replace with :\\\"\", replacestring, \"\\\" \", matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"));\n        }\n      })));\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/components/FavoriteList.js"],"names":["gql","Query","Mutation","Card","ResourceList","Stack","TextStyle","ResourceItem","TextField","Thumbnail","DataTable","Button","Checkbox","Icon","StarFilledMinor","StarOutlineMinor","store","Redirect","Context","useMutation","_","UPDATE_PRODUCTS","SEARCH_PRODUCTS","ResourceListWithProducts","favorites","selectedItems","data","searchquery","replacestring","regexsearchquery","RegExp","result","id","title","replace","handle","descriptionHtml","description","products","length","edges","map","item","props","apolloClient","mutate","mutation","variables","input","transformData","node","then","response","console","log","setState","favorite","key","get","ObjtoArray","state","query","handleReplace","set","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","singular","plural","setSelectedItems","bind","content","onAction","matchcase","shortcutActions","runFavorite","removeFavorite","React","Component"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    ResourceItem,\n    TextField,\n    Thumbnail,\n    DataTable,\n    Button,\n    Checkbox,\n    Icon\n } from '@shopify/polaris';\n import {\n  StarFilledMinor,\n  StarOutlineMinor\n} from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash'\nimport './ResourceList.css'\nimport{ UPDATE_PRODUCTS, SEARCH_PRODUCTS }from \"./graphql.js\"\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n    state = {\n        favorites:[],\n        selectedItems: [],\n\n    }\n    transformData = (data, searchquery, replacestring)=>{\n        const regexsearchquery = new RegExp(searchquery, \"gi\");\n        const result = {\n            id:data.id,\n            title: data.title.replace(regexsearchquery, replacestring),\n            handle: data.handle.replace(regexsearchquery, replacestring),\n            descriptionHtml: `<p>${data.description.replace(regexsearchquery, replacestring)}</p>`,\n        }\n        return result\n    }\n    handleReplace = (products, searchquery, replacestring) => {\n        if(!products || products.length<1){\n            return \n        }\n        products.edges.map(item=>{\n            this.props.apolloClient.mutate({\n                mutation: UPDATE_PRODUCTS,\n                variables:{input:this.transformData(item.node, searchquery, replacestring)}\n            })\n            .then(response=>{\n                console.log(response)\n            })\n        })\n    }\n\n    setSelectedItems(selectedItems){\n        console.log(selectedItems)\n        return this.setState({selectedItems})\n    }\n\n    ObjtoArray(favorite){\n        return Object.keys(favorite).map((key)=>{\n            return {...favorite[key], key}\n        })\n    }\n\n    componentDidMount(){\n        const favorite = store.get(\"favorite\")\n        this.setState({favorites:this.ObjtoArray(favorite)})\n    }\n    runFavorite(key){\n        const  {searchquery, replacestring} = this.state.favorites[key]\n        this.props.apolloClient.query({\n            query: SEARCH_PRODUCTS,\n            variables:{searchquery}\n        })\n        .then(response=>{\n            handleReplace(response.products,searchquery, replacestring)\n        })\n    }\n    removeFavorite(key){\n        const favorite = store.get(\"favorite\")\n        delete favorite[key]\n        store.set(\"favorite\",favorite)\n        this.setState({favorites:this.ObjtoArray(favorite)})\n    }\n\n\n    \n    render() {\n      const app = this.context;\n      const redirectToProduct = () => {\n        const redirect = Redirect.create(app);\n        redirect.dispatch(\n          Redirect.Action.APP,\n          '/edit-products',\n        );\n      };\n    return (\n      <div>\n        {/* <div className=\"form-container\">\n          \n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Find\" value={this.state.searchquery} onChange={this.handleChange('searchquery')} />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Replace with\"  value={this.state.replacestring} onChange={this.handleChange('replacestring')} />\n            </div>\n            <Button className=\"form-button\" onClick={this.handleReplace.bind(this)}>Replace </Button>\n            <Button className=\"form-button\" onClick={this.handleReplace.bind(this)}>Replace all</Button>\n          </div>\n\n\n          <div className=\"form-row\">\n            <Checkbox label=\"Match case\" checked={this.state.matchcase} onChange={this.handleChange('matchcase')} />\n            <a onClick={this.toggleFavorite.bind(this)} >\n              <Icon source={this.state.saved ? StarFilledMinor : StarOutlineMinor} />\n              {this.state.saved ? \"Saved\" : \"Save to Favorite\"}\n            </a>\n          </div>\n\n        </div> */}\n\n        <Card>\n        <ResourceList\n            resourceName={{singular: 'favorite', plural: 'favorites'}}\n            items={this.state.favorites}\n            selectedItems={this.state.selectedItems}\n            onSelectionChange={this.setSelectedItems.bind(this)}\n            selectable\n            promotedBulkActions={[\n                {\n                  content: 'Bundle',\n                  onAction: () => console.log('Todo: implement bulk edit'),\n                }\n            ]}\n            renderItem={(item) => {\n            const {key, searchquery, replacestring, matchcase} = item;\n            const shortcutActions = [\n                {\n                    content: 'Run',\n                    onAction: this.runFavorite(key),\n                }, {\n                    content: 'Remove',\n                    onAction: this.removeFavorite(key),\n                }]\n              \n            return (\n                <ResourceItem\n                id={key}\n                url={\"url\"}\n                shortcutActions={shortcutActions}\n                name={searchquery}\n                >\n                <h3>\n                    <TextStyle variation=\"strong\">{searchquery}</TextStyle>\n                </h3>\n                <div>Replace with :\"{replacestring}\" {matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"}</div>\n                </ResourceItem>\n            );\n            }}\n        />\n        </Card>\n      </div>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}