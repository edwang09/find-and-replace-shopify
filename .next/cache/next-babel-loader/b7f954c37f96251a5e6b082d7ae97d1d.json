{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, TextField, Thumbnail, DataTable, Button, Checkbox, Icon, Frame, Toast } from '@shopify/polaris';\nimport { StarFilledMinor, StarOutlineMinor } from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport './ResourceList.css';\nimport { UPDATE_PRODUCTS, LIST_PRODUCTS, constructSearchProduct } from \"./graphql.js\";\n\nclass ResourceListWithProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      fetching: true,\n      loading: false,\n      searchquery: \"\",\n      replacestring: \"\",\n      matchcase: false,\n      saved: false,\n      scopes: [],\n      scopesV: [],\n      products: [],\n      allproducts: []\n    });\n\n    _defineProperty(this, \"handleScopeSelect\", (scope, isVariant) => () => {\n      const scopetype = isVariant ? \"scopesV\" : \"scopes\";\n      const scopes = this.state[scopetype];\n      const selected = this.state[scopetype].findIndex(sco => sco === scope) > -1;\n\n      if (selected) {\n        this.setState({\n          [scopetype]: scopes.filter(sco => sco !== scope)\n        }, () => {\n          this.filterQuery();\n        });\n      } else {\n        this.setState({\n          [scopetype]: [...scopes, scope]\n        }, () => {\n          this.filterQuery();\n        });\n      }\n    });\n\n    _defineProperty(this, \"toggleFavorite\", () => {\n      console.log(\"toggle fav\");\n      const favorite = store.get('favorite');\n\n      const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase', 'scopes']);\n\n      const hashedfav = _Object$keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n\n      if (!this.state.saved) {\n        if (!store.get('favorite')) {\n          console.log(\"no current fav\");\n          console.log(\"hashedfav:\" + hashedfav);\n          store.set(\"favorite\", {\n            [hashedfav]: searchform\n          });\n        } else {\n          console.log(store.get('favorite'));\n          store.set(\"favorite\", _objectSpread({}, favorite, {\n            [hashedfav]: searchform\n          }));\n        }\n\n        this.setState({\n          saved: true\n        });\n      } else {\n        delete favorite[hashedfav];\n        store.set(\"favorite\", favorite);\n        this.setState({\n          saved: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleChange\", field => value => {\n      this.setState({\n        [field]: value\n      }, () => {\n        const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase', 'scopes']);\n\n        const hashedfav = _Object$keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n\n        const saved = store.get('favorite') && store.get('favorite')[hashedfav];\n        this.setState({\n          saved\n        });\n        this.filterQuery();\n      });\n    });\n\n    _defineProperty(this, \"handleReplace\", () => {\n      if (!this.state.products || this.state.products.length < 1) {\n        return;\n      }\n\n      this.setState({\n        loading: true\n      });\n      let promises = this.state.products.length;\n      this.state.products.map((item, idx) => {\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables: {\n            input: this.transformData(item.node)\n          }\n        }).then(response => {\n          console.log(response);\n          promises -= 1;\n\n          if (promises === 0) {\n            this.fetchQuery();\n            this.setState({\n              loading: false,\n              showtoast: true,\n              toastcontent: `${promises} products changed.`\n            });\n          }\n        });\n      });\n    });\n\n    _defineProperty(this, \"transformData\", data => {\n      const searchquery = new RegExp(this.state.searchquery, this.getRegexCase());\n      let result = {\n        id: data.id\n      };\n      this.state.scopes.map(sco => {\n        if (sco === \"tags\") {\n          result[sco] = data[sco].map(tag => tag.replace(searchquery, this.state.replacestring));\n        } else if (sco === \"description\") {\n          result[\"descriptionHtml\"] = data[sco].replace(searchquery, this.state.replacestring);\n        } else {\n          result[sco] = data[sco].replace(searchquery, this.state.replacestring);\n        }\n      });\n      console.log(result);\n      return result;\n    });\n\n    _defineProperty(this, \"InjectHighlight\", text => {\n      if (!text) {\n        return \"NA\";\n      }\n\n      const replace = new RegExp(this.state.searchquery, this.getRegexCase());\n      return __jsx(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: text.replace(replace, function (x) {\n            return `<span style=\"background-color:yellow\">${x}</span>`;\n          })\n        }\n      });\n    });\n\n    _defineProperty(this, \"ConvertDatatoTable\", data => {\n      if (!data || data.length < 1) {\n        return [[]];\n      }\n\n      return data.map(item => {\n        const node = item.node;\n        return this.getHeader().map(sco => {\n          if (sco === \"tags\") {\n            if (this.state.scopes.findIndex(scope => sco === scope) == -1) {\n              return node[sco].join(\"/n\");\n            }\n\n            return this.InjectHighlight(node[sco].join(\"/n\"));\n          }\n\n          if (this.state.scopes.findIndex(scope => sco === scope) == -1) {\n            return node[sco];\n          }\n\n          return this.InjectHighlight(node[sco]);\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchQuery();\n  }\n\n  getRegexCase() {\n    return this.state.matchcase ? \"g\" : \"gi\";\n  }\n\n  fetchQuery() {\n    console.log(\"fetch\");\n    this.setState({\n      fetching: true\n    });\n    this.props.apolloClient.query({\n      query: LIST_PRODUCTS\n    }).then(response => this.setState({\n      allproducts: response.data.products.edges,\n      fetching: false\n    }, () => {\n      this.filterQuery();\n    }));\n  }\n\n  filterQuery() {\n    console.log(\"filter\");\n\n    if (this.state.searchquery !== \"\" && this.state.scopes.length + this.state.scopesV.length !== 0 && this.state.allproducts !== 0) {\n      const currentproducts = this.state.allproducts.filter(prod => {\n        const regx = new RegExp(this.state.searchquery, this.getRegexCase());\n        return this.state.scopes.some(sco => {\n          if (sco === \"tags\") {\n            return prod.node[sco].join(\"/n\").search(regx) > -1;\n          }\n\n          return prod.node[sco].search(regx) > -1;\n        });\n      });\n      console.log(currentproducts);\n      this.setState({\n        products: currentproducts\n      });\n    } else {\n      this.setState({\n        products: []\n      });\n    }\n  }\n\n  getHeader() {\n    return [\"title\", \"handle\", ...this.state.scopes.filter(sco => sco !== \"title\" && sco !== \"handle\")];\n  }\n\n  getHeaderType() {\n    return Array(this.state.scopes.length).fill('text');\n  }\n\n  isScopeSelected(scope, isVariant) {\n    if (isVariant) {\n      return this.state.scopesV.findIndex(sco => sco === scope) > -1;\n    }\n\n    return this.state.scopes.findIndex(sco => sco === scope) > -1;\n  }\n\n  render() {\n    const app = this.context; // const redirectToProduct = () => {\n    //   const redirect = Redirect.create(app);\n    //   redirect.dispatch(\n    //     Redirect.Action.APP,\n    //     '/edit-products',\n    //   );\n    // };\n\n    const selectoptions = [{\n      label: \"products\",\n      value: \"products\"\n    }, {\n      label: \"products\",\n      value: \"products\"\n    }, {\n      label: \"products\",\n      value: \"products\"\n    }];\n    return __jsx(Frame, null, __jsx(\"div\", {\n      className: \"form-container\"\n    }, __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(\"div\", {\n      className: \"form-input\"\n    }, __jsx(TextField, {\n      placeholder: \"Find\",\n      value: this.state.searchquery,\n      onChange: this.handleChange('searchquery')\n    }))), __jsx(\"h3\", null, __jsx(\"b\", null, \"Include fields: \")), __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(Checkbox, {\n      label: \"Title\",\n      checked: this.isScopeSelected('title'),\n      onChange: this.handleScopeSelect('title')\n    }), __jsx(Checkbox, {\n      label: \"Handle\",\n      checked: this.isScopeSelected('handle'),\n      onChange: this.handleScopeSelect('handle')\n    }), __jsx(Checkbox, {\n      label: \"Product types\",\n      checked: this.isScopeSelected('productType'),\n      onChange: this.handleScopeSelect('productType')\n    }), __jsx(Checkbox, {\n      label: \"Vendor\",\n      checked: this.isScopeSelected('vendor'),\n      onChange: this.handleScopeSelect('vendor')\n    }), __jsx(Checkbox, {\n      label: \"Tags\",\n      checked: this.isScopeSelected('tags'),\n      onChange: this.handleScopeSelect('tags')\n    }), __jsx(Checkbox, {\n      label: \"Description\",\n      checked: this.isScopeSelected('description'),\n      onChange: this.handleScopeSelect('description')\n    })), __jsx(\"h3\", null, __jsx(\"b\", null, \"Variant fields\"), \"(not in use): \"), __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(Checkbox, {\n      label: \"Price\",\n      checked: this.isScopeSelected('price', true),\n      onChange: this.handleScopeSelect('price', true)\n    }), __jsx(Checkbox, {\n      label: \"SKU\",\n      checked: this.isScopeSelected('sku', true),\n      onChange: this.handleScopeSelect('sku', true)\n    })), __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(\"div\", {\n      className: \"form-input\"\n    }, __jsx(TextField, {\n      placeholder: \"Replace with\",\n      value: this.state.replacestring,\n      onChange: this.handleChange('replacestring')\n    })), __jsx(Button, {\n      className: \"form-button\",\n      loading: this.state.loading,\n      onClick: this.handleReplace.bind(this)\n    }, \"Replace \")), __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(Checkbox, {\n      label: \"Match case\",\n      checked: this.state.matchcase,\n      onChange: this.handleChange('matchcase')\n    }), __jsx(\"a\", {\n      className: \"form-item\",\n      onClick: this.toggleFavorite.bind(this)\n    }, __jsx(Icon, {\n      source: this.state.saved ? StarFilledMinor : StarOutlineMinor\n    }), __jsx(\"p\", null, this.state.saved ? \"Saved\" : \"Save to Favorite\")))), __jsx(Card, null, __jsx(DataTable, {\n      columnContentTypes: this.getHeaderType(),\n      headings: this.getHeader(),\n      rows: this.ConvertDatatoTable(this.state.products)\n    })), this.state.showtoast ? __jsx(Toast, {\n      content: this.state.toastcontent,\n      onDismiss: () => this.setState({\n        showtoast: false\n      })\n    }) : null);\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/components/ResourceList.js"],"names":["gql","Query","Mutation","Card","ResourceList","Stack","TextStyle","TextField","Thumbnail","DataTable","Button","Checkbox","Icon","Frame","Toast","StarFilledMinor","StarOutlineMinor","store","Redirect","Context","useMutation","_","UPDATE_PRODUCTS","LIST_PRODUCTS","constructSearchProduct","ResourceListWithProducts","React","Component","fetching","loading","searchquery","replacestring","matchcase","saved","scopes","scopesV","products","allproducts","scope","isVariant","scopetype","state","selected","findIndex","sco","setState","filter","filterQuery","console","log","favorite","get","searchform","pick","hashedfav","sort","map","x","toString","join","set","field","value","length","promises","item","idx","props","apolloClient","mutate","mutation","variables","input","transformData","node","then","response","fetchQuery","showtoast","toastcontent","data","RegExp","getRegexCase","result","id","tag","replace","text","__html","getHeader","InjectHighlight","componentDidMount","query","edges","currentproducts","prod","regx","some","search","getHeaderType","Array","fill","isScopeSelected","render","app","context","selectoptions","label","handleChange","handleScopeSelect","handleReplace","bind","toggleFavorite","ConvertDatatoTable"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    TextField,\n    Thumbnail,\n    DataTable,\n    Button,\n    Checkbox,\n    Icon,\n    Frame,\n    Toast\n } from '@shopify/polaris';\n import {\n  StarFilledMinor,\n  StarOutlineMinor\n} from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash'\nimport './ResourceList.css'\nimport{ UPDATE_PRODUCTS, LIST_PRODUCTS, constructSearchProduct }from \"./graphql.js\"\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n    state = {\n      fetching:true,\n      loading:false,\n        searchquery: \"\",\n        replacestring:\"\",\n        matchcase:false,\n        saved: false,\n        scopes:[],\n        scopesV:[],\n        products:[],\n        allproducts:[]\n    }\n    componentDidMount(){\n      this.fetchQuery()\n    }\n    getRegexCase(){return this.state.matchcase ? \"g\" : \"gi\"}\n\n    fetchQuery(){\n      console.log(\"fetch\")\n      this.setState({fetching:true})\n      this.props.apolloClient.query({query: LIST_PRODUCTS}).then(response=>this.setState({allproducts:response.data.products.edges,fetching:false},()=>{\n        this.filterQuery()\n      }))\n    }\n\n    filterQuery(){\n      console.log(\"filter\")\n      if(this.state.searchquery!==\"\" && (this.state.scopes.length + this.state.scopesV.length !== 0) && (this.state.allproducts !== 0) ){\n        const currentproducts = this.state.allproducts.filter(prod=>{\n          const regx = new RegExp(this.state.searchquery, this.getRegexCase());\n          return this.state.scopes.some(sco=>{\n            if(sco===\"tags\"){\n              return (prod.node[sco].join(\"/n\").search(regx)>-1)\n            }\n            return (prod.node[sco].search(regx)>-1)\n          })\n        })\n        console.log(currentproducts)\n        this.setState({products: currentproducts})\n      }else{\n        this.setState({products:[]})\n      }\n    }\n\n    getHeader(){\n      return [\"title\",\"handle\",...this.state.scopes.filter(sco=>(sco!==\"title\" && sco!==\"handle\"))]\n    }\n    getHeaderType(){\n      return Array(this.state.scopes.length).fill('text')\n    }\n\n    isScopeSelected(scope,isVariant){\n      if(isVariant){\n        return (this.state.scopesV.findIndex(sco=>sco===scope)>-1)\n      }\n      return (this.state.scopes.findIndex(sco=>sco===scope)>-1)\n    }\n\n    handleScopeSelect=(scope,isVariant)=>()=>{\n      const scopetype = isVariant ? \"scopesV\" : \"scopes\"\n      const scopes = this.state[scopetype]\n      const selected = (this.state[scopetype].findIndex(sco=>sco===scope)>-1)\n      if (selected){\n        this.setState({[scopetype]: scopes.filter(sco=>sco!==scope)},()=>{\n          this.filterQuery()\n        })\n      }else{\n        this.setState({[scopetype]: [...scopes,scope]},()=>{\n          this.filterQuery()\n        })\n      }\n    }\n\n    toggleFavorite = () => {\n      console.log(\"toggle fav\")\n      const favorite = store.get('favorite')\n      const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase','scopes'])\n      const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n      if(!this.state.saved){\n        if (!store.get('favorite')){\n          console.log(\"no current fav\")\n          console.log(\"hashedfav:\" + hashedfav)\n          store.set(\"favorite\",{[hashedfav]:searchform})\n        }else{\n          console.log(store.get('favorite'))\n          store.set(\"favorite\",{...favorite, [hashedfav]:searchform})\n        }\n        this.setState({ saved:true })\n      }else{\n        delete favorite[hashedfav]\n        store.set(\"favorite\",favorite)\n        this.setState({ saved:false })\n      }\n    }\n\n    handleChange = (field) =>  (value) => {\n      this.setState({ [field]: value }, ()=>{\n        const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase','scopes'])\n        const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n        const saved = store.get('favorite') && store.get('favorite')[hashedfav]\n        this.setState({ saved })\n        this.filterQuery()\n      })\n    };\n\n    handleReplace = () => {\n      if(!this.state.products || this.state.products.length<1){\n        return \n      }\n      this.setState({ loading:true })\n      let promises=this.state.products.length\n      this.state.products.map((item,idx)=>{\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables:{input:this.transformData(item.node)}\n        })\n        .then(response=>{\n          console.log(response)\n          promises -=1\n          if(promises===0){\n            this.fetchQuery()\n            this.setState({ loading:false, showtoast:true, toastcontent: `${promises} products changed.` })\n          }\n        })\n      })\n    }\n\n    transformData = (data)=>{\n      const searchquery = new RegExp(this.state.searchquery, this.getRegexCase());\n      let result = {id:data.id}\n      this.state.scopes.map(sco=>{\n        if(sco===\"tags\"){\n          result[sco] = data[sco].map(tag=>tag.replace(searchquery, this.state.replacestring))\n        }else if(sco===\"description\"){\n          result[\"descriptionHtml\"] = data[sco].replace(searchquery, this.state.replacestring)\n        }else{\n          result[sco] = data[sco].replace(searchquery, this.state.replacestring)\n        }\n      })\n      console.log(result)\n      return result\n    }\n\n    InjectHighlight = (text) => {\n      if (!text){\n        return \"NA\"\n      }\n      const replace = new RegExp(this.state.searchquery, this.getRegexCase());\n      return (\n        <span\n          dangerouslySetInnerHTML={{\n            __html : text.replace(replace, function (x) {\n              return `<span style=\"background-color:yellow\">${x}</span>`;\n            })\n          }} />\n      )\n    }\n\n    ConvertDatatoTable = (data) =>{\n      if (!data || data.length < 1){\n        return [[]]\n      }\n      return data.map(item=>{\n        const node = item.node\n        return this.getHeader().map(sco=>{\n          if(sco===\"tags\"){\n            if (this.state.scopes.findIndex(scope=>sco===scope)==-1){\n              return node[sco].join(\"/n\")\n            }\n            return this.InjectHighlight(node[sco].join(\"/n\"))\n          }\n          if (this.state.scopes.findIndex(scope=>sco===scope)==-1){\n            return node[sco]\n          }\n          return this.InjectHighlight(node[sco])\n        })\n      })\n    }\n    \n    render() {\n      const app = this.context;\n      // const redirectToProduct = () => {\n      //   const redirect = Redirect.create(app);\n      //   redirect.dispatch(\n      //     Redirect.Action.APP,\n      //     '/edit-products',\n      //   );\n      // };\n      const selectoptions = [\n        {label:\"products\",value:\"products\"},\n        {label:\"products\",value:\"products\"},\n        {label:\"products\",value:\"products\"},\n      ]\n    return (\n      <Frame>\n        <div className=\"form-container\">\n          \n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Find\" value={this.state.searchquery} onChange={this.handleChange('searchquery')} />\n            </div>\n          </div>\n          \n          <h3><b>Include fields: </b></h3>\n          <div className=\"form-row\">\n              <Checkbox label=\"Title\" checked={this.isScopeSelected('title')} onChange={this.handleScopeSelect('title')} />\n              <Checkbox label=\"Handle\" checked={this.isScopeSelected('handle')} onChange={this.handleScopeSelect('handle')} />\n              <Checkbox label=\"Product types\" checked={this.isScopeSelected('productType')} onChange={this.handleScopeSelect('productType')} />\n              <Checkbox label=\"Vendor\" checked={this.isScopeSelected('vendor')} onChange={this.handleScopeSelect('vendor')} />\n              <Checkbox label=\"Tags\" checked={this.isScopeSelected('tags')} onChange={this.handleScopeSelect('tags')} />\n              <Checkbox label=\"Description\" checked={this.isScopeSelected('description')} onChange={this.handleScopeSelect('description')} />\n          </div>\n\n          <h3><b>Variant fields</b>(not in use): </h3>\n          <div className=\"form-row\">\n              <Checkbox label=\"Price\" checked={this.isScopeSelected('price',true)} onChange={this.handleScopeSelect('price',true)} />\n              <Checkbox label=\"SKU\" checked={this.isScopeSelected('sku',true)} onChange={this.handleScopeSelect('sku',true)} />\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Replace with\"  value={this.state.replacestring} onChange={this.handleChange('replacestring')} />\n            </div>\n            <Button className=\"form-button\" loading={this.state.loading} onClick={this.handleReplace.bind(this)}>Replace </Button>\n            {/* <Button className=\"form-button\" loading={this.state.loading} onClick={this.handleReplace.bind(this)}>Replace all</Button> */}\n          </div>\n\n\n          <div className=\"form-row\">\n            <Checkbox label=\"Match case\" checked={this.state.matchcase} onChange={this.handleChange('matchcase')} />\n            <a  className=\"form-item\" onClick={this.toggleFavorite.bind(this)} >\n              <Icon source={this.state.saved ? StarFilledMinor : StarOutlineMinor} />\n              <p>{this.state.saved ? \"Saved\" : \"Save to Favorite\"}</p>\n            </a>\n          </div>\n\n        </div>\n        <Card>\n          <DataTable\n            columnContentTypes={this.getHeaderType()}\n            headings={this.getHeader()}\n            rows={this.ConvertDatatoTable(this.state.products)}\n          />\n        </Card>\n        {this.state.showtoast ? (<Toast content={this.state.toastcontent} onDismiss={() => this.setState({showtoast:false})} />) : null}\n      </Frame>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}