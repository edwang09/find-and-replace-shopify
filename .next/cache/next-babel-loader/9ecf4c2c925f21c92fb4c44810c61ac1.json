{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, TextField, Thumbnail, DataTable, Button, Checkbox, Icon, Select } from '@shopify/polaris';\nimport { StarFilledMinor, StarOutlineMinor } from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport './ResourceList.css';\nimport { UPDATE_PRODUCTS, LIST_PRODUCTS, constructSearchProduct } from \"./graphql.js\";\n\nclass ResourceListWithProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      searchquery: \"\",\n      replacestring: \"\",\n      matchcase: false,\n      saved: false,\n      scopes: [],\n      scopesV: [],\n      products: [],\n      allproducts: []\n    });\n\n    _defineProperty(this, \"handleScopeSelect\", (scope, isVariant) => () => {\n      const scopetype = isVariant ? \"scopesV\" : \"scopes\";\n      const scopes = this.state[scopetype];\n      const selected = this.state[scopetype].findIndex(sco => sco === scope) > -1;\n\n      if (selected) {\n        this.setState({\n          [scopetype]: scopes.filter(sco => sco !== scope)\n        }, () => {\n          this.filterQuery();\n        });\n      } else {\n        this.setState({\n          [scopetype]: [...scopes, scope]\n        }, () => {\n          this.filterQuery();\n        });\n      }\n    });\n\n    _defineProperty(this, \"toggleFavorite\", () => {\n      console.log(\"toggle fav\");\n      const favorite = store.get('favorite');\n\n      const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase']);\n\n      const hashedfav = _Object$keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n\n      if (!this.state.saved) {\n        if (!store.get('favorite')) {\n          console.log(\"no current fav\");\n          console.log(\"hashedfav:\" + hashedfav);\n          store.set(\"favorite\", {\n            [hashedfav]: searchform\n          });\n        } else {\n          console.log(store.get('favorite'));\n          store.set(\"favorite\", _objectSpread({}, favorite, {\n            [hashedfav]: searchform\n          }));\n        }\n\n        this.setState({\n          saved: true\n        });\n      } else {\n        delete favorite[hashedfav];\n        store.set(\"favorite\", favorite);\n        this.setState({\n          saved: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleChange\", field => value => {\n      this.setState({\n        [field]: value\n      }, () => {\n        const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase']);\n\n        const hashedfav = _Object$keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n\n        const saved = store.get('favorite') && store.get('favorite')[hashedfav];\n        this.setState({\n          saved\n        });\n        this.filterQuery();\n      });\n    });\n\n    _defineProperty(this, \"handleReplace\", () => {\n      if (!this.state.products || this.state.products.length < 1) {\n        return;\n      }\n\n      this.state.products.edges.map(item => {\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables: {\n            input: this.transformData(item.node)\n          }\n        }).then(response => {\n          console.log(response);\n        });\n      });\n      this.setState({\n        searchquery: \"\",\n        replacestring: \"\"\n      }, () => this.fetchQuery());\n    });\n\n    _defineProperty(this, \"transformData\", data => {\n      const searchquery = new RegExp(this.state.searchquery, \"gi\");\n      const result = {\n        id: data.id,\n        title: data.title.replace(searchquery, this.state.replacestring),\n        handle: data.handle.replace(searchquery, this.state.replacestring),\n        descriptionHtml: `<p>${data.description.replace(searchquery, this.state.replacestring)}</p>`\n      };\n      return result;\n    });\n\n    _defineProperty(this, \"InjectHighlight\", text => {\n      if (!text) {\n        return \"NA\";\n      }\n\n      const replace = new RegExp(this.state.searchquery, \"gi\");\n      return __jsx(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: text.replace(replace, function (x) {\n            return `<span style=\"background-color:yellow\">${x}</span>`;\n          })\n        }\n      });\n    });\n\n    _defineProperty(this, \"ConvertDatatoTable\", data => {\n      if (!data || data.length < 1) {\n        return [[]];\n      }\n\n      return data.map(item => {\n        const node = item.node;\n        return this.getHeader().map(sco => {\n          if (sco === \"tags\") {\n            return this.InjectHighlight(node[sco].join(\"/n\"));\n          }\n\n          return this.InjectHighlight(node[sco]);\n        });\n      });\n    });\n  }\n\n  componentDidMount() {\n    this.fetchQuery();\n  }\n\n  fetchQuery() {\n    console.log(\"fetch\");\n    this.props.apolloClient.query({\n      query: LIST_PRODUCTS\n    }).then(response => this.setState({\n      allproducts: response.data.products\n    }));\n  }\n\n  filterQuery() {\n    console.log(\"filter\");\n\n    if (this.state.searchquery !== \"\" && this.state.scopes.length + this.state.scopesV.length !== 0) {\n      const currentproducts = this.state.allproducts.edges.filter(prod => {\n        const regx = new RegExp(this.state.searchquery, \"gi\");\n        return this.state.scopes.some(sco => prod.node[sco].search(regx) > -1);\n      });\n      console.log(currentproducts);\n      this.setState({\n        products: currentproducts\n      });\n    } else {\n      this.setState({\n        products: []\n      });\n    }\n  }\n\n  getHeader() {\n    return [\"title\", \"handle\", ...this.state.scopes.filter(sco => sco !== \"title\" && sco !== \"handle\")];\n  }\n\n  getHeaderType() {\n    return Array(this.state.scopes.length).fill('text');\n  }\n\n  isScopeSelected(scope, isVariant) {\n    if (isVariant) {\n      return this.state.scopesV.findIndex(sco => sco === scope) > -1;\n    }\n\n    return this.state.scopes.findIndex(sco => sco === scope) > -1;\n  }\n\n  render() {\n    const app = this.context;\n\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/edit-products');\n    };\n\n    const selectoptions = [{\n      label: \"products\",\n      value: \"products\"\n    }, {\n      label: \"products\",\n      value: \"products\"\n    }, {\n      label: \"products\",\n      value: \"products\"\n    }];\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"form-container\"\n    }, __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(\"div\", {\n      className: \"form-input\"\n    }, __jsx(TextField, {\n      placeholder: \"Find\",\n      value: this.state.searchquery,\n      onChange: this.handleChange('searchquery')\n    }))), __jsx(\"h3\", null, \"Include fields: \"), __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(Checkbox, {\n      label: \"Title\",\n      checked: this.isScopeSelected('title'),\n      onChange: this.handleScopeSelect('title')\n    }), __jsx(Checkbox, {\n      label: \"Handle\",\n      checked: this.isScopeSelected('handle'),\n      onChange: this.handleScopeSelect('handle')\n    }), __jsx(Checkbox, {\n      label: \"Product types\",\n      checked: this.isScopeSelected('productType'),\n      onChange: this.handleScopeSelect('productType')\n    }), __jsx(Checkbox, {\n      label: \"Vendor\",\n      checked: this.isScopeSelected('vendor'),\n      onChange: this.handleScopeSelect('vendor')\n    }), __jsx(Checkbox, {\n      label: \"Tags\",\n      checked: this.isScopeSelected('tags'),\n      onChange: this.handleScopeSelect('tags')\n    }), __jsx(Checkbox, {\n      label: \"Description\",\n      checked: this.isScopeSelected('description'),\n      onChange: this.handleScopeSelect('description')\n    })), __jsx(\"h3\", null, \"Variant fields: \"), __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(Checkbox, {\n      label: \"Price\",\n      checked: this.isScopeSelected('price', true),\n      onChange: this.handleScopeSelect('price', true)\n    }), __jsx(Checkbox, {\n      label: \"SKU\",\n      checked: this.isScopeSelected('sku', true),\n      onChange: this.handleScopeSelect('sku', true)\n    })), __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(\"div\", {\n      className: \"form-input\"\n    }, __jsx(TextField, {\n      placeholder: \"Replace with\",\n      value: this.state.replacestring,\n      onChange: this.handleChange('replacestring')\n    })), __jsx(Button, {\n      className: \"form-button\",\n      onClick: this.handleReplace.bind(this)\n    }, \"Replace \"), __jsx(Button, {\n      className: \"form-button\",\n      onClick: this.handleReplace.bind(this)\n    }, \"Replace all\")), __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(Checkbox, {\n      label: \"Match case\",\n      checked: this.state.matchcase,\n      onChange: this.handleChange('matchcase')\n    }), __jsx(\"a\", {\n      onClick: this.toggleFavorite.bind(this)\n    }, __jsx(Icon, {\n      source: this.state.saved ? StarFilledMinor : StarOutlineMinor\n    }), this.state.saved ? \"Saved\" : \"Save to Favorite\"))), __jsx(Card, null, __jsx(DataTable, {\n      columnContentTypes: this.getHeaderType(),\n      headings: this.getHeader(),\n      rows: this.ConvertDatatoTable(this.state.products)\n    })));\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/components/ResourceList.js"],"names":["gql","Query","Mutation","Card","ResourceList","Stack","TextStyle","TextField","Thumbnail","DataTable","Button","Checkbox","Icon","Select","StarFilledMinor","StarOutlineMinor","store","Redirect","Context","useMutation","_","UPDATE_PRODUCTS","LIST_PRODUCTS","constructSearchProduct","ResourceListWithProducts","React","Component","searchquery","replacestring","matchcase","saved","scopes","scopesV","products","allproducts","scope","isVariant","scopetype","state","selected","findIndex","sco","setState","filter","filterQuery","console","log","favorite","get","searchform","pick","hashedfav","sort","map","x","toString","join","set","field","value","length","edges","item","props","apolloClient","mutate","mutation","variables","input","transformData","node","then","response","fetchQuery","data","RegExp","result","id","title","replace","handle","descriptionHtml","description","text","__html","getHeader","InjectHighlight","componentDidMount","query","currentproducts","prod","regx","some","search","getHeaderType","Array","fill","isScopeSelected","render","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","selectoptions","label","handleChange","handleScopeSelect","handleReplace","bind","toggleFavorite","ConvertDatatoTable"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,SAASC,IAAT,EACIC,YADJ,EAEIC,KAFJ,EAGIC,SAHJ,EAIIC,SAJJ,EAKIC,SALJ,EAMIC,SANJ,EAOIC,MAPJ,EAQIC,QARJ,EASIC,IATJ,EAUIC,MAVJ,QAWQ,kBAXR;AAYC,SACCC,eADD,EAECC,gBAFD,QAGM,wBAHN;AAID,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,oBAAP;AACA,SAAQC,eAAR,EAAyBC,aAAzB,EAAwCC,sBAAxC,QAAqE,cAArE;;AAEA,MAAMC,wBAAN,SAAuCC,KAAK,CAACC,SAA7C,CAAuD;AAAA;AAAA;;AAAA,mCAE3C;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,aAAa,EAAC,EAFV;AAGJC,MAAAA,SAAS,EAAC,KAHN;AAIJC,MAAAA,KAAK,EAAE,KAJH;AAKJC,MAAAA,MAAM,EAAC,EALH;AAMJC,MAAAA,OAAO,EAAC,EANJ;AAOJC,MAAAA,QAAQ,EAAC,EAPL;AAQJC,MAAAA,WAAW,EAAC;AARR,KAF2C;;AAAA,+CAiDjC,CAACC,KAAD,EAAOC,SAAP,KAAmB,MAAI;AACvC,YAAMC,SAAS,GAAGD,SAAS,GAAG,SAAH,GAAe,QAA1C;AACA,YAAML,MAAM,GAAG,KAAKO,KAAL,CAAWD,SAAX,CAAf;AACA,YAAME,QAAQ,GAAI,KAAKD,KAAL,CAAWD,SAAX,EAAsBG,SAAtB,CAAgCC,GAAG,IAAEA,GAAG,KAAGN,KAA3C,IAAkD,CAAC,CAArE;;AACA,UAAII,QAAJ,EAAa;AACX,aAAKG,QAAL,CAAc;AAAC,WAACL,SAAD,GAAaN,MAAM,CAACY,MAAP,CAAcF,GAAG,IAAEA,GAAG,KAAGN,KAAzB;AAAd,SAAd,EAA6D,MAAI;AAC/D,eAAKS,WAAL;AACD,SAFD;AAGD,OAJD,MAIK;AACH,aAAKF,QAAL,CAAc;AAAC,WAACL,SAAD,GAAa,CAAC,GAAGN,MAAJ,EAAWI,KAAX;AAAd,SAAd,EAA+C,MAAI;AACjD,eAAKS,WAAL;AACD,SAFD;AAGD;AACF,KA9DkD;;AAAA,4CAgElC,MAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,YAAMC,QAAQ,GAAG/B,KAAK,CAACgC,GAAN,CAAU,UAAV,CAAjB;;AACA,YAAMC,UAAU,GAAG7B,CAAC,CAAC8B,IAAF,CAAO,KAAKZ,KAAZ,EAAmB,CAAC,aAAD,EAAgB,eAAhB,EAAiC,WAAjC,CAAnB,CAAnB;;AACA,YAAMa,SAAS,GAAG,aAAYF,UAAZ,EAAwBG,IAAxB,GAA+BC,GAA/B,CAAmCC,CAAC,IAAIL,UAAU,CAACK,CAAD,CAAV,CAAcC,QAAd,EAAxC,EAAkEC,IAAlE,CAAuE,GAAvE,CAAlB;;AACA,UAAG,CAAC,KAAKlB,KAAL,CAAWR,KAAf,EAAqB;AACnB,YAAI,CAACd,KAAK,CAACgC,GAAN,CAAU,UAAV,CAAL,EAA2B;AACzBH,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAeK,SAA3B;AACAnC,UAAAA,KAAK,CAACyC,GAAN,CAAU,UAAV,EAAqB;AAAC,aAACN,SAAD,GAAYF;AAAb,WAArB;AACD,SAJD,MAIK;AACHJ,UAAAA,OAAO,CAACC,GAAR,CAAY9B,KAAK,CAACgC,GAAN,CAAU,UAAV,CAAZ;AACAhC,UAAAA,KAAK,CAACyC,GAAN,CAAU,UAAV,oBAAyBV,QAAzB;AAAmC,aAACI,SAAD,GAAYF;AAA/C;AACD;;AACD,aAAKP,QAAL,CAAc;AAAEZ,UAAAA,KAAK,EAAC;AAAR,SAAd;AACD,OAVD,MAUK;AACH,eAAOiB,QAAQ,CAACI,SAAD,CAAf;AACAnC,QAAAA,KAAK,CAACyC,GAAN,CAAU,UAAV,EAAqBV,QAArB;AACA,aAAKL,QAAL,CAAc;AAAEZ,UAAAA,KAAK,EAAC;AAAR,SAAd;AACD;AACF,KApFkD;;AAAA,0CAsFnC4B,KAAD,IAAaC,KAAD,IAAW;AACpC,WAAKjB,QAAL,CAAc;AAAE,SAACgB,KAAD,GAASC;AAAX,OAAd,EAAkC,MAAI;AACpC,cAAMV,UAAU,GAAG7B,CAAC,CAAC8B,IAAF,CAAO,KAAKZ,KAAZ,EAAmB,CAAC,aAAD,EAAgB,eAAhB,EAAiC,WAAjC,CAAnB,CAAnB;;AACA,cAAMa,SAAS,GAAG,aAAYF,UAAZ,EAAwBG,IAAxB,GAA+BC,GAA/B,CAAmCC,CAAC,IAAIL,UAAU,CAACK,CAAD,CAAV,CAAcC,QAAd,EAAxC,EAAkEC,IAAlE,CAAuE,GAAvE,CAAlB;;AACA,cAAM1B,KAAK,GAAGd,KAAK,CAACgC,GAAN,CAAU,UAAV,KAAyBhC,KAAK,CAACgC,GAAN,CAAU,UAAV,EAAsBG,SAAtB,CAAvC;AACA,aAAKT,QAAL,CAAc;AAAEZ,UAAAA;AAAF,SAAd;AACA,aAAKc,WAAL;AACD,OAND;AAOD,KA9FkD;;AAAA,2CAgGnC,MAAM;AACpB,UAAG,CAAC,KAAKN,KAAL,CAAWL,QAAZ,IAAwB,KAAKK,KAAL,CAAWL,QAAX,CAAoB2B,MAApB,GAA2B,CAAtD,EAAwD;AACtD;AACD;;AACD,WAAKtB,KAAL,CAAWL,QAAX,CAAoB4B,KAApB,CAA0BR,GAA1B,CAA8BS,IAAI,IAAE;AAClC,aAAKC,KAAL,CAAWC,YAAX,CAAwBC,MAAxB,CAA+B;AAC7BC,UAAAA,QAAQ,EAAE7C,eADmB;AAE7B8C,UAAAA,SAAS,EAAC;AAACC,YAAAA,KAAK,EAAC,KAAKC,aAAL,CAAmBP,IAAI,CAACQ,IAAxB;AAAP;AAFmB,SAA/B,EAICC,IAJD,CAIMC,QAAQ,IAAE;AACd3B,UAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AACD,SAND;AAOD,OARD;AASA,WAAK9B,QAAL,CAAc;AAACf,QAAAA,WAAW,EAAC,EAAb;AAAgBC,QAAAA,aAAa,EAAC;AAA9B,OAAd,EAAgD,MAAI,KAAK6C,UAAL,EAApD;AACD,KA9GkD;;AAAA,2CAgHlCC,IAAD,IAAQ;AACtB,YAAM/C,WAAW,GAAG,IAAIgD,MAAJ,CAAW,KAAKrC,KAAL,CAAWX,WAAtB,EAAmC,IAAnC,CAApB;AACA,YAAMiD,MAAM,GAAG;AACbC,QAAAA,EAAE,EAACH,IAAI,CAACG,EADK;AAEbC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAAL,CAAWC,OAAX,CAAmBpD,WAAnB,EAAgC,KAAKW,KAAL,CAAWV,aAA3C,CAFM;AAGboD,QAAAA,MAAM,EAAEN,IAAI,CAACM,MAAL,CAAYD,OAAZ,CAAoBpD,WAApB,EAAiC,KAAKW,KAAL,CAAWV,aAA5C,CAHK;AAIbqD,QAAAA,eAAe,EAAG,MAAKP,IAAI,CAACQ,WAAL,CAAiBH,OAAjB,CAAyBpD,WAAzB,EAAsC,KAAKW,KAAL,CAAWV,aAAjD,CAAgE;AAJ1E,OAAf;AAMA,aAAOgD,MAAP;AACD,KAzHkD;;AAAA,6CA2HhCO,IAAD,IAAU;AAC1B,UAAI,CAACA,IAAL,EAAU;AACR,eAAO,IAAP;AACD;;AACD,YAAMJ,OAAO,GAAG,IAAIJ,MAAJ,CAAW,KAAKrC,KAAL,CAAWX,WAAtB,EAAmC,IAAnC,CAAhB;AACA,aACE;AACE,QAAA,uBAAuB,EAAE;AACvByD,UAAAA,MAAM,EAAGD,IAAI,CAACJ,OAAL,CAAaA,OAAb,EAAsB,UAAUzB,CAAV,EAAa;AAC1C,mBAAQ,yCAAwCA,CAAE,SAAlD;AACD,WAFQ;AADc;AAD3B,QADF;AAQD,KAxIkD;;AAAA,gDA0I7BoB,IAAD,IAAS;AAC5B,UAAI,CAACA,IAAD,IAASA,IAAI,CAACd,MAAL,GAAc,CAA3B,EAA6B;AAC3B,eAAO,CAAC,EAAD,CAAP;AACD;;AACD,aAAOc,IAAI,CAACrB,GAAL,CAASS,IAAI,IAAE;AACpB,cAAMQ,IAAI,GAAGR,IAAI,CAACQ,IAAlB;AACA,eAAO,KAAKe,SAAL,GAAiBhC,GAAjB,CAAqBZ,GAAG,IAAE;AAC/B,cAAGA,GAAG,KAAG,MAAT,EAAgB;AACd,mBAAO,KAAK6C,eAAL,CAAqBhB,IAAI,CAAC7B,GAAD,CAAJ,CAAUe,IAAV,CAAe,IAAf,CAArB,CAAP;AACD;;AACD,iBAAO,KAAK8B,eAAL,CAAqBhB,IAAI,CAAC7B,GAAD,CAAzB,CAAP;AACD,SALM,CAAP;AAMD,OARM,CAAP;AASD,KAvJkD;AAAA;;AAYnD8C,EAAAA,iBAAiB,GAAE;AACjB,SAAKd,UAAL;AACD;;AAEDA,EAAAA,UAAU,GAAE;AACV5B,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAAKiB,KAAL,CAAWC,YAAX,CAAwBwB,KAAxB,CAA8B;AAACA,MAAAA,KAAK,EAAElE;AAAR,KAA9B,EAAsDiD,IAAtD,CAA2DC,QAAQ,IAAE,KAAK9B,QAAL,CAAc;AAACR,MAAAA,WAAW,EAACsC,QAAQ,CAACE,IAAT,CAAczC;AAA3B,KAAd,CAArE;AACD;;AAEDW,EAAAA,WAAW,GAAE;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,QAAG,KAAKR,KAAL,CAAWX,WAAX,KAAyB,EAAzB,IAAgC,KAAKW,KAAL,CAAWP,MAAX,CAAkB6B,MAAlB,GAA2B,KAAKtB,KAAL,CAAWN,OAAX,CAAmB4B,MAA9C,KAAyD,CAA5F,EAAgG;AAC9F,YAAM6B,eAAe,GAAG,KAAKnD,KAAL,CAAWJ,WAAX,CAAuB2B,KAAvB,CAA6BlB,MAA7B,CAAoC+C,IAAI,IAAE;AAChE,cAAMC,IAAI,GAAG,IAAIhB,MAAJ,CAAW,KAAKrC,KAAL,CAAWX,WAAtB,EAAmC,IAAnC,CAAb;AACA,eAAO,KAAKW,KAAL,CAAWP,MAAX,CAAkB6D,IAAlB,CAAuBnD,GAAG,IAAGiD,IAAI,CAACpB,IAAL,CAAU7B,GAAV,EAAeoD,MAAf,CAAsBF,IAAtB,IAA4B,CAAC,CAA1D,CAAP;AACD,OAHuB,CAAxB;AAIA9C,MAAAA,OAAO,CAACC,GAAR,CAAY2C,eAAZ;AACA,WAAK/C,QAAL,CAAc;AAACT,QAAAA,QAAQ,EAAEwD;AAAX,OAAd;AACD,KAPD,MAOK;AACH,WAAK/C,QAAL,CAAc;AAACT,QAAAA,QAAQ,EAAC;AAAV,OAAd;AACD;AACF;;AAEDoD,EAAAA,SAAS,GAAE;AACT,WAAO,CAAC,OAAD,EAAS,QAAT,EAAkB,GAAG,KAAK/C,KAAL,CAAWP,MAAX,CAAkBY,MAAlB,CAAyBF,GAAG,IAAGA,GAAG,KAAG,OAAN,IAAiBA,GAAG,KAAG,QAAtD,CAArB,CAAP;AACD;;AACDqD,EAAAA,aAAa,GAAE;AACb,WAAOC,KAAK,CAAC,KAAKzD,KAAL,CAAWP,MAAX,CAAkB6B,MAAnB,CAAL,CAAgCoC,IAAhC,CAAqC,MAArC,CAAP;AACD;;AAEDC,EAAAA,eAAe,CAAC9D,KAAD,EAAOC,SAAP,EAAiB;AAC9B,QAAGA,SAAH,EAAa;AACX,aAAQ,KAAKE,KAAL,CAAWN,OAAX,CAAmBQ,SAAnB,CAA6BC,GAAG,IAAEA,GAAG,KAAGN,KAAxC,IAA+C,CAAC,CAAxD;AACD;;AACD,WAAQ,KAAKG,KAAL,CAAWP,MAAX,CAAkBS,SAAlB,CAA4BC,GAAG,IAAEA,GAAG,KAAGN,KAAvC,IAA8C,CAAC,CAAvD;AACD;;AA0GD+D,EAAAA,MAAM,GAAG;AACP,UAAMC,GAAG,GAAG,KAAKC,OAAjB;;AACA,UAAMC,iBAAiB,GAAG,MAAM;AAC9B,YAAMC,QAAQ,GAAGrF,QAAQ,CAACsF,MAAT,CAAgBJ,GAAhB,CAAjB;AACAG,MAAAA,QAAQ,CAACE,QAAT,CACEvF,QAAQ,CAACwF,MAAT,CAAgBC,GADlB,EAEE,gBAFF;AAID,KAND;;AAOA,UAAMC,aAAa,GAAG,CACpB;AAACC,MAAAA,KAAK,EAAC,UAAP;AAAkBjD,MAAAA,KAAK,EAAC;AAAxB,KADoB,EAEpB;AAACiD,MAAAA,KAAK,EAAC,UAAP;AAAkBjD,MAAAA,KAAK,EAAC;AAAxB,KAFoB,EAGpB;AAACiD,MAAAA,KAAK,EAAC,UAAP;AAAkBjD,MAAAA,KAAK,EAAC;AAAxB,KAHoB,CAAtB;AAKF,WACE,mBACE;AAAK,MAAA,SAAS,EAAC;AAAf,OAEE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,SAAD;AAAW,MAAA,WAAW,EAAC,MAAvB;AAA8B,MAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWX,WAAhD;AAA6D,MAAA,QAAQ,EAAE,KAAKkF,YAAL,CAAkB,aAAlB;AAAvE,MADF,CADF,CAFF,EAQE,qCARF,EASE;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAE,KAAKZ,eAAL,CAAqB,OAArB,CAAjC;AAAgE,MAAA,QAAQ,EAAE,KAAKa,iBAAL,CAAuB,OAAvB;AAA1E,MADJ,EAEI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,QAAhB;AAAyB,MAAA,OAAO,EAAE,KAAKb,eAAL,CAAqB,QAArB,CAAlC;AAAkE,MAAA,QAAQ,EAAE,KAAKa,iBAAL,CAAuB,QAAvB;AAA5E,MAFJ,EAGI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,eAAhB;AAAgC,MAAA,OAAO,EAAE,KAAKb,eAAL,CAAqB,aAArB,CAAzC;AAA8E,MAAA,QAAQ,EAAE,KAAKa,iBAAL,CAAuB,aAAvB;AAAxF,MAHJ,EAII,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,QAAhB;AAAyB,MAAA,OAAO,EAAE,KAAKb,eAAL,CAAqB,QAArB,CAAlC;AAAkE,MAAA,QAAQ,EAAE,KAAKa,iBAAL,CAAuB,QAAvB;AAA5E,MAJJ,EAKI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,KAAKb,eAAL,CAAqB,MAArB,CAAhC;AAA8D,MAAA,QAAQ,EAAE,KAAKa,iBAAL,CAAuB,MAAvB;AAAxE,MALJ,EAMI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,aAAhB;AAA8B,MAAA,OAAO,EAAE,KAAKb,eAAL,CAAqB,aAArB,CAAvC;AAA4E,MAAA,QAAQ,EAAE,KAAKa,iBAAL,CAAuB,aAAvB;AAAtF,MANJ,CATF,EAkBE,qCAlBF,EAmBE;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAE,KAAKb,eAAL,CAAqB,OAArB,EAA6B,IAA7B,CAAjC;AAAqE,MAAA,QAAQ,EAAE,KAAKa,iBAAL,CAAuB,OAAvB,EAA+B,IAA/B;AAA/E,MADJ,EAEI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,KAAhB;AAAsB,MAAA,OAAO,EAAE,KAAKb,eAAL,CAAqB,KAArB,EAA2B,IAA3B,CAA/B;AAAiE,MAAA,QAAQ,EAAE,KAAKa,iBAAL,CAAuB,KAAvB,EAA6B,IAA7B;AAA3E,MAFJ,CAnBF,EAwBE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,SAAD;AAAW,MAAA,WAAW,EAAC,cAAvB;AAAuC,MAAA,KAAK,EAAE,KAAKxE,KAAL,CAAWV,aAAzD;AAAwE,MAAA,QAAQ,EAAE,KAAKiF,YAAL,CAAkB,eAAlB;AAAlF,MADF,CADF,EAIE,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAE,KAAKE,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB;AAAzC,kBAJF,EAKE,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAE,KAAKD,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB;AAAzC,qBALF,CAxBF,EAiCE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,YAAhB;AAA6B,MAAA,OAAO,EAAE,KAAK1E,KAAL,CAAWT,SAAjD;AAA4D,MAAA,QAAQ,EAAE,KAAKgF,YAAL,CAAkB,WAAlB;AAAtE,MADF,EAEE;AAAG,MAAA,OAAO,EAAE,KAAKI,cAAL,CAAoBD,IAApB,CAAyB,IAAzB;AAAZ,OACE,MAAC,IAAD;AAAM,MAAA,MAAM,EAAE,KAAK1E,KAAL,CAAWR,KAAX,GAAmBhB,eAAnB,GAAqCC;AAAnD,MADF,EAEG,KAAKuB,KAAL,CAAWR,KAAX,GAAmB,OAAnB,GAA6B,kBAFhC,CAFF,CAjCF,CADF,EA2CE,MAAC,IAAD,QACE,MAAC,SAAD;AACE,MAAA,kBAAkB,EAAE,KAAKgE,aAAL,EADtB;AAEE,MAAA,QAAQ,EAAE,KAAKT,SAAL,EAFZ;AAGE,MAAA,IAAI,EAAE,KAAK6B,kBAAL,CAAwB,KAAK5E,KAAL,CAAWL,QAAnC;AAHR,MADF,CA3CF,CADF;AAsDD;;AA7NoD;;gBAAjDT,wB,iBACmBN,O;;AA+NxB,eAAeM,wBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    TextField,\n    Thumbnail,\n    DataTable,\n    Button,\n    Checkbox,\n    Icon,\n    Select\n } from '@shopify/polaris';\n import {\n  StarFilledMinor,\n  StarOutlineMinor\n} from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash'\nimport './ResourceList.css'\nimport{ UPDATE_PRODUCTS, LIST_PRODUCTS, constructSearchProduct }from \"./graphql.js\"\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n    state = {\n        searchquery: \"\",\n        replacestring:\"\",\n        matchcase:false,\n        saved: false,\n        scopes:[],\n        scopesV:[],\n        products:[],\n        allproducts:[]\n    }\n    componentDidMount(){\n      this.fetchQuery()\n    }\n\n    fetchQuery(){\n      console.log(\"fetch\")\n      this.props.apolloClient.query({query: LIST_PRODUCTS}).then(response=>this.setState({allproducts:response.data.products}))\n    }\n\n    filterQuery(){\n      console.log(\"filter\")\n      if(this.state.searchquery!==\"\" && (this.state.scopes.length + this.state.scopesV.length !== 0) ){\n        const currentproducts = this.state.allproducts.edges.filter(prod=>{\n          const regx = new RegExp(this.state.searchquery, \"gi\");\n          return this.state.scopes.some(sco=>(prod.node[sco].search(regx)>-1))\n        })\n        console.log(currentproducts)\n        this.setState({products: currentproducts})\n      }else{\n        this.setState({products:[]})\n      }\n    }\n\n    getHeader(){\n      return [\"title\",\"handle\",...this.state.scopes.filter(sco=>(sco!==\"title\" && sco!==\"handle\"))]\n    }\n    getHeaderType(){\n      return Array(this.state.scopes.length).fill('text')\n    }\n\n    isScopeSelected(scope,isVariant){\n      if(isVariant){\n        return (this.state.scopesV.findIndex(sco=>sco===scope)>-1)\n      }\n      return (this.state.scopes.findIndex(sco=>sco===scope)>-1)\n    }\n\n    handleScopeSelect=(scope,isVariant)=>()=>{\n      const scopetype = isVariant ? \"scopesV\" : \"scopes\"\n      const scopes = this.state[scopetype]\n      const selected = (this.state[scopetype].findIndex(sco=>sco===scope)>-1)\n      if (selected){\n        this.setState({[scopetype]: scopes.filter(sco=>sco!==scope)},()=>{\n          this.filterQuery()\n        })\n      }else{\n        this.setState({[scopetype]: [...scopes,scope]},()=>{\n          this.filterQuery()\n        })\n      }\n    }\n\n    toggleFavorite = () => {\n      console.log(\"toggle fav\")\n      const favorite = store.get('favorite')\n      const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase'])\n      const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n      if(!this.state.saved){\n        if (!store.get('favorite')){\n          console.log(\"no current fav\")\n          console.log(\"hashedfav:\" + hashedfav)\n          store.set(\"favorite\",{[hashedfav]:searchform})\n        }else{\n          console.log(store.get('favorite'))\n          store.set(\"favorite\",{...favorite, [hashedfav]:searchform})\n        }\n        this.setState({ saved:true })\n      }else{\n        delete favorite[hashedfav]\n        store.set(\"favorite\",favorite)\n        this.setState({ saved:false })\n      }\n    }\n\n    handleChange = (field) =>  (value) => {\n      this.setState({ [field]: value }, ()=>{\n        const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase'])\n        const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n        const saved = store.get('favorite') && store.get('favorite')[hashedfav]\n        this.setState({ saved })\n        this.filterQuery()\n      })\n    };\n\n    handleReplace = () => {\n      if(!this.state.products || this.state.products.length<1){\n        return \n      }\n      this.state.products.edges.map(item=>{\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables:{input:this.transformData(item.node)}\n        })\n        .then(response=>{\n          console.log(response)\n        })\n      })\n      this.setState({searchquery:\"\",replacestring:\"\"},()=>this.fetchQuery())\n    }\n\n    transformData = (data)=>{\n      const searchquery = new RegExp(this.state.searchquery, \"gi\");\n      const result = {\n        id:data.id,\n        title: data.title.replace(searchquery, this.state.replacestring),\n        handle: data.handle.replace(searchquery, this.state.replacestring),\n        descriptionHtml: `<p>${data.description.replace(searchquery, this.state.replacestring)}</p>`,\n      }\n      return result\n    }\n\n    InjectHighlight = (text) => {\n      if (!text){\n        return \"NA\"\n      }\n      const replace = new RegExp(this.state.searchquery, \"gi\");\n      return (\n        <span\n          dangerouslySetInnerHTML={{\n            __html : text.replace(replace, function (x) {\n              return `<span style=\"background-color:yellow\">${x}</span>`;\n            })\n          }} />\n      )\n    }\n\n    ConvertDatatoTable = (data) =>{\n      if (!data || data.length < 1){\n        return [[]]\n      }\n      return data.map(item=>{\n        const node = item.node\n        return this.getHeader().map(sco=>{\n          if(sco===\"tags\"){\n            return this.InjectHighlight(node[sco].join(\"/n\"))\n          }\n          return this.InjectHighlight(node[sco])\n        })\n      })\n    }\n    \n    render() {\n      const app = this.context;\n      const redirectToProduct = () => {\n        const redirect = Redirect.create(app);\n        redirect.dispatch(\n          Redirect.Action.APP,\n          '/edit-products',\n        );\n      };\n      const selectoptions = [\n        {label:\"products\",value:\"products\"},\n        {label:\"products\",value:\"products\"},\n        {label:\"products\",value:\"products\"},\n      ]\n    return (\n      <div>\n        <div className=\"form-container\">\n          \n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Find\" value={this.state.searchquery} onChange={this.handleChange('searchquery')} />\n            </div>\n          </div>\n          \n          <h3>Include fields: </h3>\n          <div className=\"form-row\">\n              <Checkbox label=\"Title\" checked={this.isScopeSelected('title')} onChange={this.handleScopeSelect('title')} />\n              <Checkbox label=\"Handle\" checked={this.isScopeSelected('handle')} onChange={this.handleScopeSelect('handle')} />\n              <Checkbox label=\"Product types\" checked={this.isScopeSelected('productType')} onChange={this.handleScopeSelect('productType')} />\n              <Checkbox label=\"Vendor\" checked={this.isScopeSelected('vendor')} onChange={this.handleScopeSelect('vendor')} />\n              <Checkbox label=\"Tags\" checked={this.isScopeSelected('tags')} onChange={this.handleScopeSelect('tags')} />\n              <Checkbox label=\"Description\" checked={this.isScopeSelected('description')} onChange={this.handleScopeSelect('description')} />\n          </div>\n\n          <h3>Variant fields: </h3>\n          <div className=\"form-row\">\n              <Checkbox label=\"Price\" checked={this.isScopeSelected('price',true)} onChange={this.handleScopeSelect('price',true)} />\n              <Checkbox label=\"SKU\" checked={this.isScopeSelected('sku',true)} onChange={this.handleScopeSelect('sku',true)} />\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Replace with\"  value={this.state.replacestring} onChange={this.handleChange('replacestring')} />\n            </div>\n            <Button className=\"form-button\" onClick={this.handleReplace.bind(this)}>Replace </Button>\n            <Button className=\"form-button\" onClick={this.handleReplace.bind(this)}>Replace all</Button>\n          </div>\n\n\n          <div className=\"form-row\">\n            <Checkbox label=\"Match case\" checked={this.state.matchcase} onChange={this.handleChange('matchcase')} />\n            <a onClick={this.toggleFavorite.bind(this)} >\n              <Icon source={this.state.saved ? StarFilledMinor : StarOutlineMinor} />\n              {this.state.saved ? \"Saved\" : \"Save to Favorite\"}\n            </a>\n          </div>\n\n        </div>\n        <Card>\n          <DataTable\n            columnContentTypes={this.getHeaderType()}\n            headings={this.getHeader()}\n            rows={this.ConvertDatatoTable(this.state.products)}\n          />\n        </Card>\n\n      </div>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}