{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($searchquery: String!) {\\n    products(query: $searchquery first: 50) {\\n      edges {\\n        node {\\n          title\\n          handle\\n          description\\n          id\\n          images(first: 1) {\\n            edges {\\n              node {\\n                originalSrc\\n                altText\\n              }\\n            }\\n          }\\n          variants(first: 1) {\\n            edges {\\n              node {\\n                price\\n                id\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation productUpdate($input: ProductInput!) {\\n    productUpdate(input: $input) {\\n      product {\\n        id\\n        title\\n        handle\\n        description\\n      }\\n      userErrors {\\n        field\\n        message\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, TextField, Thumbnail, DataTable, ButtonGroup, Button } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nvar UPDATE_PRODUCTS = gql(_templateObject());\nvar SEARCH_PRODUCTS = gql(_templateObject2());\n\nfunction ReplaceButton(props) {\n  console.log(props);\n\n  var _useMutation = useMutation(UPDATE_PRODUCTS),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      updateProduct = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error;\n\n  var handleReplace = function handleReplace() {\n    return function () {\n      if (!props.products || props.products.length < 1) {\n        return;\n      }\n\n      props.products.edges.map(function (item) {\n        updateProduct({\n          variables: {\n            input: transformData(item.node)\n          }\n        });\n      });\n    };\n  };\n\n  var transformData = function transformData(data) {\n    var searchquery = new RegExp(props.searchquery, \"gi\");\n    var result = {\n      id: data.id,\n      title: data.title.replace(searchquery, props.replacestring),\n      handle: data.handle.replace(searchquery, props.replacestring),\n      descriptionHtml: \"<p>\".concat(data.description.replace(searchquery, props.replacestring), \"</p>\")\n    };\n    return result;\n  };\n\n  return __jsx(ButtonGroup, null, __jsx(Button, {\n    primary: true,\n    onClick: handleReplace()\n  }, \"Replace Once\"), __jsx(Button, {\n    primary: true,\n    onClick: handleReplace()\n  }, \"Replace All\"));\n}\n\nvar ResourceListWithProducts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  function ResourceListWithProducts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResourceListWithProducts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      searchquery: \"this\",\n      replacestring: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        return _this.setState(_defineProperty({}, field, value));\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"performReplace\", function (item) {\n      return __jsx(\"div\", null);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"InjectHighlight\", function (text) {\n      var replace = new RegExp(_this.state.searchquery, \"gi\");\n      return __jsx(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: text.replace(replace, function (x) {\n            return \"<span style=\\\"background-color:yellow\\\">\".concat(x, \"</span>\");\n          })\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ConvertDatatoTable\", function (data) {\n      if (!data || data.length < 1) {\n        return [[]];\n      }\n\n      return data.edges.map(function (item) {\n        var node = item.node;\n        return [_this.InjectHighlight(node.title), _this.InjectHighlight(node.handle), _this.InjectHighlight(node.description)];\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"replace\", function () {});\n\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var app = this.context;\n\n      var redirectToProduct = function redirectToProduct() {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.APP, '/edit-products');\n      };\n\n      var twoWeeksFromNow = new Date(_Date$now() + 12096e5).toDateString();\n      return __jsx(\"div\", null, __jsx(TextField, {\n        label: \"search\",\n        value: this.state.searchquery,\n        onChange: this.handleChange('searchquery')\n      }), __jsx(TextField, {\n        label: \"replace\",\n        value: this.state.replacestring,\n        onChange: this.handleChange('replacestring')\n      }), __jsx(ReplaceButton, {\n        products: this.state.products,\n        replacestring: this.state.replacestring\n      }), __jsx(Query, {\n        query: SEARCH_PRODUCTS,\n        variables: {\n          searchquery: this.state.searchquery\n        },\n        onCompleted: function onCompleted(data) {\n          _this2.setState({\n            products: data.products\n          });\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n        if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n        if (error) return __jsx(\"div\", null, error.message);\n\n        var rows = _this2.ConvertDatatoTable(data.products);\n\n        console.log(rows);\n        return __jsx(Card, null, __jsx(DataTable, {\n          columnContentTypes: ['text', 'text', 'text'],\n          headings: ['title', 'handle', 'description'],\n          rows: rows\n        }));\n      }));\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","TextField","Thumbnail","DataTable","ButtonGroup","Button","store","Redirect","Context","useMutation","UPDATE_PRODUCTS","SEARCH_PRODUCTS","ReplaceButton","props","console","log","updateProduct","loading","error","handleReplace","products","length","edges","map","item","variables","input","transformData","node","data","searchquery","RegExp","result","id","title","replace","replacestring","handle","descriptionHtml","description","ResourceListWithProducts","field","value","setState","text","state","__html","x","InjectHighlight","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","twoWeeksFromNow","Date","toDateString","handleChange","message","rows","ConvertDatatoTable","React","Component"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    TextField,\n    Thumbnail,\n    DataTable,\n    ButtonGroup,\n    Button\n } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nconst UPDATE_PRODUCTS = gql`\n  mutation productUpdate($input: ProductInput!) {\n    productUpdate(input: $input) {\n      product {\n        id\n        title\n        handle\n        description\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\nconst SEARCH_PRODUCTS = gql`\n  query getProducts($searchquery: String!) {\n    products(query: $searchquery first: 50) {\n      edges {\n        node {\n          title\n          handle\n          description\n          id\n          images(first: 1) {\n            edges {\n              node {\n                originalSrc\n                altText\n              }\n            }\n          }\n          variants(first: 1) {\n            edges {\n              node {\n                price\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nfunction ReplaceButton(props){\n  console.log(props)\n  const [updateProduct, {loading, error}] = useMutation(UPDATE_PRODUCTS);\n  const handleReplace = () => () => {\n    if(!props.products || props.products.length<1){\n      return \n    }\n    props.products.edges.map(item=>{\n      updateProduct({variables:{input:transformData(item.node)}})\n    })\n  }\n  const transformData = (data)=>{\n    const searchquery = new RegExp(props.searchquery, \"gi\");\n    const result = {\n      id:data.id,\n      title: data.title.replace(searchquery, props.replacestring),\n      handle: data.handle.replace(searchquery, props.replacestring),\n      descriptionHtml: `<p>${data.description.replace(searchquery, props.replacestring)}</p>`,\n    }\n    return result\n  }\n  return (      \n  <ButtonGroup>\n    <Button primary onClick={handleReplace()}>Replace Once</Button>\n    <Button primary onClick={handleReplace()}>Replace All</Button>\n  </ButtonGroup>\n  )\n}\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n    state = {\n        searchquery: \"this\",\n        replacestring:\"\"\n    }\n    \n    handleChange = (field) => {\n      return (value) => this.setState({ [field]: value });\n    };\n\n\n\n\n    performReplace = (item) => {\n      return (\n        <div></div>\n      )\n    }\n\n    InjectHighlight = (text) => {\n      const replace = new RegExp(this.state.searchquery, \"gi\");\n      return (\n        <span\n          dangerouslySetInnerHTML={{\n            __html : text.replace(replace, function (x) {\n              return `<span style=\"background-color:yellow\">${x}</span>`;\n            })\n          }} />\n      )\n    }\n    ConvertDatatoTable = (data) =>{\n      if (!data || data.length < 1){\n        return [[]]\n      }\n      return data.edges.map(item=>{\n        const node = item.node\n        return [this.InjectHighlight(node.title), this.InjectHighlight(node.handle), this.InjectHighlight(node.description)]\n      })\n    }\n    replace = () =>{\n\n    }\n\n    render() {\n      const app = this.context;\n      const redirectToProduct = () => {\n        const redirect = Redirect.create(app);\n        redirect.dispatch(\n          Redirect.Action.APP,\n          '/edit-products',\n        );\n      };\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return (\n      <div>\n      <TextField label=\"search\" value={this.state.searchquery} onChange={this.handleChange('searchquery')} />\n      <TextField label=\"replace\" value={this.state.replacestring} onChange={this.handleChange('replacestring')} />\n      <ReplaceButton products = {this.state.products} replacestring={this.state.replacestring}/>\n      <Query query={SEARCH_PRODUCTS} variables={{ searchquery: this.state.searchquery }} onCompleted={(data)=>{\n          this.setState({products : data.products})}}>\n        {({ data, loading, error }) => {\n          if (loading) return <div>Loading…</div>;\n          if (error) return <div>{error.message}</div>;\n          const rows = this.ConvertDatatoTable(data.products)\n          console.log(rows)\n          return (\n            <Card>\n              <DataTable\n                columnContentTypes={[\n                  'text',\n                  'text',\n                  'text',\n                ]}\n                headings={[\n                  'title',\n                  'handle',\n                  'description',\n                ]}\n                rows={rows}\n              />\n            </Card>\n          );\n        }}\n      </Query>\n\n      </div>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}