{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, TextField, Thumbnail, DataTable, Button, Checkbox, Icon, Select } from '@shopify/polaris';\nimport { StarFilledMinor, StarOutlineMinor } from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport './ResourceList.css';\nimport { UPDATE_PRODUCTS, LIST_PRODUCTS, constructSearchProduct } from \"./graphql.js\";\n\nvar ResourceListWithProducts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  function ResourceListWithProducts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResourceListWithProducts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      fetching: true,\n      searchquery: \"\",\n      replacestring: \"\",\n      matchcase: false,\n      saved: false,\n      scopes: [],\n      scopesV: [],\n      products: [],\n      allproducts: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScopeSelect\", function (scope, isVariant) {\n      return function () {\n        var scopetype = isVariant ? \"scopesV\" : \"scopes\";\n        var scopes = _this.state[scopetype];\n        var selected = _this.state[scopetype].findIndex(function (sco) {\n          return sco === scope;\n        }) > -1;\n\n        if (selected) {\n          _this.setState(_defineProperty({}, scopetype, scopes.filter(function (sco) {\n            return sco !== scope;\n          })), function () {\n            _this.filterQuery();\n          });\n        } else {\n          _this.setState(_defineProperty({}, scopetype, [].concat(_toConsumableArray(scopes), [scope])), function () {\n            _this.filterQuery();\n          });\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleFavorite\", function () {\n      console.log(\"toggle fav\");\n      var favorite = store.get('favorite');\n\n      var searchform = _.pick(_this.state, ['searchquery', 'replacestring', 'matchcase', 'scopes']);\n\n      var hashedfav = _Object$keys(searchform).sort().map(function (x) {\n        return searchform[x].toString();\n      }).join(\";\");\n\n      if (!_this.state.saved) {\n        if (!store.get('favorite')) {\n          console.log(\"no current fav\");\n          console.log(\"hashedfav:\" + hashedfav);\n          store.set(\"favorite\", _defineProperty({}, hashedfav, searchform));\n        } else {\n          console.log(store.get('favorite'));\n          store.set(\"favorite\", _objectSpread({}, favorite, _defineProperty({}, hashedfav, searchform)));\n        }\n\n        _this.setState({\n          saved: true\n        });\n      } else {\n        delete favorite[hashedfav];\n        store.set(\"favorite\", favorite);\n\n        _this.setState({\n          saved: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        _this.setState(_defineProperty({}, field, value), function () {\n          var searchform = _.pick(_this.state, ['searchquery', 'replacestring', 'matchcase', 'scopes']);\n\n          var hashedfav = _Object$keys(searchform).sort().map(function (x) {\n            return searchform[x].toString();\n          }).join(\";\");\n\n          var saved = store.get('favorite') && store.get('favorite')[hashedfav];\n\n          _this.setState({\n            saved: saved\n          });\n\n          _this.filterQuery();\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleReplace\", function () {\n      if (!_this.state.products || _this.state.products.length < 1) {\n        return;\n      }\n\n      var promises = _this.state.products.length;\n\n      _this.state.products.map(function (item, idx) {\n        _this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables: {\n            input: _this.transformData(item.node)\n          }\n        }).then(function (response) {\n          console.log(response);\n          promises -= 1;\n\n          if (promises === 0) {\n            _this.fetchQuery();\n          }\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"transformData\", function (data) {\n      var searchquery = new RegExp(_this.state.searchquery, _this.getRegexCase());\n      var result = {\n        id: data.id\n      };\n\n      _this.state.scopes.map(function (sco) {\n        if (sco === \"tags\") {\n          result[sco] = data[sco].map(function (tag) {\n            return tag.replace(searchquery, _this.state.replacestring);\n          });\n        } else if (sco === \"description\") {\n          result[\"descriptionHtml\"] = data[sco].replace(searchquery, _this.state.replacestring);\n        } else {\n          result[sco] = data[sco].replace(searchquery, _this.state.replacestring);\n        }\n      });\n\n      console.log(result);\n      return result;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"InjectHighlight\", function (text) {\n      if (!text) {\n        return \"NA\";\n      }\n\n      var replace = new RegExp(_this.state.searchquery, _this.getRegexCase());\n      return __jsx(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: text.replace(replace, function (x) {\n            return \"<span style=\\\"background-color:yellow\\\">\".concat(x, \"</span>\");\n          })\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ConvertDatatoTable\", function (data) {\n      if (!data || data.length < 1) {\n        return [[]];\n      }\n\n      return data.map(function (item) {\n        var node = item.node;\n        return _this.getHeader().map(function (sco) {\n          if (sco === \"tags\") {\n            if (_this.state.scopes.findIndex(function (scope) {\n              return sco === scope;\n            }) == -1) {\n              return node[sco].join(\"/n\");\n            }\n\n            return _this.InjectHighlight(node[sco].join(\"/n\"));\n          }\n\n          if (_this.state.scopes.findIndex(function (scope) {\n            return sco === scope;\n          }) == -1) {\n            return node[sco];\n          }\n\n          return _this.InjectHighlight(node[sco]);\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchQuery();\n    }\n  }, {\n    key: \"getRegexCase\",\n    value: function getRegexCase() {\n      return this.state.matchcase ? \"g\" : \"gi\";\n    }\n  }, {\n    key: \"fetchQuery\",\n    value: function fetchQuery() {\n      var _this2 = this;\n\n      console.log(\"fetch\");\n      this.setState({\n        fetching: true\n      });\n      this.props.apolloClient.query({\n        query: LIST_PRODUCTS\n      }).then(function (response) {\n        return _this2.setState({\n          allproducts: response.data.products.edges,\n          fetching: false\n        }, function () {\n          _this2.filterQuery();\n        });\n      });\n    }\n  }, {\n    key: \"filterQuery\",\n    value: function filterQuery() {\n      var _this3 = this;\n\n      console.log(\"filter\");\n\n      if (this.state.searchquery !== \"\" && this.state.scopes.length + this.state.scopesV.length !== 0 && this.state.allproducts !== 0) {\n        var currentproducts = this.state.allproducts.filter(function (prod) {\n          var regx = new RegExp(_this3.state.searchquery, _this3.getRegexCase());\n          return _this3.state.scopes.some(function (sco) {\n            if (sco === \"tags\") {\n              return prod.node[sco].join(\"/n\").search(regx) > -1;\n            }\n\n            return prod.node[sco].search(regx) > -1;\n          });\n        });\n        console.log(currentproducts);\n        this.setState({\n          products: currentproducts\n        });\n      } else {\n        this.setState({\n          products: []\n        });\n      }\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader() {\n      return [\"title\", \"handle\"].concat(_toConsumableArray(this.state.scopes.filter(function (sco) {\n        return sco !== \"title\" && sco !== \"handle\";\n      })));\n    }\n  }, {\n    key: \"getHeaderType\",\n    value: function getHeaderType() {\n      return Array(this.state.scopes.length).fill('text');\n    }\n  }, {\n    key: \"isScopeSelected\",\n    value: function isScopeSelected(scope, isVariant) {\n      if (isVariant) {\n        return this.state.scopesV.findIndex(function (sco) {\n          return sco === scope;\n        }) > -1;\n      }\n\n      return this.state.scopes.findIndex(function (sco) {\n        return sco === scope;\n      }) > -1;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var app = this.context;\n\n      var redirectToProduct = function redirectToProduct() {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.APP, '/edit-products');\n      };\n\n      var selectoptions = [{\n        label: \"products\",\n        value: \"products\"\n      }, {\n        label: \"products\",\n        value: \"products\"\n      }, {\n        label: \"products\",\n        value: \"products\"\n      }];\n      return __jsx(\"div\", null, __jsx(\"div\", {\n        className: \"form-container\"\n      }, __jsx(\"div\", {\n        className: \"form-row\"\n      }, __jsx(\"div\", {\n        className: \"form-input\"\n      }, __jsx(TextField, {\n        placeholder: \"Find\",\n        value: this.state.searchquery,\n        onChange: this.handleChange('searchquery')\n      }))), __jsx(\"h3\", null, \"Include fields: \"), __jsx(\"div\", {\n        className: \"form-row\"\n      }, __jsx(Checkbox, {\n        label: \"Title\",\n        checked: this.isScopeSelected('title'),\n        onChange: this.handleScopeSelect('title')\n      }), __jsx(Checkbox, {\n        label: \"Handle\",\n        checked: this.isScopeSelected('handle'),\n        onChange: this.handleScopeSelect('handle')\n      }), __jsx(Checkbox, {\n        label: \"Product types\",\n        checked: this.isScopeSelected('productType'),\n        onChange: this.handleScopeSelect('productType')\n      }), __jsx(Checkbox, {\n        label: \"Vendor\",\n        checked: this.isScopeSelected('vendor'),\n        onChange: this.handleScopeSelect('vendor')\n      }), __jsx(Checkbox, {\n        label: \"Tags\",\n        checked: this.isScopeSelected('tags'),\n        onChange: this.handleScopeSelect('tags')\n      }), __jsx(Checkbox, {\n        label: \"Description\",\n        checked: this.isScopeSelected('description'),\n        onChange: this.handleScopeSelect('description')\n      })), __jsx(\"h3\", null, \"Variant fields: \"), __jsx(\"div\", {\n        className: \"form-row\"\n      }, __jsx(Checkbox, {\n        label: \"Price\",\n        checked: this.isScopeSelected('price', true),\n        onChange: this.handleScopeSelect('price', true)\n      }), __jsx(Checkbox, {\n        label: \"SKU\",\n        checked: this.isScopeSelected('sku', true),\n        onChange: this.handleScopeSelect('sku', true)\n      })), __jsx(\"div\", {\n        className: \"form-row\"\n      }, __jsx(\"div\", {\n        className: \"form-input\"\n      }, __jsx(TextField, {\n        placeholder: \"Replace with\",\n        value: this.state.replacestring,\n        onChange: this.handleChange('replacestring')\n      })), __jsx(Button, {\n        className: \"form-button\",\n        onClick: this.handleReplace.bind(this)\n      }, \"Replace \"), __jsx(Button, {\n        className: \"form-button\",\n        onClick: this.handleReplace.bind(this)\n      }, \"Replace all\")), __jsx(\"div\", {\n        className: \"form-row\"\n      }, __jsx(Checkbox, {\n        label: \"Match case\",\n        checked: this.state.matchcase,\n        onChange: this.handleChange('matchcase')\n      }), __jsx(\"a\", {\n        onClick: this.toggleFavorite.bind(this)\n      }, __jsx(Icon, {\n        source: this.state.saved ? StarFilledMinor : StarOutlineMinor\n      }), this.state.saved ? \"Saved\" : \"Save to Favorite\"))), __jsx(Card, null, __jsx(DataTable, {\n        columnContentTypes: this.getHeaderType(),\n        headings: this.getHeader(),\n        rows: this.ConvertDatatoTable(this.state.products)\n      })));\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":null,"metadata":{},"sourceType":"module"}