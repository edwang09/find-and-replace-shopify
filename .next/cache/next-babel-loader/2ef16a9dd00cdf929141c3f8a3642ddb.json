{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, TextField, Thumbnail, DataTable, Button, Checkbox, Icon, Select } from '@shopify/polaris';\nimport { StarFilledMinor, StarOutlineMinor } from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport './ResourceList.css';\nimport { UPDATE_PRODUCTS, SEARCH_PRODUCTS, constructSearchProduct } from \"./graphql.js\";\n\nclass ResourceListWithProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      searchquery: \"\",\n      replacestring: \"\",\n      matchcase: false,\n      saved: false,\n      scopes: [],\n      scopesV: [],\n      products: []\n    });\n\n    _defineProperty(this, \"handleScopeSelect\", scope => () => {\n      const selected = this.state.scopes.findIndex(sco => sco === scope);\n      const scopes = this.state.scopes;\n\n      if (selected) {\n        this.setState({\n          scopes: scopes.filter(sco => sco !== scope)\n        }, () => this.fetchQuery());\n      } else {\n        this.setState({\n          scopes: [...scopes, scope]\n        }, () => this.fetchQuery());\n      }\n    });\n\n    _defineProperty(this, \"handleScopeSelectV\", scope => () => {\n      const selected = this.state.scopesV.findIndex(sco => sco === scope);\n      const scopesV = this.state.scopesV;\n\n      if (selected) {\n        this.setState({\n          scopesV: scopesV.filter(sco => sco !== scope)\n        }, () => this.fetchQuery());\n      } else {\n        this.setState({\n          scopesV: [...scopesV, scope]\n        }, () => this.fetchQuery());\n      }\n\n      this.fetchQuery();\n    });\n\n    _defineProperty(this, \"toggleFavorite\", () => {\n      console.log(\"toggle fav\");\n      const favorite = store.get('favorite');\n\n      const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase']);\n\n      const hashedfav = _Object$keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n\n      if (!this.state.saved) {\n        if (!store.get('favorite')) {\n          console.log(\"no current fav\");\n          console.log(\"hashedfav:\" + hashedfav);\n          store.set(\"favorite\", {\n            [hashedfav]: searchform\n          });\n        } else {\n          console.log(store.get('favorite'));\n          store.set(\"favorite\", _objectSpread({}, favorite, {\n            [hashedfav]: searchform\n          }));\n        }\n\n        this.setState({\n          saved: true\n        });\n      } else {\n        delete favorite[hashedfav];\n        store.set(\"favorite\", favorite);\n        this.setState({\n          saved: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleChange\", field => value => {\n      this.setState({\n        [field]: value\n      }, () => {\n        const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase']);\n\n        const hashedfav = _Object$keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n\n        const saved = store.get('favorite') && store.get('favorite')[hashedfav];\n        this.setState({\n          saved\n        });\n        this.fetchQuery();\n      });\n    });\n\n    _defineProperty(this, \"handleReplace\", () => {\n      if (!this.state.products || this.state.products.length < 1) {\n        return;\n      }\n\n      this.state.products.edges.map(item => {\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables: {\n            input: this.transformData(item.node)\n          }\n        }).then(response => {\n          console.log(response);\n        });\n      });\n      this.setState({\n        searchquery: \"\",\n        replacestring: \"\"\n      }, () => this.fetchQuery());\n    });\n\n    _defineProperty(this, \"transformData\", data => {\n      const searchquery = new RegExp(this.state.searchquery, \"gi\");\n      const result = {\n        id: data.id,\n        title: data.title.replace(searchquery, this.state.replacestring),\n        handle: data.handle.replace(searchquery, this.state.replacestring),\n        descriptionHtml: `<p>${data.description.replace(searchquery, this.state.replacestring)}</p>`\n      };\n      return result;\n    });\n\n    _defineProperty(this, \"InjectHighlight\", text => {\n      const replace = new RegExp(this.state.searchquery, \"gi\");\n      return __jsx(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: text.replace(replace, function (x) {\n            return `<span style=\"background-color:yellow\">${x}</span>`;\n          })\n        }\n      });\n    });\n\n    _defineProperty(this, \"ConvertDatatoTable\", data => {\n      if (!data || data.length < 1) {\n        return [[]];\n      }\n\n      return data.edges.map(item => {\n        const node = item.node;\n        return [this.InjectHighlight(node.title), this.InjectHighlight(node.handle), this.InjectHighlight(node.description)];\n      });\n    });\n  }\n\n  fetchQuery() {\n    console.log(\"fetch\");\n\n    if (this.state.searchquery !== \"\") {\n      this.props.apolloClient.query({\n        query: constructSearchProduct(this.state.scopes, this.state.scopesV),\n        variables: {\n          variables: this.state.searchquery\n        }\n      }).then(response => {\n        console.log(response);\n        this.setState({\n          products: response.data.products\n        });\n      });\n    } else {\n      this.setState({\n        products: []\n      });\n    }\n  }\n\n  isScopeSelected(scope) {\n    return this.state.scopes.findIndex(sco => sco === scope);\n  }\n\n  isScopeSelectedV(scope) {\n    return this.state.scopesV.findIndex(sco => sco === scope);\n  }\n\n  render() {\n    const app = this.context;\n\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/edit-products');\n    };\n\n    const selectoptions = [{\n      label: \"products\",\n      value: \"products\"\n    }, {\n      label: \"products\",\n      value: \"products\"\n    }, {\n      label: \"products\",\n      value: \"products\"\n    }];\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"form-container\"\n    }, __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(\"div\", {\n      className: \"form-input\"\n    }, __jsx(TextField, {\n      placeholder: \"Find\",\n      value: this.state.searchquery,\n      onChange: this.handleChange('searchquery')\n    }))), __jsx(\"h3\", null, \"Include fields: \"), __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(Checkbox, {\n      label: \"Title\",\n      checked: this.isScopeSelected('title'),\n      onChange: this.handleScopeSelect('title')\n    }), __jsx(Checkbox, {\n      label: \"Handle\",\n      checked: this.isScopeSelected('handle'),\n      onChange: this.handleScopeSelect('handle')\n    }), __jsx(Checkbox, {\n      label: \"Product types\",\n      checked: this.isScopeSelected('producttypes'),\n      onChange: this.handleScopeSelect('producttypes')\n    }), __jsx(Checkbox, {\n      label: \"Vendor\",\n      checked: this.isScopeSelected('vendor'),\n      onChange: this.handleScopeSelect('vendor')\n    }), __jsx(Checkbox, {\n      label: \"Tags\",\n      checked: this.isScopeSelected('tags'),\n      onChange: this.handleScopeSelect('tags')\n    }), __jsx(Checkbox, {\n      label: \"Price\",\n      checked: this.isScopeSelectedV('price'),\n      onChange: this.handleScopeSelectV('price')\n    }), __jsx(Checkbox, {\n      label: \"SKU\",\n      checked: this.isScopeSelectedV('sku'),\n      onChange: this.handleScopeSelectV('sku')\n    }), __jsx(Checkbox, {\n      label: \"Description\",\n      checked: this.isScopeSelected('description'),\n      onChange: this.handleScopeSelect('description')\n    })), __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(\"div\", {\n      className: \"form-input\"\n    }, __jsx(TextField, {\n      placeholder: \"Replace with\",\n      value: this.state.replacestring,\n      onChange: this.handleChange('replacestring')\n    })), __jsx(Button, {\n      className: \"form-button\",\n      onClick: this.handleReplace.bind(this)\n    }, \"Replace \"), __jsx(Button, {\n      className: \"form-button\",\n      onClick: this.handleReplace.bind(this)\n    }, \"Replace all\")), __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(Checkbox, {\n      label: \"Match case\",\n      checked: this.state.matchcase,\n      onChange: this.handleChange('matchcase')\n    }), __jsx(\"a\", {\n      onClick: this.toggleFavorite.bind(this)\n    }, __jsx(Icon, {\n      source: this.state.saved ? StarFilledMinor : StarOutlineMinor\n    }), this.state.saved ? \"Saved\" : \"Save to Favorite\"))), __jsx(Card, null, __jsx(DataTable, {\n      columnContentTypes: ['text', 'text', 'text'],\n      headings: ['title', 'handle', 'description'],\n      rows: this.ConvertDatatoTable(this.state.products)\n    })));\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/components/ResourceList.js"],"names":["gql","Query","Mutation","Card","ResourceList","Stack","TextStyle","TextField","Thumbnail","DataTable","Button","Checkbox","Icon","Select","StarFilledMinor","StarOutlineMinor","store","Redirect","Context","useMutation","_","UPDATE_PRODUCTS","SEARCH_PRODUCTS","constructSearchProduct","ResourceListWithProducts","React","Component","searchquery","replacestring","matchcase","saved","scopes","scopesV","products","scope","selected","state","findIndex","sco","setState","filter","fetchQuery","console","log","favorite","get","searchform","pick","hashedfav","sort","map","x","toString","join","set","field","value","length","edges","item","props","apolloClient","mutate","mutation","variables","input","transformData","node","then","response","data","RegExp","result","id","title","replace","handle","descriptionHtml","description","text","__html","InjectHighlight","query","isScopeSelected","isScopeSelectedV","render","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","selectoptions","label","handleChange","handleScopeSelect","handleScopeSelectV","handleReplace","bind","toggleFavorite","ConvertDatatoTable"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,SAASC,IAAT,EACIC,YADJ,EAEIC,KAFJ,EAGIC,SAHJ,EAIIC,SAJJ,EAKIC,SALJ,EAMIC,SANJ,EAOIC,MAPJ,EAQIC,QARJ,EASIC,IATJ,EAUIC,MAVJ,QAWQ,kBAXR;AAYC,SACCC,eADD,EAECC,gBAFD,QAGM,wBAHN;AAID,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,oBAAP;AACA,SAAQC,eAAR,EAAyBC,eAAzB,EAA0CC,sBAA1C,QAAuE,cAAvE;;AAEA,MAAMC,wBAAN,SAAuCC,KAAK,CAACC,SAA7C,CAAuD;AAAA;AAAA;;AAAA,mCAE3C;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,aAAa,EAAC,EAFV;AAGJC,MAAAA,SAAS,EAAC,KAHN;AAIJC,MAAAA,KAAK,EAAE,KAJH;AAKJC,MAAAA,MAAM,EAAC,EALH;AAMJC,MAAAA,OAAO,EAAC,EANJ;AAOJC,MAAAA,QAAQ,EAAC;AAPL,KAF2C;;AAAA,+CAgChCC,KAAD,IAAS,MAAI;AAC7B,YAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWL,MAAX,CAAkBM,SAAlB,CAA4BC,GAAG,IAAEA,GAAG,KAAGJ,KAAvC,CAAjB;AACA,YAAMH,MAAM,GAAG,KAAKK,KAAL,CAAWL,MAA1B;;AACA,UAAII,QAAJ,EAAa;AACX,aAAKI,QAAL,CAAc;AAACR,UAAAA,MAAM,EAAEA,MAAM,CAACS,MAAP,CAAcF,GAAG,IAAEA,GAAG,KAAGJ,KAAzB;AAAT,SAAd,EAAwD,MAAI,KAAKO,UAAL,EAA5D;AACD,OAFD,MAEK;AACH,aAAKF,QAAL,CAAc;AAACR,UAAAA,MAAM,EAAE,CAAC,GAAGA,MAAJ,EAAWG,KAAX;AAAT,SAAd,EAA0C,MAAI,KAAKO,UAAL,EAA9C;AACD;AAEF,KAzCkD;;AAAA,gDA8C/BP,KAAD,IAAS,MAAI;AAC9B,YAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWJ,OAAX,CAAmBK,SAAnB,CAA6BC,GAAG,IAAEA,GAAG,KAAGJ,KAAxC,CAAjB;AACA,YAAMF,OAAO,GAAG,KAAKI,KAAL,CAAWJ,OAA3B;;AACA,UAAIG,QAAJ,EAAa;AACX,aAAKI,QAAL,CAAc;AAACP,UAAAA,OAAO,EAAEA,OAAO,CAACQ,MAAR,CAAeF,GAAG,IAAEA,GAAG,KAAGJ,KAA1B;AAAV,SAAd,EAA0D,MAAI,KAAKO,UAAL,EAA9D;AACD,OAFD,MAEK;AACH,aAAKF,QAAL,CAAc;AAACP,UAAAA,OAAO,EAAE,CAAC,GAAGA,OAAJ,EAAYE,KAAZ;AAAV,SAAd,EAA4C,MAAI,KAAKO,UAAL,EAAhD;AACD;;AACD,WAAKA,UAAL;AAED,KAxDkD;;AAAA,4CA0DlC,MAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,YAAMC,QAAQ,GAAG5B,KAAK,CAAC6B,GAAN,CAAU,UAAV,CAAjB;;AACA,YAAMC,UAAU,GAAG1B,CAAC,CAAC2B,IAAF,CAAO,KAAKX,KAAZ,EAAmB,CAAC,aAAD,EAAgB,eAAhB,EAAiC,WAAjC,CAAnB,CAAnB;;AACA,YAAMY,SAAS,GAAG,aAAYF,UAAZ,EAAwBG,IAAxB,GAA+BC,GAA/B,CAAmCC,CAAC,IAAIL,UAAU,CAACK,CAAD,CAAV,CAAcC,QAAd,EAAxC,EAAkEC,IAAlE,CAAuE,GAAvE,CAAlB;;AACA,UAAG,CAAC,KAAKjB,KAAL,CAAWN,KAAf,EAAqB;AACnB,YAAI,CAACd,KAAK,CAAC6B,GAAN,CAAU,UAAV,CAAL,EAA2B;AACzBH,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAeK,SAA3B;AACAhC,UAAAA,KAAK,CAACsC,GAAN,CAAU,UAAV,EAAqB;AAAC,aAACN,SAAD,GAAYF;AAAb,WAArB;AACD,SAJD,MAIK;AACHJ,UAAAA,OAAO,CAACC,GAAR,CAAY3B,KAAK,CAAC6B,GAAN,CAAU,UAAV,CAAZ;AACA7B,UAAAA,KAAK,CAACsC,GAAN,CAAU,UAAV,oBAAyBV,QAAzB;AAAmC,aAACI,SAAD,GAAYF;AAA/C;AACD;;AACD,aAAKP,QAAL,CAAc;AAAET,UAAAA,KAAK,EAAC;AAAR,SAAd;AACD,OAVD,MAUK;AACH,eAAOc,QAAQ,CAACI,SAAD,CAAf;AACAhC,QAAAA,KAAK,CAACsC,GAAN,CAAU,UAAV,EAAqBV,QAArB;AACA,aAAKL,QAAL,CAAc;AAAET,UAAAA,KAAK,EAAC;AAAR,SAAd;AACD;AACF,KA9EkD;;AAAA,0CAgFnCyB,KAAD,IAAaC,KAAD,IAAW;AACpC,WAAKjB,QAAL,CAAc;AAAE,SAACgB,KAAD,GAASC;AAAX,OAAd,EAAkC,MAAI;AACpC,cAAMV,UAAU,GAAG1B,CAAC,CAAC2B,IAAF,CAAO,KAAKX,KAAZ,EAAmB,CAAC,aAAD,EAAgB,eAAhB,EAAiC,WAAjC,CAAnB,CAAnB;;AACA,cAAMY,SAAS,GAAG,aAAYF,UAAZ,EAAwBG,IAAxB,GAA+BC,GAA/B,CAAmCC,CAAC,IAAIL,UAAU,CAACK,CAAD,CAAV,CAAcC,QAAd,EAAxC,EAAkEC,IAAlE,CAAuE,GAAvE,CAAlB;;AACA,cAAMvB,KAAK,GAAGd,KAAK,CAAC6B,GAAN,CAAU,UAAV,KAAyB7B,KAAK,CAAC6B,GAAN,CAAU,UAAV,EAAsBG,SAAtB,CAAvC;AACA,aAAKT,QAAL,CAAc;AAAET,UAAAA;AAAF,SAAd;AACA,aAAKW,UAAL;AACD,OAND;AAOD,KAxFkD;;AAAA,2CA0FnC,MAAM;AACpB,UAAG,CAAC,KAAKL,KAAL,CAAWH,QAAZ,IAAwB,KAAKG,KAAL,CAAWH,QAAX,CAAoBwB,MAApB,GAA2B,CAAtD,EAAwD;AACtD;AACD;;AACD,WAAKrB,KAAL,CAAWH,QAAX,CAAoByB,KAApB,CAA0BR,GAA1B,CAA8BS,IAAI,IAAE;AAClC,aAAKC,KAAL,CAAWC,YAAX,CAAwBC,MAAxB,CAA+B;AAC7BC,UAAAA,QAAQ,EAAE1C,eADmB;AAE7B2C,UAAAA,SAAS,EAAC;AAACC,YAAAA,KAAK,EAAC,KAAKC,aAAL,CAAmBP,IAAI,CAACQ,IAAxB;AAAP;AAFmB,SAA/B,EAICC,IAJD,CAIMC,QAAQ,IAAE;AACd3B,UAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AACD,SAND;AAOD,OARD;AASA,WAAK9B,QAAL,CAAc;AAACZ,QAAAA,WAAW,EAAC,EAAb;AAAgBC,QAAAA,aAAa,EAAC;AAA9B,OAAd,EAAgD,MAAI,KAAKa,UAAL,EAApD;AACD,KAxGkD;;AAAA,2CA0GlC6B,IAAD,IAAQ;AACtB,YAAM3C,WAAW,GAAG,IAAI4C,MAAJ,CAAW,KAAKnC,KAAL,CAAWT,WAAtB,EAAmC,IAAnC,CAApB;AACA,YAAM6C,MAAM,GAAG;AACbC,QAAAA,EAAE,EAACH,IAAI,CAACG,EADK;AAEbC,QAAAA,KAAK,EAAEJ,IAAI,CAACI,KAAL,CAAWC,OAAX,CAAmBhD,WAAnB,EAAgC,KAAKS,KAAL,CAAWR,aAA3C,CAFM;AAGbgD,QAAAA,MAAM,EAAEN,IAAI,CAACM,MAAL,CAAYD,OAAZ,CAAoBhD,WAApB,EAAiC,KAAKS,KAAL,CAAWR,aAA5C,CAHK;AAIbiD,QAAAA,eAAe,EAAG,MAAKP,IAAI,CAACQ,WAAL,CAAiBH,OAAjB,CAAyBhD,WAAzB,EAAsC,KAAKS,KAAL,CAAWR,aAAjD,CAAgE;AAJ1E,OAAf;AAMA,aAAO4C,MAAP;AACD,KAnHkD;;AAAA,6CAqHhCO,IAAD,IAAU;AAC1B,YAAMJ,OAAO,GAAG,IAAIJ,MAAJ,CAAW,KAAKnC,KAAL,CAAWT,WAAtB,EAAmC,IAAnC,CAAhB;AACA,aACE;AACE,QAAA,uBAAuB,EAAE;AACvBqD,UAAAA,MAAM,EAAGD,IAAI,CAACJ,OAAL,CAAaA,OAAb,EAAsB,UAAUxB,CAAV,EAAa;AAC1C,mBAAQ,yCAAwCA,CAAE,SAAlD;AACD,WAFQ;AADc;AAD3B,QADF;AAQD,KA/HkD;;AAAA,gDAiI7BmB,IAAD,IAAS;AAC5B,UAAI,CAACA,IAAD,IAASA,IAAI,CAACb,MAAL,GAAc,CAA3B,EAA6B;AAC3B,eAAO,CAAC,EAAD,CAAP;AACD;;AACD,aAAOa,IAAI,CAACZ,KAAL,CAAWR,GAAX,CAAeS,IAAI,IAAE;AAC1B,cAAMQ,IAAI,GAAGR,IAAI,CAACQ,IAAlB;AACA,eAAO,CAAC,KAAKc,eAAL,CAAqBd,IAAI,CAACO,KAA1B,CAAD,EAAmC,KAAKO,eAAL,CAAqBd,IAAI,CAACS,MAA1B,CAAnC,EAAsE,KAAKK,eAAL,CAAqBd,IAAI,CAACW,WAA1B,CAAtE,CAAP;AACD,OAHM,CAAP;AAID,KAzIkD;AAAA;;AAYnDrC,EAAAA,UAAU,GAAE;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;;AACA,QAAG,KAAKP,KAAL,CAAWT,WAAX,KAAyB,EAA5B,EAA+B;AAC7B,WAAKiC,KAAL,CAAWC,YAAX,CAAwBqB,KAAxB,CAA8B;AAC5BA,QAAAA,KAAK,EAAE3D,sBAAsB,CAAC,KAAKa,KAAL,CAAWL,MAAZ,EAAoB,KAAKK,KAAL,CAAWJ,OAA/B,CADD;AAE5BgC,QAAAA,SAAS,EAAC;AAACA,UAAAA,SAAS,EAAC,KAAK5B,KAAL,CAAWT;AAAtB;AAFkB,OAA9B,EAICyC,IAJD,CAIMC,QAAQ,IAAE;AACd3B,QAAAA,OAAO,CAACC,GAAR,CAAY0B,QAAZ;AACA,aAAK9B,QAAL,CAAc;AAACN,UAAAA,QAAQ,EAACoC,QAAQ,CAACC,IAAT,CAAcrC;AAAxB,SAAd;AACD,OAPD;AAQD,KATD,MASK;AACH,WAAKM,QAAL,CAAc;AAACN,QAAAA,QAAQ,EAAC;AAAV,OAAd;AACD;AACF;;AAEDkD,EAAAA,eAAe,CAACjD,KAAD,EAAO;AACpB,WAAO,KAAKE,KAAL,CAAWL,MAAX,CAAkBM,SAAlB,CAA4BC,GAAG,IAAEA,GAAG,KAAGJ,KAAvC,CAAP;AACD;;AAYDkD,EAAAA,gBAAgB,CAAClD,KAAD,EAAO;AACrB,WAAO,KAAKE,KAAL,CAAWJ,OAAX,CAAmBK,SAAnB,CAA6BC,GAAG,IAAEA,GAAG,KAAGJ,KAAxC,CAAP;AACD;;AA+FDmD,EAAAA,MAAM,GAAG;AACP,UAAMC,GAAG,GAAG,KAAKC,OAAjB;;AACA,UAAMC,iBAAiB,GAAG,MAAM;AAC9B,YAAMC,QAAQ,GAAGxE,QAAQ,CAACyE,MAAT,CAAgBJ,GAAhB,CAAjB;AACAG,MAAAA,QAAQ,CAACE,QAAT,CACE1E,QAAQ,CAAC2E,MAAT,CAAgBC,GADlB,EAEE,gBAFF;AAID,KAND;;AAOA,UAAMC,aAAa,GAAG,CACpB;AAACC,MAAAA,KAAK,EAAC,UAAP;AAAkBvC,MAAAA,KAAK,EAAC;AAAxB,KADoB,EAEpB;AAACuC,MAAAA,KAAK,EAAC,UAAP;AAAkBvC,MAAAA,KAAK,EAAC;AAAxB,KAFoB,EAGpB;AAACuC,MAAAA,KAAK,EAAC,UAAP;AAAkBvC,MAAAA,KAAK,EAAC;AAAxB,KAHoB,CAAtB;AAKF,WACE,mBACE;AAAK,MAAA,SAAS,EAAC;AAAf,OAEE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,SAAD;AAAW,MAAA,WAAW,EAAC,MAAvB;AAA8B,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWT,WAAhD;AAA6D,MAAA,QAAQ,EAAE,KAAKqE,YAAL,CAAkB,aAAlB;AAAvE,MADF,CADF,CAFF,EAQE,qCARF,EASE;AAAK,MAAA,SAAS,EAAC;AAAf,OACI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAE,KAAKb,eAAL,CAAqB,OAArB,CAAjC;AAAgE,MAAA,QAAQ,EAAE,KAAKc,iBAAL,CAAuB,OAAvB;AAA1E,MADJ,EAEI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,QAAhB;AAAyB,MAAA,OAAO,EAAE,KAAKd,eAAL,CAAqB,QAArB,CAAlC;AAAkE,MAAA,QAAQ,EAAE,KAAKc,iBAAL,CAAuB,QAAvB;AAA5E,MAFJ,EAGI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,eAAhB;AAAgC,MAAA,OAAO,EAAE,KAAKd,eAAL,CAAqB,cAArB,CAAzC;AAA+E,MAAA,QAAQ,EAAE,KAAKc,iBAAL,CAAuB,cAAvB;AAAzF,MAHJ,EAII,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,QAAhB;AAAyB,MAAA,OAAO,EAAE,KAAKd,eAAL,CAAqB,QAArB,CAAlC;AAAkE,MAAA,QAAQ,EAAE,KAAKc,iBAAL,CAAuB,QAAvB;AAA5E,MAJJ,EAKI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,MAAhB;AAAuB,MAAA,OAAO,EAAE,KAAKd,eAAL,CAAqB,MAArB,CAAhC;AAA8D,MAAA,QAAQ,EAAE,KAAKc,iBAAL,CAAuB,MAAvB;AAAxE,MALJ,EAMI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAwB,MAAA,OAAO,EAAE,KAAKb,gBAAL,CAAsB,OAAtB,CAAjC;AAAiE,MAAA,QAAQ,EAAE,KAAKc,kBAAL,CAAwB,OAAxB;AAA3E,MANJ,EAOI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,KAAhB;AAAsB,MAAA,OAAO,EAAE,KAAKd,gBAAL,CAAsB,KAAtB,CAA/B;AAA6D,MAAA,QAAQ,EAAE,KAAKc,kBAAL,CAAwB,KAAxB;AAAvE,MAPJ,EAQI,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,aAAhB;AAA8B,MAAA,OAAO,EAAE,KAAKf,eAAL,CAAqB,aAArB,CAAvC;AAA4E,MAAA,QAAQ,EAAE,KAAKc,iBAAL,CAAuB,aAAvB;AAAtF,MARJ,CATF,EAoBE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,SAAD;AAAW,MAAA,WAAW,EAAC,cAAvB;AAAuC,MAAA,KAAK,EAAE,KAAK7D,KAAL,CAAWR,aAAzD;AAAwE,MAAA,QAAQ,EAAE,KAAKoE,YAAL,CAAkB,eAAlB;AAAlF,MADF,CADF,EAIE,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAE,KAAKG,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB;AAAzC,kBAJF,EAKE,MAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,aAAlB;AAAgC,MAAA,OAAO,EAAE,KAAKD,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB;AAAzC,qBALF,CApBF,EA6BE;AAAK,MAAA,SAAS,EAAC;AAAf,OACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAC,YAAhB;AAA6B,MAAA,OAAO,EAAE,KAAKhE,KAAL,CAAWP,SAAjD;AAA4D,MAAA,QAAQ,EAAE,KAAKmE,YAAL,CAAkB,WAAlB;AAAtE,MADF,EAEE;AAAG,MAAA,OAAO,EAAE,KAAKK,cAAL,CAAoBD,IAApB,CAAyB,IAAzB;AAAZ,OACE,MAAC,IAAD;AAAM,MAAA,MAAM,EAAE,KAAKhE,KAAL,CAAWN,KAAX,GAAmBhB,eAAnB,GAAqCC;AAAnD,MADF,EAEG,KAAKqB,KAAL,CAAWN,KAAX,GAAmB,OAAnB,GAA6B,kBAFhC,CAFF,CA7BF,CADF,EAuCE,MAAC,IAAD,QACE,MAAC,SAAD;AACE,MAAA,kBAAkB,EAAE,CAClB,MADkB,EAElB,MAFkB,EAGlB,MAHkB,CADtB;AAME,MAAA,QAAQ,EAAE,CACR,OADQ,EAER,QAFQ,EAGR,aAHQ,CANZ;AAWE,MAAA,IAAI,EAAE,KAAKwE,kBAAL,CAAwB,KAAKlE,KAAL,CAAWH,QAAnC;AAXR,MADF,CAvCF,CADF;AA0DD;;AAnNoD;;gBAAjDT,wB,iBACmBN,O;;AAqNxB,eAAeM,wBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    TextField,\n    Thumbnail,\n    DataTable,\n    Button,\n    Checkbox,\n    Icon,\n    Select\n } from '@shopify/polaris';\n import {\n  StarFilledMinor,\n  StarOutlineMinor\n} from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash'\nimport './ResourceList.css'\nimport{ UPDATE_PRODUCTS, SEARCH_PRODUCTS, constructSearchProduct }from \"./graphql.js\"\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n    state = {\n        searchquery: \"\",\n        replacestring:\"\",\n        matchcase:false,\n        saved: false,\n        scopes:[],\n        scopesV:[],\n        products:[]\n    }\n\n    fetchQuery(){\n      console.log(\"fetch\")\n      if(this.state.searchquery!==\"\"){\n        this.props.apolloClient.query({\n          query: constructSearchProduct(this.state.scopes, this.state.scopesV),\n          variables:{variables:this.state.searchquery}\n        })\n        .then(response=>{\n          console.log(response)\n          this.setState({products:response.data.products})\n        })\n      }else{\n        this.setState({products:[]})\n      }\n    }\n\n    isScopeSelected(scope){\n      return this.state.scopes.findIndex(sco=>sco===scope)\n    }\n\n    handleScopeSelect=(scope)=>()=>{\n      const selected = this.state.scopes.findIndex(sco=>sco===scope)\n      const scopes = this.state.scopes\n      if (selected){\n        this.setState({scopes: scopes.filter(sco=>sco!==scope)},()=>this.fetchQuery())\n      }else{\n        this.setState({scopes: [...scopes,scope]},()=>this.fetchQuery())\n      }\n      \n    }\n    isScopeSelectedV(scope){\n      return this.state.scopesV.findIndex(sco=>sco===scope)\n    }\n\n    handleScopeSelectV=(scope)=>()=>{\n      const selected = this.state.scopesV.findIndex(sco=>sco===scope)\n      const scopesV = this.state.scopesV\n      if (selected){\n        this.setState({scopesV: scopesV.filter(sco=>sco!==scope)},()=>this.fetchQuery())\n      }else{\n        this.setState({scopesV: [...scopesV,scope]},()=>this.fetchQuery())\n      }\n      this.fetchQuery()\n\n    }\n\n    toggleFavorite = () => {\n      console.log(\"toggle fav\")\n      const favorite = store.get('favorite')\n      const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase'])\n      const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n      if(!this.state.saved){\n        if (!store.get('favorite')){\n          console.log(\"no current fav\")\n          console.log(\"hashedfav:\" + hashedfav)\n          store.set(\"favorite\",{[hashedfav]:searchform})\n        }else{\n          console.log(store.get('favorite'))\n          store.set(\"favorite\",{...favorite, [hashedfav]:searchform})\n        }\n        this.setState({ saved:true })\n      }else{\n        delete favorite[hashedfav]\n        store.set(\"favorite\",favorite)\n        this.setState({ saved:false })\n      }\n    }\n\n    handleChange = (field) =>  (value) => {\n      this.setState({ [field]: value }, ()=>{\n        const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase'])\n        const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n        const saved = store.get('favorite') && store.get('favorite')[hashedfav]\n        this.setState({ saved })\n        this.fetchQuery()\n      })\n    };\n\n    handleReplace = () => {\n      if(!this.state.products || this.state.products.length<1){\n        return \n      }\n      this.state.products.edges.map(item=>{\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables:{input:this.transformData(item.node)}\n        })\n        .then(response=>{\n          console.log(response)\n        })\n      })\n      this.setState({searchquery:\"\",replacestring:\"\"},()=>this.fetchQuery())\n    }\n\n    transformData = (data)=>{\n      const searchquery = new RegExp(this.state.searchquery, \"gi\");\n      const result = {\n        id:data.id,\n        title: data.title.replace(searchquery, this.state.replacestring),\n        handle: data.handle.replace(searchquery, this.state.replacestring),\n        descriptionHtml: `<p>${data.description.replace(searchquery, this.state.replacestring)}</p>`,\n      }\n      return result\n    }\n\n    InjectHighlight = (text) => {\n      const replace = new RegExp(this.state.searchquery, \"gi\");\n      return (\n        <span\n          dangerouslySetInnerHTML={{\n            __html : text.replace(replace, function (x) {\n              return `<span style=\"background-color:yellow\">${x}</span>`;\n            })\n          }} />\n      )\n    }\n\n    ConvertDatatoTable = (data) =>{\n      if (!data || data.length < 1){\n        return [[]]\n      }\n      return data.edges.map(item=>{\n        const node = item.node\n        return [this.InjectHighlight(node.title), this.InjectHighlight(node.handle), this.InjectHighlight(node.description)]\n      })\n    }\n    \n    render() {\n      const app = this.context;\n      const redirectToProduct = () => {\n        const redirect = Redirect.create(app);\n        redirect.dispatch(\n          Redirect.Action.APP,\n          '/edit-products',\n        );\n      };\n      const selectoptions = [\n        {label:\"products\",value:\"products\"},\n        {label:\"products\",value:\"products\"},\n        {label:\"products\",value:\"products\"},\n      ]\n    return (\n      <div>\n        <div className=\"form-container\">\n          \n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Find\" value={this.state.searchquery} onChange={this.handleChange('searchquery')} />\n            </div>\n          </div>\n          \n          <h3>Include fields: </h3>\n          <div className=\"form-row\">\n              <Checkbox label=\"Title\" checked={this.isScopeSelected('title')} onChange={this.handleScopeSelect('title')} />\n              <Checkbox label=\"Handle\" checked={this.isScopeSelected('handle')} onChange={this.handleScopeSelect('handle')} />\n              <Checkbox label=\"Product types\" checked={this.isScopeSelected('producttypes')} onChange={this.handleScopeSelect('producttypes')} />\n              <Checkbox label=\"Vendor\" checked={this.isScopeSelected('vendor')} onChange={this.handleScopeSelect('vendor')} />\n              <Checkbox label=\"Tags\" checked={this.isScopeSelected('tags')} onChange={this.handleScopeSelect('tags')} />\n              <Checkbox label=\"Price\" checked={this.isScopeSelectedV('price')} onChange={this.handleScopeSelectV('price')} />\n              <Checkbox label=\"SKU\" checked={this.isScopeSelectedV('sku')} onChange={this.handleScopeSelectV('sku')} />\n              <Checkbox label=\"Description\" checked={this.isScopeSelected('description')} onChange={this.handleScopeSelect('description')} />\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Replace with\"  value={this.state.replacestring} onChange={this.handleChange('replacestring')} />\n            </div>\n            <Button className=\"form-button\" onClick={this.handleReplace.bind(this)}>Replace </Button>\n            <Button className=\"form-button\" onClick={this.handleReplace.bind(this)}>Replace all</Button>\n          </div>\n\n\n          <div className=\"form-row\">\n            <Checkbox label=\"Match case\" checked={this.state.matchcase} onChange={this.handleChange('matchcase')} />\n            <a onClick={this.toggleFavorite.bind(this)} >\n              <Icon source={this.state.saved ? StarFilledMinor : StarOutlineMinor} />\n              {this.state.saved ? \"Saved\" : \"Save to Favorite\"}\n            </a>\n          </div>\n\n        </div>\n        <Card>\n          <DataTable\n            columnContentTypes={[\n              'text',\n              'text',\n              'text',\n            ]}\n            headings={[\n              'title',\n              'handle',\n              'description',\n            ]}\n            rows={this.ConvertDatatoTable(this.state.products)}\n          />\n        </Card>\n\n      </div>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}