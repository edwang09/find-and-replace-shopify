{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    query getProducts($searchquery: String!) {\\n      products(query: $searchquery first: 50) {\\n        edges {\\n          node {\\n              \", \"\\n            id\\n            variants(first: 1) {\\n              edges {\\n                node {\\n                  \", \"\\n                  id\\n                }\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts {\\n    products(first:100) {\\n        edges {\\n            node {\\n                title\\n                handle\\n                description\\n                productType\\n                tags\\n                vendor\\n                id\\n                variants(first: 1) {\\n                    edges {\\n                        node {\\n                            price\\n                            sku\\n                            id\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($searchquery: String!) {\\n    products(query: $searchquery first: 50) {\\n      edges {\\n        node {\\n          title\\n          handle\\n          description\\n          id\\n          variants(first: 1) {\\n            edges {\\n              node {\\n                price\\n                id\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation productUpdate($input: ProductInput!) {\\n    productUpdate(input: $input) {\\n      product {\\n        id\\n        title\\n        handle\\n        description\\n      }\\n      userErrors {\\n        field\\n        message\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nexport var UPDATE_PRODUCTS = gql(_templateObject());\nexport var SEARCH_PRODUCTS = gql(_templateObject2());\nexport var LIST_PRODUCTS = gql(_templateObject3());\nexport var constructSearchProduct = function constructSearchProduct(productList, VariantList) {\n  return gql(_templateObject4(), productList.join(\"\\n\"), VariantList.join(\"\\n\"));\n};","map":null,"metadata":{},"sourceType":"module"}