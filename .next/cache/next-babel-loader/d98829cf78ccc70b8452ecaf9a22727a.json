{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, ResourceItem, TextField, Thumbnail, DataTable, Button, Checkbox, Icon, Toast, Frame } from '@shopify/polaris';\nimport { StarFilledMinor, StarOutlineMinor } from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport './ResourceList.css';\nimport { UPDATE_PRODUCTS, SEARCH_PRODUCTS, LIST_PRODUCTS } from \"./graphql.js\";\n\nclass ResourceListWithProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      favorites: {},\n      bundles: {},\n      selectedItems: [],\n      loading: \"\",\n      toasts: []\n    });\n\n    _defineProperty(this, \"transformData\", (data, searchquery, replacestring, scopes, matchcase, operation) => {\n      const regsearchquery = new RegExp(searchquery, this.getRegexCase(matchcase));\n      let result = {\n        id: data.id\n      };\n      scopes.map(sco => {\n        if (sco === \"tags\") {\n          if (operation === \"insert\") {\n            result[sco] = [replacestring, ...data[sco]];\n          } else if (operation === \"append\") {\n            result[sco] = [...data[sco], replacestring];\n          } else {\n            result[sco] = data[sco].map(tag => tag.replace(regsearchquery, replacestring));\n          }\n        } else if (sco === \"description\") {\n          if (operation === \"insert\") {\n            result[sco] = `<p>${replacestring}</p><p>` + data[sco] + '</p>';\n          } else if (operation === \"append\") {\n            result[sco] = '<p>' + data[sco] + `</p><p>${replacestring}</p>`;\n          } else {\n            result[\"descriptionHtml\"] = '<p>' + data[sco].replace(regsearchquery, replacestring) + '</p>';\n          }\n        } else {\n          if (operation === \"insert\") {\n            result[sco] = replacestring + data[sco];\n          } else if (operation === \"append\") {\n            result[sco] = data[sco] + replacestring;\n          } else {\n            result[sco] = data[sco].replace(regsearchquery, replacestring);\n          }\n        }\n      });\n      console.log(result);\n      return result;\n    });\n\n    _defineProperty(this, \"handleReplace\", (products, searchquery, replacestring, scopes, matchcase, operation) => {\n      return new _Promise((resolve, reject) => {\n        if (!products || products.length < 1) {\n          reject(\"no product\");\n        }\n\n        const promises = products.length;\n        let count = promises;\n        products.map(item => {\n          this.props.apolloClient.mutate({\n            mutation: UPDATE_PRODUCTS,\n            variables: {\n              input: this.transformData(item.node, searchquery, replacestring, scopes, matchcase, operation)\n            }\n          }).then(response => {\n            console.log(response);\n            count -= 1;\n\n            if (count === 0) {\n              resolve({\n                promises,\n                searchquery,\n                replacestring\n              });\n            }\n          });\n        });\n      });\n    });\n  }\n\n  randomString(length) {\n    return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1);\n  }\n\n  getRegexCase(matchcase) {\n    return matchcase ? \"g\" : \"gi\";\n  }\n\n  setSelectedItems(selectedItems) {\n    console.log(selectedItems);\n    return this.setState({\n      selectedItems\n    });\n  }\n\n  ObjtoArray(obj) {\n    return _Object$keys(obj).map(key => {\n      return _objectSpread({}, obj[key], {\n        key\n      });\n    });\n  }\n\n  ArrayobjtoArray(obj) {\n    return _Object$keys(obj).map(key => {\n      return {\n        content: obj[key],\n        key\n      };\n    });\n  }\n\n  componentDidMount() {\n    this.fetchQuery();\n    const favorites = store.get(\"favorite\") ? store.get(\"favorite\") : {};\n    const bundles = store.get(\"bundle\") ? store.get(\"bundle\") : {}; // if(Object.keys.length(bundles)===0){\n    //     store.set(\"bundle\",{})\n    // }\n\n    console.log(favorites);\n    console.log(bundles);\n    this.setState({\n      favorites,\n      bundles\n    });\n  }\n\n  fetchQuery() {\n    this.setState({\n      fetching: true\n    });\n    this.props.apolloClient.query({\n      query: LIST_PRODUCTS\n    }).then(response => this.setState({\n      allproducts: response.data.products.edges,\n      fetching: false\n    }));\n  }\n\n  filterQuery(searchquery, scopes, matchcase, operation) {\n    return new _Promise((resolve, reject) => {\n      if (operation === \"insert\" || opertaion === \"append\") {\n        return this.state.allproducts;\n      } else if (searchquery !== \"\" && scopes.length !== 0 && this.state.allproducts.length !== 0) {\n        const currentproducts = this.state.allproducts.filter(prod => {\n          const regx = new RegExp(searchquery, this.getRegexCase(matchcase));\n          return scopes.some(sco => {\n            if (sco === \"tags\") {\n              return prod.node[sco].join(\"/n\").search(regx) > -1;\n            }\n\n            return prod.node[sco].search(regx) > -1;\n          });\n        });\n        console.log(\"currentproducts\");\n        resolve(currentproducts);\n      } else {\n        resolve([]);\n      }\n    });\n  }\n\n  runFavorite(key) {\n    const {\n      searchquery,\n      replacestring,\n      scopes,\n      matchcase,\n      operation\n    } = this.state.favorites[key];\n    this.setState({\n      loading: key\n    });\n    this.filterQuery(searchquery, scopes, matchcase, operation).then(response => {\n      console.log(response);\n\n      if (response && response.length > 0) {\n        this.handleReplace(response, searchquery, replacestring, scopes, matchcase, operation).then(res => {\n          this.setState({\n            loading: null,\n            toasts: [...this.state.toasts, {\n              key: this.randomString(10),\n              content: `${res.promises} products changed.`\n            }]\n          });\n          this.fetchQuery();\n        });\n      } else {\n        this.setState({\n          loading: null,\n          toasts: [...this.state.toasts, {\n            key: this.randomString(10),\n            content: `no matching product found`\n          }]\n        });\n      }\n    });\n  }\n\n  removeFavorite(key) {\n    const {\n      favorites\n    } = this.state;\n    delete favorites[key];\n    store.set(\"favorite\", favorites);\n    this.setState({\n      favorites\n    });\n  }\n\n  createBundle() {\n    const {\n      favorites,\n      bundles\n    } = this.state;\n    const newbundle = this.state.selectedItems.reduce((bundle, key) => {\n      console.log(bundle);\n      const fav = favorites[key];\n      console.log(fav);\n      delete favorites[key];\n      return [...bundle, fav];\n    }, []);\n    const newbundlekey = \"bundle:\" + this.state.selectedItems.join(';');\n    console.log(newbundle);\n    console.log(newbundlekey);\n    console.log(favorites);\n    store.set(\"favorite\", favorites);\n    let newbundles;\n\n    if (!store.get('bundle')) {\n      console.log(\"no current bundle\");\n      newbundles = {\n        [newbundlekey]: newbundle\n      };\n    } else {\n      newbundles = _objectSpread({}, bundles, {\n        [newbundlekey]: newbundle\n      });\n    }\n\n    store.set(\"bundle\", newbundles);\n    this.setState({\n      selectedItems: [],\n      favorites,\n      bundles: newbundles\n    });\n  }\n\n  unbundle(key) {\n    const {\n      favorites,\n      bundles\n    } = this.state;\n    const bundle = bundles[key];\n    bundle.map(fav => {\n      const hashedfav = _Object$keys(fav).sort().map(x => fav[x].toString()).join(\";\");\n\n      favorites[hashedfav] = fav;\n    });\n    delete bundles[key];\n    console.log(bundles);\n    console.log(favorites);\n    store.set(\"favorite\", favorites);\n    store.set(\"bundle\", bundles);\n    this.setState({\n      favorites,\n      bundles\n    });\n  }\n\n  runBundle(key) {\n    const bundle = this.state.bundles[key];\n    this.setState({\n      loading: key\n    });\n    const bundles = bundle.length;\n    let count = bundles;\n    bundle.map(fav => {\n      const {\n        searchquery,\n        replacestring,\n        scopes,\n        matchcase,\n        operation\n      } = fav;\n      this.filterQuery(searchquery, scopes, matchcase, operation).then(response => {\n        console.log(response);\n\n        if (response && response.length > 0) {\n          this.handleReplace(response, searchquery, replacestring, scopes, matchcase, operation).then(res => {\n            this.setState({\n              toasts: [...this.state.toasts, {\n                key: this.randomString(10),\n                content: `${res.promises} products changed.`\n              }]\n            }, () => {\n              count -= 1;\n\n              if (count === 0) {\n                this.setState({\n                  loading: null,\n                  toasts: [...this.state.toasts, {\n                    key: this.randomString(10),\n                    content: `bundle completed.`\n                  }]\n                });\n                this.fetchQuery();\n              }\n            });\n          });\n        } else {\n          this.setState({\n            toasts: [...this.state.toasts, {\n              key: this.randomString(10),\n              content: `no matching product found.`\n            }]\n          }, () => {\n            count -= 1;\n\n            if (count === 0) {\n              this.setState({\n                loading: null,\n                toasts: [...this.state.toasts, {\n                  key: this.randomString(10),\n                  content: `bundle completed.`\n                }]\n              });\n              this.fetchQuery();\n            }\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    const toastMarkup = this.state.toasts.map(toast => {\n      return __jsx(Toast, {\n        key: toast.key,\n        content: toast.content,\n        onDismiss: () => this.setState({\n          toasts: this.state.toasts.filter(to => to.key !== toast.key)\n        })\n      });\n    });\n    return __jsx(Frame, null, __jsx(Card, null, __jsx(ResourceList, {\n      resourceName: {\n        singular: 'favorite',\n        plural: 'favorites'\n      },\n      items: this.ObjtoArray(this.state.favorites),\n      selectedItems: this.state.selectedItems,\n      onSelectionChange: this.setSelectedItems.bind(this),\n      selectable: true,\n      promotedBulkActions: [{\n        content: 'Bundle',\n        onAction: () => this.createBundle()\n      }],\n      renderItem: item => {\n        const {\n          key,\n          searchquery,\n          replacestring,\n          matchcase,\n          scopes,\n          operation\n        } = item;\n        const shortcutActions = [{\n          content: 'Run',\n          loading: this.state.loading === key,\n          onAction: () => this.runFavorite(key)\n        }, {\n          content: 'Remove',\n          onAction: () => this.removeFavorite(key)\n        }];\n        const title = {\n          \"find\": `Find \"${searchquery}\"`,\n          \"insert\": \"Insert in front\",\n          \"append\": \"Append to end\"\n        };\n        return __jsx(ResourceItem, {\n          id: key,\n          key: key,\n          shortcutActions: shortcutActions,\n          persistActions: true,\n          name: searchquery\n        }, __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, title[operation], \" | \"), __jsx(TextStyle, {\n          variation: \"subdued\"\n        }, \"in (\", scopes.toString(), \")\")), __jsx(\"div\", null, searchquery === 'find' ? \"Replace\" : \"\", \" with :\\\"\", replacestring, \"\\\" \", matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"));\n      }\n    })), __jsx(Card, null, __jsx(ResourceList, {\n      resourceName: {\n        singular: 'bundle',\n        plural: 'bundles'\n      },\n      items: this.ArrayobjtoArray(this.state.bundles),\n      renderItem: item => {\n        const {\n          key,\n          content\n        } = item;\n        const shortcutActions = [{\n          content: 'Run',\n          loading: this.state.loading === key,\n          onAction: () => this.runBundle(key)\n        }, {\n          content: 'Unbundle',\n          onAction: () => this.unbundle(key)\n        }];\n        return __jsx(ResourceItem, {\n          id: key,\n          key: key,\n          persistActions: true,\n          shortcutActions: shortcutActions\n        }, __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, \"Bundle\")), content.map(item => {\n          const title = {\n            \"find\": `Find \"${item.searchquery}\"`,\n            \"insert\": \"Insert in front\",\n            \"append\": \"Append to end\"\n          };\n          return __jsx(\"div\", null, title[item.operation], \" in (\", item.scopes.toString(), \"); \", item.searchquery === 'find' ? \"Replace\" : \"\", \" with :\\\"\", item.replacestring, \"\\\" \", item.matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\");\n        }));\n      }\n    })), this.state.showtoast ? __jsx(Toast, {\n      content: this.state.toastcontent,\n      onDismiss: () => this.setState({\n        showtoast: false\n      })\n    }) : null, toastMarkup);\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/components/FavoriteList.js"],"names":["gql","Query","Mutation","Card","ResourceList","Stack","TextStyle","ResourceItem","TextField","Thumbnail","DataTable","Button","Checkbox","Icon","Toast","Frame","StarFilledMinor","StarOutlineMinor","store","Redirect","Context","useMutation","_","UPDATE_PRODUCTS","SEARCH_PRODUCTS","LIST_PRODUCTS","ResourceListWithProducts","React","Component","favorites","bundles","selectedItems","loading","toasts","data","searchquery","replacestring","scopes","matchcase","operation","regsearchquery","RegExp","getRegexCase","result","id","map","sco","tag","replace","console","log","products","resolve","reject","length","promises","count","item","props","apolloClient","mutate","mutation","variables","input","transformData","node","then","response","randomString","Math","round","pow","random","toString","slice","setSelectedItems","setState","ObjtoArray","obj","key","ArrayobjtoArray","content","componentDidMount","fetchQuery","get","fetching","query","allproducts","edges","filterQuery","opertaion","state","currentproducts","filter","prod","regx","some","join","search","runFavorite","handleReplace","res","removeFavorite","set","createBundle","newbundle","reduce","bundle","fav","newbundlekey","newbundles","unbundle","hashedfav","sort","x","runBundle","render","toastMarkup","toast","to","singular","plural","bind","onAction","shortcutActions","title","showtoast","toastcontent"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,cAAhC;AACA,SAASC,IAAT,EACIC,YADJ,EAEIC,KAFJ,EAGIC,SAHJ,EAIIC,YAJJ,EAKIC,SALJ,EAMIC,SANJ,EAOIC,SAPJ,EAQIC,MARJ,EASIC,QATJ,EAUIC,IAVJ,EAWIC,KAXJ,EAYIC,KAZJ,QAaQ,kBAbR;AAcC,SACCC,eADD,EAECC,gBAFD,QAGM,wBAHN;AAID,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,QAAT,QAAyB,6BAAzB;AACA,SAASC,OAAT,QAAwB,2BAAxB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,oBAAP;AACA,SAAQC,eAAR,EAAyBC,eAAzB,EAA0CC,aAA1C,QAA8D,cAA9D;;AAEA,MAAMC,wBAAN,SAAuCC,KAAK,CAACC,SAA7C,CAAuD;AAAA;AAAA;;AAAA,mCAE3C;AACJC,MAAAA,SAAS,EAAC,EADN;AAEJC,MAAAA,OAAO,EAAC,EAFJ;AAGJC,MAAAA,aAAa,EAAE,EAHX;AAIJC,MAAAA,OAAO,EAAE,EAJL;AAKJC,MAAAA,MAAM,EAAC;AALH,KAF2C;;AAAA,2CAcnC,CAACC,IAAD,EAAOC,WAAP,EAAoBC,aAApB,EAAmCC,MAAnC,EAA2CC,SAA3C,EAAsDC,SAAtD,KAAkE;AAC9E,YAAMC,cAAc,GAAG,IAAIC,MAAJ,CAAWN,WAAX,EAAwB,KAAKO,YAAL,CAAkBJ,SAAlB,CAAxB,CAAvB;AACA,UAAIK,MAAM,GAAG;AAACC,QAAAA,EAAE,EAACV,IAAI,CAACU;AAAT,OAAb;AACAP,MAAAA,MAAM,CAACQ,GAAP,CAAWC,GAAG,IAAE;AACZ,YAAGA,GAAG,KAAG,MAAT,EAAgB;AACZ,cAAIP,SAAS,KAAK,QAAlB,EAA2B;AACzBI,YAAAA,MAAM,CAACG,GAAD,CAAN,GAAc,CAAEV,aAAF,EAAiB,GAAGF,IAAI,CAACY,GAAD,CAAxB,CAAd;AACD,WAFD,MAEM,IAAIP,SAAS,KAAK,QAAlB,EAA2B;AAC/BI,YAAAA,MAAM,CAACG,GAAD,CAAN,GAAc,CAAC,GAAGZ,IAAI,CAACY,GAAD,CAAR,EAAeV,aAAf,CAAd;AACD,WAFK,MAED;AACHO,YAAAA,MAAM,CAACG,GAAD,CAAN,GAAcZ,IAAI,CAACY,GAAD,CAAJ,CAAUD,GAAV,CAAcE,GAAG,IAAEA,GAAG,CAACC,OAAJ,CAAYR,cAAZ,EAA4BJ,aAA5B,CAAnB,CAAd;AACD;AACF,SARH,MAQQ,IAAGU,GAAG,KAAG,aAAT,EAAuB;AAC3B,cAAIP,SAAS,KAAK,QAAlB,EAA2B;AACzBI,YAAAA,MAAM,CAACG,GAAD,CAAN,GAAe,MAAKV,aAAc,SAApB,GAA+BF,IAAI,CAACY,GAAD,CAAnC,GAA2C,MAAzD;AACD,WAFD,MAEM,IAAIP,SAAS,KAAK,QAAlB,EAA2B;AAC/BI,YAAAA,MAAM,CAACG,GAAD,CAAN,GAAc,QAAQZ,IAAI,CAACY,GAAD,CAAZ,GAAqB,UAASV,aAAc,MAA1D;AACD,WAFK,MAED;AACHO,YAAAA,MAAM,CAAC,iBAAD,CAAN,GAA4B,QAAQT,IAAI,CAACY,GAAD,CAAJ,CAAUE,OAAV,CAAkBR,cAAlB,EAAkCJ,aAAlC,CAAR,GAA2D,MAAvF;AACD;AACF,SARK,MAQD;AACH,cAAIG,SAAS,KAAK,QAAlB,EAA2B;AACzBI,YAAAA,MAAM,CAACG,GAAD,CAAN,GAAcV,aAAa,GAAGF,IAAI,CAACY,GAAD,CAAlC;AACD,WAFD,MAEM,IAAIP,SAAS,KAAK,QAAlB,EAA2B;AAC/BI,YAAAA,MAAM,CAACG,GAAD,CAAN,GAAcZ,IAAI,CAACY,GAAD,CAAJ,GAAYV,aAA1B;AACD,WAFK,MAED;AACHO,YAAAA,MAAM,CAACG,GAAD,CAAN,GAAcZ,IAAI,CAACY,GAAD,CAAJ,CAAUE,OAAV,CAAkBR,cAAlB,EAAkCJ,aAAlC,CAAd;AACD;AACJ;AACJ,OA1BD;AA2BAa,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,aAAOA,MAAP;AACH,KA9CkD;;AAAA,2CA+CnC,CAACQ,QAAD,EAAWhB,WAAX,EAAwBC,aAAxB,EAAuCC,MAAvC,EAA+CC,SAA/C,EAA0DC,SAA1D,KAAwE;AACpF,aAAO,aAAY,CAACa,OAAD,EAAUC,MAAV,KAAmB;AAClC,YAAG,CAACF,QAAD,IAAaA,QAAQ,CAACG,MAAT,GAAgB,CAAhC,EAAkC;AAC9BD,UAAAA,MAAM,CAAC,YAAD,CAAN;AACH;;AACD,cAAME,QAAQ,GAAEJ,QAAQ,CAACG,MAAzB;AACA,YAAIE,KAAK,GAAGD,QAAZ;AACAJ,QAAAA,QAAQ,CAACN,GAAT,CAAaY,IAAI,IAAE;AACf,eAAKC,KAAL,CAAWC,YAAX,CAAwBC,MAAxB,CAA+B;AAC3BC,YAAAA,QAAQ,EAAEtC,eADiB;AAE3BuC,YAAAA,SAAS,EAAC;AAACC,cAAAA,KAAK,EAAC,KAAKC,aAAL,CAAmBP,IAAI,CAACQ,IAAxB,EAA8B9B,WAA9B,EAA2CC,aAA3C,EAA0DC,MAA1D,EAAkEC,SAAlE,EAA6EC,SAA7E;AAAP;AAFiB,WAA/B,EAIC2B,IAJD,CAIMC,QAAQ,IAAE;AACZlB,YAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ;AACAX,YAAAA,KAAK,IAAI,CAAT;;AACA,gBAAGA,KAAK,KAAK,CAAb,EAAe;AACXJ,cAAAA,OAAO,CAAC;AAACG,gBAAAA,QAAD;AAAWpB,gBAAAA,WAAX;AAAwBC,gBAAAA;AAAxB,eAAD,CAAP;AACH;AACJ,WAVD;AAWH,SAZD;AAcH,OApBM,CAAP;AAqBH,KArEkD;AAAA;;AAUnDgC,EAAAA,YAAY,CAACd,MAAD,EAAS;AACjB,WAAOe,IAAI,CAACC,KAAL,CAAYD,IAAI,CAACE,GAAL,CAAS,EAAT,EAAajB,MAAM,GAAG,CAAtB,IAA2Be,IAAI,CAACG,MAAL,KAAgBH,IAAI,CAACE,GAAL,CAAS,EAAT,EAAajB,MAAb,CAAvD,EAA8EmB,QAA9E,CAAuF,EAAvF,EAA2FC,KAA3F,CAAiG,CAAjG,CAAP;AACH;;AACDhC,EAAAA,YAAY,CAACJ,SAAD,EAAW;AAAC,WAAOA,SAAS,GAAG,GAAH,GAAS,IAAzB;AAA8B;;AA0DtDqC,EAAAA,gBAAgB,CAAC5C,aAAD,EAAe;AAC3BkB,IAAAA,OAAO,CAACC,GAAR,CAAYnB,aAAZ;AACA,WAAO,KAAK6C,QAAL,CAAc;AAAC7C,MAAAA;AAAD,KAAd,CAAP;AACH;;AAED8C,EAAAA,UAAU,CAACC,GAAD,EAAK;AACX,WAAO,aAAYA,GAAZ,EAAiBjC,GAAjB,CAAsBkC,GAAD,IAAO;AAC/B,+BAAWD,GAAG,CAACC,GAAD,CAAd;AAAqBA,QAAAA;AAArB;AACH,KAFM,CAAP;AAGH;;AACDC,EAAAA,eAAe,CAACF,GAAD,EAAK;AAChB,WAAO,aAAYA,GAAZ,EAAiBjC,GAAjB,CAAsBkC,GAAD,IAAO;AAC/B,aAAO;AAACE,QAAAA,OAAO,EAAEH,GAAG,CAACC,GAAD,CAAb;AAAoBA,QAAAA;AAApB,OAAP;AACH,KAFM,CAAP;AAGH;;AACDG,EAAAA,iBAAiB,GAAE;AACf,SAAKC,UAAL;AACA,UAAMtD,SAAS,GAAGX,KAAK,CAACkE,GAAN,CAAU,UAAV,IAAwBlE,KAAK,CAACkE,GAAN,CAAU,UAAV,CAAxB,GAAgD,EAAlE;AACA,UAAMtD,OAAO,GAAGZ,KAAK,CAACkE,GAAN,CAAU,QAAV,IAAsBlE,KAAK,CAACkE,GAAN,CAAU,QAAV,CAAtB,GAA4C,EAA5D,CAHe,CAIf;AACA;AACA;;AACAnC,IAAAA,OAAO,CAACC,GAAR,CAAYrB,SAAZ;AACAoB,IAAAA,OAAO,CAACC,GAAR,CAAYpB,OAAZ;AACA,SAAK8C,QAAL,CAAc;AAAC/C,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,KAAd;AACH;;AACDqD,EAAAA,UAAU,GAAE;AACV,SAAKP,QAAL,CAAc;AAACS,MAAAA,QAAQ,EAAC;AAAV,KAAd;AACA,SAAK3B,KAAL,CAAWC,YAAX,CAAwB2B,KAAxB,CAA8B;AAACA,MAAAA,KAAK,EAAE7D;AAAR,KAA9B,EAAsDyC,IAAtD,CAA2DC,QAAQ,IAAE,KAAKS,QAAL,CAAc;AAACW,MAAAA,WAAW,EAACpB,QAAQ,CAACjC,IAAT,CAAciB,QAAd,CAAuBqC,KAApC;AAA2CH,MAAAA,QAAQ,EAAC;AAApD,KAAd,CAArE;AACD;;AACDI,EAAAA,WAAW,CAACtD,WAAD,EAAcE,MAAd,EAAsBC,SAAtB,EAAiCC,SAAjC,EAA2C;AAClD,WAAO,aAAY,CAACa,OAAD,EAAUC,MAAV,KAAmB;AAClC,UAAGd,SAAS,KAAG,QAAZ,IAAwBmD,SAAS,KAAI,QAAxC,EAAiD;AAC7C,eAAO,KAAKC,KAAL,CAAWJ,WAAlB;AACH,OAFD,MAEM,IAAGpD,WAAW,KAAG,EAAd,IAAqBE,MAAM,CAACiB,MAAP,KAAkB,CAAvC,IAA8C,KAAKqC,KAAL,CAAWJ,WAAX,CAAuBjC,MAAvB,KAAkC,CAAnF,EAAuF;AAC3F,cAAMsC,eAAe,GAAG,KAAKD,KAAL,CAAWJ,WAAX,CAAuBM,MAAvB,CAA8BC,IAAI,IAAE;AAC1D,gBAAMC,IAAI,GAAG,IAAItD,MAAJ,CAAWN,WAAX,EAAwB,KAAKO,YAAL,CAAkBJ,SAAlB,CAAxB,CAAb;AACA,iBAAOD,MAAM,CAAC2D,IAAP,CAAYlD,GAAG,IAAE;AACtB,gBAAGA,GAAG,KAAG,MAAT,EAAgB;AACd,qBAAQgD,IAAI,CAAC7B,IAAL,CAAUnB,GAAV,EAAemD,IAAf,CAAoB,IAApB,EAA0BC,MAA1B,CAAiCH,IAAjC,IAAuC,CAAC,CAAhD;AACD;;AACD,mBAAQD,IAAI,CAAC7B,IAAL,CAAUnB,GAAV,EAAeoD,MAAf,CAAsBH,IAAtB,IAA4B,CAAC,CAArC;AACD,WALM,CAAP;AAMD,SARuB,CAAxB;AASA9C,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAE,QAAAA,OAAO,CAACwC,eAAD,CAAP;AACD,OAZK,MAYD;AACDxC,QAAAA,OAAO,CAAC,EAAD,CAAP;AACH;AACJ,KAlBM,CAAP;AAmBD;;AACH+C,EAAAA,WAAW,CAACpB,GAAD,EAAK;AACZ,UAAO;AAAC5C,MAAAA,WAAD;AAAcC,MAAAA,aAAd;AAA6BC,MAAAA,MAA7B;AAAqCC,MAAAA,SAArC;AAAgDC,MAAAA;AAAhD,QAA6D,KAAKoD,KAAL,CAAW9D,SAAX,CAAqBkD,GAArB,CAApE;AACA,SAAKH,QAAL,CAAc;AAAE5C,MAAAA,OAAO,EAAC+C;AAAV,KAAd;AACA,SAAKU,WAAL,CAAiBtD,WAAjB,EAA8BE,MAA9B,EAAsCC,SAAtC,EAAiDC,SAAjD,EACC2B,IADD,CACMC,QAAQ,IAAE;AACZlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ;;AACA,UAAGA,QAAQ,IAAIA,QAAQ,CAACb,MAAT,GAAkB,CAAjC,EAAmC;AAC/B,aAAK8C,aAAL,CAAmBjC,QAAnB,EAA6BhC,WAA7B,EAA0CC,aAA1C,EAAyDC,MAAzD,EAAiEC,SAAjE,EAA4EC,SAA5E,EAAuF2B,IAAvF,CAA6FmC,GAAD,IAAO;AAC/F,eAAKzB,QAAL,CAAc;AAAE5C,YAAAA,OAAO,EAAC,IAAV;AAAgBC,YAAAA,MAAM,EAAE,CAAC,GAAG,KAAK0D,KAAL,CAAW1D,MAAf,EAAuB;AAAC8C,cAAAA,GAAG,EAAE,KAAKX,YAAL,CAAkB,EAAlB,CAAN;AAA6Ba,cAAAA,OAAO,EAAG,GAAEoB,GAAG,CAAC9C,QAAS;AAAtD,aAAvB;AAAxB,WAAd;AACA,eAAK4B,UAAL;AACH,SAHD;AAIH,OALD,MAKK;AACD,aAAKP,QAAL,CAAc;AAAE5C,UAAAA,OAAO,EAAC,IAAV;AAAgBC,UAAAA,MAAM,EAAE,CAAC,GAAG,KAAK0D,KAAL,CAAW1D,MAAf,EAAuB;AAAC8C,YAAAA,GAAG,EAAE,KAAKX,YAAL,CAAkB,EAAlB,CAAN;AAA6Ba,YAAAA,OAAO,EAAG;AAAvC,WAAvB;AAAxB,SAAd;AACH;AACJ,KAXD;AAYH;;AACDqB,EAAAA,cAAc,CAACvB,GAAD,EAAK;AACf,UAAM;AAAElD,MAAAA;AAAF,QAAgB,KAAK8D,KAA3B;AACA,WAAO9D,SAAS,CAACkD,GAAD,CAAhB;AACA7D,IAAAA,KAAK,CAACqF,GAAN,CAAU,UAAV,EAAqB1E,SAArB;AACA,SAAK+C,QAAL,CAAc;AAAC/C,MAAAA;AAAD,KAAd;AACH;;AAED2E,EAAAA,YAAY,GAAE;AACV,UAAM;AAAE3E,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAyB,KAAK6D,KAApC;AACA,UAAMc,SAAS,GAAG,KAAKd,KAAL,CAAW5D,aAAX,CAAyB2E,MAAzB,CAAgC,CAACC,MAAD,EAAS5B,GAAT,KAAe;AAC7D9B,MAAAA,OAAO,CAACC,GAAR,CAAYyD,MAAZ;AACA,YAAMC,GAAG,GAAG/E,SAAS,CAACkD,GAAD,CAArB;AACA9B,MAAAA,OAAO,CAACC,GAAR,CAAY0D,GAAZ;AACA,aAAO/E,SAAS,CAACkD,GAAD,CAAhB;AACA,aAAO,CAAC,GAAG4B,MAAJ,EAAWC,GAAX,CAAP;AACH,KANiB,EAMhB,EANgB,CAAlB;AAOA,UAAMC,YAAY,GAAG,YAAU,KAAKlB,KAAL,CAAW5D,aAAX,CAAyBkE,IAAzB,CAA8B,GAA9B,CAA/B;AACAhD,IAAAA,OAAO,CAACC,GAAR,CAAYuD,SAAZ;AACAxD,IAAAA,OAAO,CAACC,GAAR,CAAY2D,YAAZ;AACA5D,IAAAA,OAAO,CAACC,GAAR,CAAYrB,SAAZ;AACAX,IAAAA,KAAK,CAACqF,GAAN,CAAU,UAAV,EAAqB1E,SAArB;AACA,QAAIiF,UAAJ;;AACA,QAAI,CAAC5F,KAAK,CAACkE,GAAN,CAAU,QAAV,CAAL,EAAyB;AACrBnC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA4D,MAAAA,UAAU,GAAG;AAAC,SAACD,YAAD,GAAeJ;AAAhB,OAAb;AACH,KAHD,MAGK;AACDK,MAAAA,UAAU,qBAAOhF,OAAP;AAAgB,SAAC+E,YAAD,GAAeJ;AAA/B,QAAV;AACH;;AACDvF,IAAAA,KAAK,CAACqF,GAAN,CAAU,QAAV,EAAmBO,UAAnB;AACA,SAAKlC,QAAL,CAAc;AAAC7C,MAAAA,aAAa,EAAC,EAAf;AAAmBF,MAAAA,SAAnB;AAA8BC,MAAAA,OAAO,EAAEgF;AAAvC,KAAd;AACH;;AAEDC,EAAAA,QAAQ,CAAChC,GAAD,EAAK;AACT,UAAM;AAAElD,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAAyB,KAAK6D,KAApC;AACA,UAAMgB,MAAM,GAAG7E,OAAO,CAACiD,GAAD,CAAtB;AACA4B,IAAAA,MAAM,CAAC9D,GAAP,CAAW+D,GAAG,IAAI;AACd,YAAMI,SAAS,GAAG,aAAYJ,GAAZ,EAAiBK,IAAjB,GAAwBpE,GAAxB,CAA4BqE,CAAC,IAAIN,GAAG,CAACM,CAAD,CAAH,CAAOzC,QAAP,EAAjC,EAAoDwB,IAApD,CAAyD,GAAzD,CAAlB;;AACApE,MAAAA,SAAS,CAACmF,SAAD,CAAT,GAAuBJ,GAAvB;AACH,KAHD;AAIA,WAAO9E,OAAO,CAACiD,GAAD,CAAd;AACA9B,IAAAA,OAAO,CAACC,GAAR,CAAYpB,OAAZ;AACAmB,IAAAA,OAAO,CAACC,GAAR,CAAYrB,SAAZ;AACAX,IAAAA,KAAK,CAACqF,GAAN,CAAU,UAAV,EAAqB1E,SAArB;AACAX,IAAAA,KAAK,CAACqF,GAAN,CAAU,QAAV,EAAmBzE,OAAnB;AACA,SAAK8C,QAAL,CAAc;AAAC/C,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,KAAd;AACH;;AAEDqF,EAAAA,SAAS,CAACpC,GAAD,EAAK;AACV,UAAM4B,MAAM,GAAG,KAAKhB,KAAL,CAAW7D,OAAX,CAAmBiD,GAAnB,CAAf;AACA,SAAKH,QAAL,CAAc;AAAC5C,MAAAA,OAAO,EAAC+C;AAAT,KAAd;AACA,UAAMjD,OAAO,GAAG6E,MAAM,CAACrD,MAAvB;AACA,QAAIE,KAAK,GAAG1B,OAAZ;AACA6E,IAAAA,MAAM,CAAC9D,GAAP,CAAW+D,GAAG,IAAI;AACd,YAAO;AAACzE,QAAAA,WAAD;AAAcC,QAAAA,aAAd;AAA6BC,QAAAA,MAA7B;AAAqCC,QAAAA,SAArC;AAAgDC,QAAAA;AAAhD,UAA6DqE,GAApE;AACA,WAAKnB,WAAL,CAAiBtD,WAAjB,EAA8BE,MAA9B,EAAsCC,SAAtC,EAAiDC,SAAjD,EACC2B,IADD,CACMC,QAAQ,IAAE;AACZlB,QAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ;;AACA,YAAGA,QAAQ,IAAIA,QAAQ,CAACb,MAAT,GAAkB,CAAjC,EAAmC;AAC/B,eAAK8C,aAAL,CAAmBjC,QAAnB,EAA6BhC,WAA7B,EAA0CC,aAA1C,EAAyDC,MAAzD,EAAiEC,SAAjE,EAA4EC,SAA5E,EAAuF2B,IAAvF,CAA6FmC,GAAD,IAAO;AAC/F,iBAAKzB,QAAL,CAAc;AAAE3C,cAAAA,MAAM,EAAE,CAAC,GAAG,KAAK0D,KAAL,CAAW1D,MAAf,EAAuB;AAAC8C,gBAAAA,GAAG,EAAE,KAAKX,YAAL,CAAkB,EAAlB,CAAN;AAA6Ba,gBAAAA,OAAO,EAAG,GAAEoB,GAAG,CAAC9C,QAAS;AAAtD,eAAvB;AAAV,aAAd,EAA6H,MAAI;AAC7HC,cAAAA,KAAK,IAAI,CAAT;;AACA,kBAAIA,KAAK,KAAK,CAAd,EAAgB;AACZ,qBAAKoB,QAAL,CAAc;AAAE5C,kBAAAA,OAAO,EAAC,IAAV;AAAgBC,kBAAAA,MAAM,EAAE,CAAC,GAAG,KAAK0D,KAAL,CAAW1D,MAAf,EAAuB;AAAC8C,oBAAAA,GAAG,EAAE,KAAKX,YAAL,CAAkB,EAAlB,CAAN;AAA6Ba,oBAAAA,OAAO,EAAG;AAAvC,mBAAvB;AAAxB,iBAAd;AACA,qBAAKE,UAAL;AACH;AACJ,aAND;AAOH,WARD;AASH,SAVD,MAUK;AACD,eAAKP,QAAL,CAAc;AAAE3C,YAAAA,MAAM,EAAE,CAAC,GAAG,KAAK0D,KAAL,CAAW1D,MAAf,EAAuB;AAAC8C,cAAAA,GAAG,EAAE,KAAKX,YAAL,CAAkB,EAAlB,CAAN;AAA6Ba,cAAAA,OAAO,EAAG;AAAvC,aAAvB;AAAV,WAAd,EAAsH,MAAI;AACtHzB,YAAAA,KAAK,IAAI,CAAT;;AACA,gBAAIA,KAAK,KAAK,CAAd,EAAgB;AACZ,mBAAKoB,QAAL,CAAc;AAAE5C,gBAAAA,OAAO,EAAC,IAAV;AAAgBC,gBAAAA,MAAM,EAAE,CAAC,GAAG,KAAK0D,KAAL,CAAW1D,MAAf,EAAuB;AAAC8C,kBAAAA,GAAG,EAAE,KAAKX,YAAL,CAAkB,EAAlB,CAAN;AAA6Ba,kBAAAA,OAAO,EAAG;AAAvC,iBAAvB;AAAxB,eAAd;AACA,mBAAKE,UAAL;AACH;AACJ,WAND;AAOH;AACJ,OAtBD;AAuBH,KAzBD;AA0BH;;AAEDiC,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,KAAK1B,KAAL,CAAW1D,MAAX,CAAkBY,GAAlB,CAAsByE,KAAK,IAAE;AAC7C,aAAS,MAAC,KAAD;AAAO,QAAA,GAAG,EAAIA,KAAK,CAACvC,GAApB;AAAyB,QAAA,OAAO,EAAEuC,KAAK,CAACrC,OAAxC;AAAiD,QAAA,SAAS,EAAE,MAAI,KAAKL,QAAL,CAAc;AAAC3C,UAAAA,MAAM,EAAC,KAAK0D,KAAL,CAAW1D,MAAX,CAAkB4D,MAAlB,CAAyB0B,EAAE,IAAEA,EAAE,CAACxC,GAAH,KAAWuC,KAAK,CAACvC,GAA9C;AAAR,SAAd;AAAhE,QAAT;AACH,KAFmB,CAApB;AAGF,WACI,MAAC,KAAD,QACA,MAAC,IAAD,QACA,MAAC,YAAD;AACI,MAAA,YAAY,EAAE;AAACyC,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,MAAM,EAAE;AAA/B,OADlB;AAEI,MAAA,KAAK,EAAE,KAAK5C,UAAL,CAAgB,KAAKc,KAAL,CAAW9D,SAA3B,CAFX;AAGI,MAAA,aAAa,EAAE,KAAK8D,KAAL,CAAW5D,aAH9B;AAII,MAAA,iBAAiB,EAAE,KAAK4C,gBAAL,CAAsB+C,IAAtB,CAA2B,IAA3B,CAJvB;AAKI,MAAA,UAAU,MALd;AAMI,MAAA,mBAAmB,EAAE,CACjB;AACEzC,QAAAA,OAAO,EAAE,QADX;AAEE0C,QAAAA,QAAQ,EAAE,MAAI,KAAKnB,YAAL;AAFhB,OADiB,CANzB;AAYI,MAAA,UAAU,EAAG/C,IAAD,IAAU;AACtB,cAAM;AAACsB,UAAAA,GAAD;AAAM5C,UAAAA,WAAN;AAAmBC,UAAAA,aAAnB;AAAkCE,UAAAA,SAAlC;AAA6CD,UAAAA,MAA7C;AAAoDE,UAAAA;AAApD,YAAiEkB,IAAvE;AACA,cAAMmE,eAAe,GAAG,CACpB;AACI3C,UAAAA,OAAO,EAAE,KADb;AAEIjD,UAAAA,OAAO,EAAG,KAAK2D,KAAL,CAAW3D,OAAX,KAAuB+C,GAFrC;AAGI4C,UAAAA,QAAQ,EAAE,MAAI,KAAKxB,WAAL,CAAiBpB,GAAjB;AAHlB,SADoB,EAKjB;AACCE,UAAAA,OAAO,EAAE,QADV;AAEC0C,UAAAA,QAAQ,EAAE,MAAI,KAAKrB,cAAL,CAAoBvB,GAApB;AAFf,SALiB,CAAxB;AASA,cAAM8C,KAAK,GAAG;AACV,kBAAS,SAAQ1F,WAAY,GADnB;AAEV,oBAAU,iBAFA;AAGV,oBAAU;AAHA,SAAd;AAKA,eACI,MAAC,YAAD;AACA,UAAA,EAAE,EAAE4C,GADJ;AAEA,UAAA,GAAG,EAAEA,GAFL;AAGA,UAAA,eAAe,EAAE6C,eAHjB;AAIA,UAAA,cAAc,MAJd;AAKA,UAAA,IAAI,EAAEzF;AALN,WAOA,kBACA,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,WAA+B0F,KAAK,CAACtF,SAAD,CAApC,QADA,EAEA,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,mBAAoCF,MAAM,CAACoC,QAAP,EAApC,MAFA,CAPA,EAWA,mBAAMtC,WAAW,KAAG,MAAd,GAAuB,SAAvB,GAAmC,EAAzC,eAAsDC,aAAtD,SAAuEE,SAAS,GAAG,kBAAH,GAAwB,oBAAxG,CAXA,CADJ;AAeC;AA3CL,MADA,CADA,EAiDA,MAAC,IAAD,QACA,MAAC,YAAD;AACI,MAAA,YAAY,EAAE;AAACkF,QAAAA,QAAQ,EAAE,QAAX;AAAqBC,QAAAA,MAAM,EAAE;AAA7B,OADlB;AAEI,MAAA,KAAK,EAAE,KAAKzC,eAAL,CAAqB,KAAKW,KAAL,CAAW7D,OAAhC,CAFX;AAGI,MAAA,UAAU,EAAG2B,IAAD,IAAU;AACtB,cAAM;AAACsB,UAAAA,GAAD;AAAME,UAAAA;AAAN,YAAiBxB,IAAvB;AACA,cAAMmE,eAAe,GAAG,CACpB;AACI3C,UAAAA,OAAO,EAAE,KADb;AAEIjD,UAAAA,OAAO,EAAG,KAAK2D,KAAL,CAAW3D,OAAX,KAAuB+C,GAFrC;AAGI4C,UAAAA,QAAQ,EAAE,MAAI,KAAKR,SAAL,CAAepC,GAAf;AAHlB,SADoB,EAKjB;AACCE,UAAAA,OAAO,EAAE,UADV;AAEC0C,UAAAA,QAAQ,EAAE,MAAI,KAAKZ,QAAL,CAAchC,GAAd;AAFf,SALiB,CAAxB;AAUA,eACI,MAAC,YAAD;AACA,UAAA,EAAE,EAAEA,GADJ;AAEA,UAAA,GAAG,EAAEA,GAFL;AAGA,UAAA,cAAc,MAHd;AAIA,UAAA,eAAe,EAAE6C;AAJjB,WAMA,kBACI,MAAC,SAAD;AAAW,UAAA,SAAS,EAAC;AAArB,oBADJ,CANA,EASC3C,OAAO,CAACpC,GAAR,CAAaY,IAAD,IAAQ;AACjB,gBAAMoE,KAAK,GAAG;AACV,oBAAS,SAAQpE,IAAI,CAACtB,WAAY,GADxB;AAEV,sBAAU,iBAFA;AAGV,sBAAU;AAHA,WAAd;AAKA,iBAAQ,mBAAM0F,KAAK,CAACpE,IAAI,CAAClB,SAAN,CAAX,WAAkCkB,IAAI,CAACpB,MAAL,CAAYoC,QAAZ,EAAlC,SAA6DhB,IAAI,CAACtB,WAAL,KAAmB,MAAnB,GAA4B,SAA5B,GAAwC,EAArG,eAAkHsB,IAAI,CAACrB,aAAvH,SAAwIqB,IAAI,CAACnB,SAAL,GAAiB,kBAAjB,GAAsC,oBAA9K,CAAR;AACH,SAPA,CATD,CADJ;AAoBC;AAnCL,MADA,CAjDA,EAwFC,KAAKqD,KAAL,CAAWmC,SAAX,GAAwB,MAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKnC,KAAL,CAAWoC,YAA3B;AAAyC,MAAA,SAAS,EAAE,MAAM,KAAKnD,QAAL,CAAc;AAACkD,QAAAA,SAAS,EAAC;AAAX,OAAd;AAA1D,MAAxB,GAA0H,IAxF3H,EAyFCT,WAzFD,CADJ;AA6FD;;AA3ToD;;gBAAjD3F,wB,iBACmBN,O;;AA6TxB,eAAeM,wBAAf","sourcesContent":["import gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    ResourceItem,\n    TextField,\n    Thumbnail,\n    DataTable,\n    Button,\n    Checkbox,\n    Icon,\n    Toast,\n    Frame\n } from '@shopify/polaris';\n import {\n  StarFilledMinor,\n  StarOutlineMinor\n} from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash'\nimport './ResourceList.css'\nimport{ UPDATE_PRODUCTS, SEARCH_PRODUCTS, LIST_PRODUCTS }from \"./graphql.js\"\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n    state = {\n        favorites:{},\n        bundles:{},\n        selectedItems: [],\n        loading: \"\",\n        toasts:[]\n\n    }\n    randomString(length) {\n        return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1);\n    }\n    getRegexCase(matchcase){return matchcase ? \"g\" : \"gi\"}\n    transformData = (data, searchquery, replacestring, scopes, matchcase, operation)=>{\n        const regsearchquery = new RegExp(searchquery, this.getRegexCase(matchcase));\n        let result = {id:data.id}\n        scopes.map(sco=>{\n            if(sco===\"tags\"){\n                if (operation === \"insert\"){\n                  result[sco] = [ replacestring, ...data[sco]]\n                }else if (operation === \"append\"){\n                  result[sco] = [...data[sco], replacestring]\n                }else{\n                  result[sco] = data[sco].map(tag=>tag.replace(regsearchquery, replacestring))\n                }\n              }else if(sco===\"description\"){\n                if (operation === \"insert\"){\n                  result[sco] = `<p>${replacestring}</p><p>` + data[sco] + '</p>'\n                }else if (operation === \"append\"){\n                  result[sco] = '<p>' + data[sco] + `</p><p>${replacestring}</p>`\n                }else{\n                  result[\"descriptionHtml\"] = '<p>' + data[sco].replace(regsearchquery, replacestring) + '</p>'\n                }\n              }else{\n                if (operation === \"insert\"){\n                  result[sco] = replacestring + data[sco]\n                }else if (operation === \"append\"){\n                  result[sco] = data[sco] + replacestring\n                }else{\n                  result[sco] = data[sco].replace(regsearchquery, replacestring)\n                }\n            }\n        })\n        console.log(result)\n        return result\n    }\n    handleReplace = (products, searchquery, replacestring, scopes, matchcase, operation) => {\n        return new Promise((resolve, reject)=>{\n            if(!products || products.length<1){\n                reject(\"no product\") \n            }\n            const promises =products.length\n            let count = promises\n            products.map(item=>{\n                this.props.apolloClient.mutate({\n                    mutation: UPDATE_PRODUCTS,\n                    variables:{input:this.transformData(item.node, searchquery, replacestring, scopes, matchcase, operation)}\n                })\n                .then(response=>{\n                    console.log(response)\n                    count -= 1\n                    if(count === 0){\n                        resolve({promises, searchquery, replacestring})\n                    }\n                })\n            })\n\n        })\n    }\n\n    setSelectedItems(selectedItems){\n        console.log(selectedItems)\n        return this.setState({selectedItems})\n    }\n\n    ObjtoArray(obj){\n        return Object.keys(obj).map((key)=>{\n            return {...obj[key], key}\n        })\n    }\n    ArrayobjtoArray(obj){\n        return Object.keys(obj).map((key)=>{\n            return {content: obj[key], key}\n        })\n    }\n    componentDidMount(){\n        this.fetchQuery()\n        const favorites = store.get(\"favorite\") ? store.get(\"favorite\") : {}\n        const bundles = store.get(\"bundle\") ? store.get(\"bundle\") : {}\n        // if(Object.keys.length(bundles)===0){\n        //     store.set(\"bundle\",{})\n        // }\n        console.log(favorites)\n        console.log(bundles)\n        this.setState({favorites, bundles})\n    }\n    fetchQuery(){\n      this.setState({fetching:true})\n      this.props.apolloClient.query({query: LIST_PRODUCTS}).then(response=>this.setState({allproducts:response.data.products.edges, fetching:false}))\n    }\n    filterQuery(searchquery, scopes, matchcase, operation){\n        return new Promise((resolve, reject)=>{\n            if(operation===\"insert\" || opertaion ===\"append\"){\n                return this.state.allproducts\n            }else if(searchquery!==\"\" && (scopes.length !== 0) && (this.state.allproducts.length !== 0) ){\n              const currentproducts = this.state.allproducts.filter(prod=>{\n                const regx = new RegExp(searchquery, this.getRegexCase(matchcase));\n                return scopes.some(sco=>{\n                  if(sco===\"tags\"){\n                    return (prod.node[sco].join(\"/n\").search(regx)>-1)\n                  }\n                  return (prod.node[sco].search(regx)>-1)\n                })\n              })\n              console.log(\"currentproducts\")\n              resolve(currentproducts)\n            }else{\n                resolve([])\n            }\n        })\n      }\n    runFavorite(key){\n        const  {searchquery, replacestring, scopes, matchcase, operation} = this.state.favorites[key]\n        this.setState({ loading:key })\n        this.filterQuery(searchquery, scopes, matchcase, operation)\n        .then(response=>{\n            console.log(response)\n            if(response && response.length > 0){\n                this.handleReplace(response ,searchquery, replacestring, scopes, matchcase, operation).then((res)=>{\n                    this.setState({ loading:null, toasts: [...this.state.toasts, {key: this.randomString(10), content: `${res.promises} products changed.`}] })\n                    this.fetchQuery()\n                })\n            }else{\n                this.setState({ loading:null, toasts: [...this.state.toasts, {key: this.randomString(10), content: `no matching product found`}] })\n            }\n        })\n    }\n    removeFavorite(key){\n        const { favorites } = this.state\n        delete favorites[key]\n        store.set(\"favorite\",favorites)\n        this.setState({favorites})\n    }\n\n    createBundle(){\n        const { favorites, bundles } = this.state\n        const newbundle = this.state.selectedItems.reduce((bundle, key)=>{\n            console.log(bundle)\n            const fav = favorites[key]\n            console.log(fav)\n            delete favorites[key]\n            return [...bundle,fav]\n        },[])\n        const newbundlekey = \"bundle:\"+this.state.selectedItems.join(';')\n        console.log(newbundle)\n        console.log(newbundlekey)\n        console.log(favorites)\n        store.set(\"favorite\",favorites)\n        let newbundles\n        if (!store.get('bundle')){\n            console.log(\"no current bundle\")\n            newbundles = {[newbundlekey]:newbundle}\n        }else{\n            newbundles = {...bundles, [newbundlekey]:newbundle}\n        }\n        store.set(\"bundle\",newbundles)\n        this.setState({selectedItems:[], favorites, bundles: newbundles})\n    }\n    \n    unbundle(key){\n        const { favorites, bundles } = this.state\n        const bundle = bundles[key]\n        bundle.map(fav => {\n            const hashedfav = Object.keys(fav).sort().map(x => fav[x].toString()).join(\";\");\n            favorites[hashedfav] = fav\n        })\n        delete bundles[key]\n        console.log(bundles)\n        console.log(favorites)\n        store.set(\"favorite\",favorites)\n        store.set(\"bundle\",bundles)\n        this.setState({favorites, bundles})\n    }\n\n    runBundle(key){\n        const bundle = this.state.bundles[key]\n        this.setState({loading:key})\n        const bundles = bundle.length\n        let count = bundles\n        bundle.map(fav => {\n            const  {searchquery, replacestring, scopes, matchcase, operation} = fav\n            this.filterQuery(searchquery, scopes, matchcase, operation)\n            .then(response=>{\n                console.log(response)\n                if(response && response.length > 0){\n                    this.handleReplace(response ,searchquery, replacestring, scopes, matchcase, operation).then((res)=>{\n                        this.setState({ toasts: [...this.state.toasts, {key: this.randomString(10), content: `${res.promises} products changed.`}] },()=>{\n                            count -= 1\n                            if (count === 0){\n                                this.setState({ loading:null, toasts: [...this.state.toasts, {key: this.randomString(10), content: `bundle completed.`}] })\n                                this.fetchQuery()\n                            }\n                        })\n                    })\n                }else{\n                    this.setState({ toasts: [...this.state.toasts, {key: this.randomString(10), content: `no matching product found.`}] },()=>{\n                        count -= 1\n                        if (count === 0){\n                            this.setState({ loading:null, toasts: [...this.state.toasts, {key: this.randomString(10), content: `bundle completed.`}] })\n                            this.fetchQuery()\n                        }\n                    })\n                }\n            })\n        })\n    }\n    \n    render() {\n      const toastMarkup = this.state.toasts.map(toast=>{\n          return  (<Toast key = {toast.key} content={toast.content} onDismiss={()=>this.setState({toasts:this.state.toasts.filter(to=>to.key !== toast.key)})}/>)\n      })\n    return (\n        <Frame>\n        <Card>\n        <ResourceList\n            resourceName={{singular: 'favorite', plural: 'favorites'}}\n            items={this.ObjtoArray(this.state.favorites)}\n            selectedItems={this.state.selectedItems}\n            onSelectionChange={this.setSelectedItems.bind(this)}\n            selectable\n            promotedBulkActions={[\n                {\n                  content: 'Bundle',\n                  onAction: ()=>this.createBundle(),\n                }\n            ]}\n            renderItem={(item) => {\n            const {key, searchquery, replacestring, matchcase, scopes,operation} = item;\n            const shortcutActions = [\n                {\n                    content: 'Run',\n                    loading: (this.state.loading === key),\n                    onAction: ()=>this.runFavorite(key),\n                }, {\n                    content: 'Remove',\n                    onAction: ()=>this.removeFavorite(key),\n                }]\n            const title = {\n                \"find\": `Find \"${searchquery}\"`,\n                \"insert\": \"Insert in front\",\n                \"append\": \"Append to end\"\n                }\n            return (\n                <ResourceItem\n                id={key}\n                key={key}\n                shortcutActions={shortcutActions}\n                persistActions\n                name={searchquery}\n                >\n                <h3>\n                <TextStyle variation=\"strong\">{title[operation]} | </TextStyle>\n                <TextStyle variation=\"subdued\">in ({scopes.toString()})</TextStyle>\n                </h3>\n                <div>{searchquery==='find' ? \"Replace\" : \"\" } with :\"{replacestring}\" {matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"}</div>\n                </ResourceItem>\n            );\n            }}\n        />\n        </Card>\n\n        <Card>\n        <ResourceList\n            resourceName={{singular: 'bundle', plural: 'bundles'}}\n            items={this.ArrayobjtoArray(this.state.bundles)}\n            renderItem={(item) => {\n            const {key, content} = item;\n            const shortcutActions = [\n                {\n                    content: 'Run',\n                    loading: (this.state.loading === key),\n                    onAction: ()=>this.runBundle(key),\n                }, {\n                    content: 'Unbundle',\n                    onAction: ()=>this.unbundle(key),\n                }]\n              \n            return (\n                <ResourceItem\n                id={key}\n                key={key}\n                persistActions\n                shortcutActions={shortcutActions}\n                >\n                <h3>\n                    <TextStyle variation=\"strong\">Bundle</TextStyle>\n                </h3>\n                {content.map((item)=>{\n                    const title = {\n                        \"find\": `Find \"${item.searchquery}\"`,\n                        \"insert\": \"Insert in front\",\n                        \"append\": \"Append to end\"\n                    }\n                    return (<div>{title[item.operation]} in ({item.scopes.toString()}); {item.searchquery==='find' ? \"Replace\" : \"\" } with :\"{item.replacestring}\" {item.matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"}</div>)\n                })}\n                </ResourceItem>\n            );\n            }}\n        />\n        </Card>\n        {this.state.showtoast ? (<Toast content={this.state.toastcontent} onDismiss={() => this.setState({showtoast:false})} />) : null}\n        {toastMarkup}\n        </Frame>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}