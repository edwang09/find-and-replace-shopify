{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport store from 'store-js';\nimport { Card, Page, TextField, DataTable, Button, Checkbox, Icon, Frame, Toast, ChoiceList } from '@shopify/polaris';\nimport { StarFilledMinor, StarOutlineMinor } from '@shopify/polaris-icons';\nimport { Context } from '@shopify/app-bridge-react';\nimport _ from 'lodash';\nimport './index.css';\nimport { UPDATE_PRODUCTS, constructListproduct, constructSearchProduct } from \"../components/graphql\";\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Index)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      fetching: true,\n      loading: false,\n      searchquery: \"\",\n      replacestring: \"\",\n      matchcase: false,\n      saved: false,\n      scopes: [],\n      scopesV: [],\n      products: [],\n      allproducts: [],\n      operation: 'find'\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScopeSelect\", function (scope, isVariant) {\n      return function () {\n        var scopetype = isVariant ? \"scopesV\" : \"scopes\";\n        var scopes = _this.state[scopetype];\n        var selected = _this.state[scopetype].findIndex(function (sco) {\n          return sco === scope;\n        }) > -1;\n\n        if (selected) {\n          _this.setState(_defineProperty({}, scopetype, scopes.filter(function (sco) {\n            return sco !== scope;\n          })), function () {\n            _this.filterQuery();\n          });\n        } else {\n          _this.setState(_defineProperty({}, scopetype, [].concat(_toConsumableArray(scopes), [scope])), function () {\n            _this.filterQuery();\n          });\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"toggleFavorite\", function () {\n      console.log(\"toggle fav\");\n      var favorite = store.get('favorite');\n\n      var searchform = _.pick(_this.state, ['searchquery', 'replacestring', 'matchcase', 'scopes', 'operation']);\n\n      var hashedfav = _Object$keys(searchform).sort().map(function (x) {\n        return searchform[x].toString();\n      }).join(\";\");\n\n      if (!_this.state.saved) {\n        if (!store.get('favorite')) {\n          console.log(\"no current fav\");\n          console.log(\"hashedfav:\" + hashedfav);\n          store.set(\"favorite\", _defineProperty({}, hashedfav, searchform));\n        } else {\n          console.log(store.get('favorite'));\n          store.set(\"favorite\", _objectSpread({}, favorite, _defineProperty({}, hashedfav, searchform)));\n        }\n\n        _this.setState({\n          saved: true\n        });\n      } else {\n        delete favorite[hashedfav];\n        store.set(\"favorite\", favorite);\n\n        _this.setState({\n          saved: false\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {\n      return function (value) {\n        if (field === \"operation\") {\n          value = value[0];\n        }\n\n        _this.setState(_defineProperty({}, field, value), function () {\n          var searchform = _.pick(_this.state, ['searchquery', 'replacestring', 'matchcase', 'scopes']);\n\n          var hashedfav = _Object$keys(searchform).sort().map(function (x) {\n            return searchform[x].toString();\n          }).join(\";\");\n\n          var saved = store.get('favorite') && store.get('favorite')[hashedfav];\n\n          _this.setState({\n            saved: saved\n          });\n\n          _this.filterQuery();\n        });\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleReplace\", function () {\n      if (!_this.state.products || _this.state.products.length < 1) {\n        return;\n      }\n\n      _this.setState({\n        loading: true\n      });\n\n      var promises = _this.state.products.length;\n      var count = promises;\n\n      _this.state.products.map(function (item, idx) {\n        _this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables: {\n            input: _this.transformData(item.node)\n          }\n        }).then(function (response) {\n          console.log(response);\n          count -= 1;\n\n          if (count === 0) {\n            _this.fetchQuery();\n\n            _this.setState({\n              loading: false,\n              showtoast: true,\n              toastcontent: \"\".concat(promises, \" products changed.\")\n            });\n          }\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"transformData\", function (data) {\n      var searchquery = new RegExp(_this.state.searchquery, _this.getRegexCase());\n      var result = {\n        id: data.id\n      };\n      var operation = _this.state.operation;\n\n      _this.state.scopes.map(function (sco) {\n        if (sco === \"tags\") {\n          if (operation === \"insert\") {\n            result[sco] = [_this.state.replacestring].concat(_toConsumableArray(data[sco]));\n          } else if (operation === \"append\") {\n            result[sco] = [].concat(_toConsumableArray(data[sco]), [_this.state.replacestring]);\n          } else {\n            result[sco] = data[sco].map(function (tag) {\n              return tag.replace(searchquery, _this.state.replacestring);\n            });\n          }\n        } else if (sco === \"description\") {\n          if (operation === \"insert\") {\n            result[sco] = \"<p>\".concat(_this.state.replacestring, \"</p><p>\") + data[sco] + '</p>';\n          } else if (operation === \"append\") {\n            result[sco] = '<p>' + data[sco] + \"</p><p>\".concat(_this.state.replacestring, \"</p>\");\n          } else {\n            result[\"descriptionHtml\"] = '<p>' + data[sco].replace(searchquery, _this.state.replacestring) + '</p>';\n          }\n        } else {\n          if (operation === \"insert\") {\n            result[sco] = _this.state.replacestring + data[sco];\n          } else if (operation === \"append\") {\n            result[sco] = data[sco] + _this.state.replacestring;\n          } else {\n            result[sco] = data[sco].replace(searchquery, _this.state.replacestring);\n          }\n        }\n      });\n\n      console.log(result);\n      return result;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"InjectHighlight\", function (text) {\n      if (!text) {\n        return \"NA\";\n      }\n\n      var replace = new RegExp(_this.state.searchquery, _this.getRegexCase());\n      return __jsx(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: text.replace(replace, function (x) {\n            return \"<span style=\\\"background-color:yellow\\\">\".concat(x, \"</span>\");\n          })\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"ConvertDatatoTable\", function (data) {\n      if (!data || data.length < 1) {\n        return [[]];\n      }\n\n      return data.map(function (item) {\n        var node = item.node;\n        return _this.getHeader().map(function (sco) {\n          if (sco === \"tags\") {\n            if (_this.state.scopes.findIndex(function (scope) {\n              return sco === scope;\n            }) == -1) {\n              return node[sco].join(\"/n\");\n            }\n\n            return _this.InjectHighlight(node[sco].join(\"/n\"));\n          }\n\n          if (_this.state.scopes.findIndex(function (scope) {\n            return sco === scope;\n          }) == -1) {\n            return node[sco];\n          }\n\n          return _this.InjectHighlight(node[sco]);\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchQuery();\n    }\n  }, {\n    key: \"getRegexCase\",\n    value: function getRegexCase() {\n      return this.state.matchcase ? \"g\" : \"gi\";\n    }\n  }, {\n    key: \"fetchQuery\",\n    value: function fetchQuery() {\n      var fetch, cursor, response;\n      return _regeneratorRuntime.async(function fetchQuery$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"fetch\");\n              this.setState({\n                fetching: true\n              });\n              fetch = true;\n              cursor = null;\n\n            case 4:\n              if (!fetch) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 7;\n              return _regeneratorRuntime.awrap(this.props.apolloClient.query({\n                query: constructListproduct()\n              }));\n\n            case 7:\n              response = _context.sent;\n              fetch = response.data.products.pageInfo.hasNextPage;\n              cursor = response.data.products.edges[response.data.products.edges.length - 1].cursor;\n              this.setState({\n                allproducts: [].concat(_toConsumableArray(this.state.allproducts), [response.data.products.edges])\n              });\n              _context.next = 4;\n              break;\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this);\n    }\n  }, {\n    key: \"filterQuery\",\n    value: function filterQuery() {\n      var _this2 = this;\n\n      console.log(\"filter\");\n\n      if (this.state.operation === \"insert\" || this.state.operation === \"append\") {\n        console.log(this.state.allproducts);\n        this.setState({\n          products: this.state.allproducts\n        });\n      } else if (this.state.searchquery !== \"\" && this.state.scopes.length + this.state.scopesV.length !== 0 && this.state.allproducts !== 0) {\n        var currentproducts = this.state.allproducts.filter(function (prod) {\n          var regx = new RegExp(_this2.state.searchquery, _this2.getRegexCase());\n          return _this2.state.scopes.some(function (sco) {\n            if (sco === \"tags\") {\n              return prod.node[sco].join(\"/n\").search(regx) > -1;\n            }\n\n            return prod.node[sco].search(regx) > -1;\n          });\n        });\n        console.log(currentproducts);\n        this.setState({\n          products: currentproducts\n        });\n      } else {\n        this.setState({\n          products: []\n        });\n      }\n    }\n  }, {\n    key: \"getHeader\",\n    value: function getHeader() {\n      return [\"title\", \"handle\"].concat(_toConsumableArray(this.state.scopes.filter(function (sco) {\n        return sco !== \"title\" && sco !== \"handle\";\n      })));\n    }\n  }, {\n    key: \"getHeaderType\",\n    value: function getHeaderType() {\n      return Array(this.state.scopes.length).fill('text');\n    }\n  }, {\n    key: \"isScopeSelected\",\n    value: function isScopeSelected(scope, isVariant) {\n      if (isVariant) {\n        return this.state.scopesV.findIndex(function (sco) {\n          return sco === scope;\n        }) > -1;\n      }\n\n      return this.state.scopes.findIndex(function (sco) {\n        return sco === scope;\n      }) > -1;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var app = this.context;\n      var placeholder = {\n        \"find\": \"Replace with\",\n        \"insert\": \"Insert text\",\n        \"append\": \"Append text\"\n      };\n      return __jsx(Page, {\n        fullWidth: true\n      }, __jsx(Frame, null, __jsx(\"div\", {\n        className: \"form-container\"\n      }, __jsx(\"h3\", null, __jsx(\"b\", null, \"Operation: \")), __jsx(\"div\", {\n        className: \"form-row\"\n      }, __jsx(ChoiceList // title=\"Operation: \"\n      , {\n        choices: [{\n          label: 'Find and Place',\n          value: 'find'\n        }, {\n          label: 'Insert in front',\n          value: 'insert'\n        }, {\n          label: 'Append to end',\n          value: 'append'\n        }],\n        selected: this.state.operation,\n        onChange: this.handleChange('operation')\n      })), this.state.operation === 'find' && __jsx(\"div\", {\n        className: \"form-row\"\n      }, __jsx(\"div\", {\n        className: \"form-input\"\n      }, __jsx(TextField, {\n        placeholder: \"Find\",\n        value: this.state.searchquery,\n        onChange: this.handleChange('searchquery')\n      }))), __jsx(\"h3\", null, __jsx(\"b\", null, \"In fields: \")), __jsx(\"div\", {\n        className: \"form-row\"\n      }, __jsx(Checkbox, {\n        label: \"Title\",\n        checked: this.isScopeSelected('title'),\n        onChange: this.handleScopeSelect('title')\n      }), __jsx(Checkbox, {\n        label: \"Handle\",\n        checked: this.isScopeSelected('handle'),\n        onChange: this.handleScopeSelect('handle')\n      }), __jsx(Checkbox, {\n        label: \"Product types\",\n        checked: this.isScopeSelected('productType'),\n        onChange: this.handleScopeSelect('productType')\n      }), __jsx(Checkbox, {\n        label: \"Vendor\",\n        checked: this.isScopeSelected('vendor'),\n        onChange: this.handleScopeSelect('vendor')\n      }), __jsx(Checkbox, {\n        label: \"Tags\",\n        checked: this.isScopeSelected('tags'),\n        onChange: this.handleScopeSelect('tags')\n      }), __jsx(Checkbox, {\n        label: \"Description\",\n        checked: this.isScopeSelected('description'),\n        onChange: this.handleScopeSelect('description')\n      })), __jsx(\"h3\", null, __jsx(\"b\", null, \"Variant fields\"), \"(not in use): \"), __jsx(\"div\", {\n        className: \"form-row\"\n      }, __jsx(Checkbox, {\n        label: \"Price\",\n        disabled: true,\n        checked: this.isScopeSelected('price', true),\n        onChange: this.handleScopeSelect('price', true)\n      }), __jsx(Checkbox, {\n        label: \"SKU\",\n        disabled: true,\n        checked: this.isScopeSelected('sku', true),\n        onChange: this.handleScopeSelect('sku', true)\n      })), __jsx(\"div\", {\n        className: \"form-row\"\n      }, __jsx(\"div\", {\n        className: \"form-input\"\n      }, __jsx(TextField, {\n        placeholder: placeholder[this.state.operation],\n        value: this.state.replacestring,\n        onChange: this.handleChange('replacestring')\n      })), __jsx(Button, {\n        className: \"form-button\",\n        loading: this.state.loading,\n        onClick: this.handleReplace.bind(this)\n      }, \"Replace \")), __jsx(\"div\", {\n        className: \"form-row\"\n      }, __jsx(Checkbox, {\n        label: \"Match case\",\n        checked: this.state.matchcase,\n        onChange: this.handleChange('matchcase')\n      }), __jsx(\"a\", {\n        className: \"form-item\",\n        onClick: this.toggleFavorite.bind(this)\n      }, __jsx(Icon, {\n        source: this.state.saved ? StarFilledMinor : StarOutlineMinor\n      }), __jsx(\"p\", null, this.state.saved ? \"Saved\" : \"Save to Favorite\")))), __jsx(Card, null, __jsx(DataTable, {\n        columnContentTypes: this.getHeaderType(),\n        headings: this.getHeader(),\n        rows: this.ConvertDatatoTable(this.state.products)\n      })), this.state.showtoast ? __jsx(Toast, {\n        content: this.state.toastcontent,\n        onDismiss: function onDismiss() {\n          return _this3.setState({\n            showtoast: false\n          });\n        }\n      }) : null));\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\n_defineProperty(Index, \"contextType\", Context);\n\nexport default Index;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/pages/index.js"],"names":["store","Card","Page","TextField","DataTable","Button","Checkbox","Icon","Frame","Toast","ChoiceList","StarFilledMinor","StarOutlineMinor","Context","_","UPDATE_PRODUCTS","constructListproduct","constructSearchProduct","Index","fetching","loading","searchquery","replacestring","matchcase","saved","scopes","scopesV","products","allproducts","operation","scope","isVariant","scopetype","state","selected","findIndex","sco","setState","filter","filterQuery","console","log","favorite","get","searchform","pick","hashedfav","sort","map","x","toString","join","set","field","value","length","promises","count","item","idx","props","apolloClient","mutate","mutation","variables","input","transformData","node","then","response","fetchQuery","showtoast","toastcontent","data","RegExp","getRegexCase","result","id","tag","replace","text","__html","getHeader","InjectHighlight","fetch","cursor","query","pageInfo","hasNextPage","edges","currentproducts","prod","regx","some","search","Array","fill","app","context","placeholder","label","handleChange","isScopeSelected","handleScopeSelect","handleReplace","bind","toggleFavorite","getHeaderType","ConvertDatatoTable","React","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SACEC,IADF,EAEEC,IAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,MALF,EAMEC,QANF,EAOEC,IAPF,EAQEC,KARF,EASEC,KATF,EAUEC,UAVF,QAWO,kBAXP;AAYA,SACEC,eADF,EAEEC,gBAFF,QAGO,wBAHP;AAIA,SAASC,OAAT,QAAwB,2BAAxB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAO,aAAP;AACA,SAAQC,eAAR,EAAyBC,oBAAzB,EAA+CC,sBAA/C,QAA4E,uBAA5E;;IAEMC,K;;;;;;;;;;;;;;;;;;4DAEM;AACNC,MAAAA,QAAQ,EAAC,IADH;AAENC,MAAAA,OAAO,EAAC,KAFF;AAGJC,MAAAA,WAAW,EAAE,EAHT;AAIJC,MAAAA,aAAa,EAAC,EAJV;AAKJC,MAAAA,SAAS,EAAC,KALN;AAMJC,MAAAA,KAAK,EAAE,KANH;AAOJC,MAAAA,MAAM,EAAC,EAPH;AAQJC,MAAAA,OAAO,EAAC,EARJ;AASJC,MAAAA,QAAQ,EAAC,EATL;AAUJC,MAAAA,WAAW,EAAC,EAVR;AAWJC,MAAAA,SAAS,EAAE;AAXP,K;;wEAmEU,UAACC,KAAD,EAAOC,SAAP;AAAA,aAAmB,YAAI;AACvC,YAAMC,SAAS,GAAGD,SAAS,GAAG,SAAH,GAAe,QAA1C;AACA,YAAMN,MAAM,GAAG,MAAKQ,KAAL,CAAWD,SAAX,CAAf;AACA,YAAME,QAAQ,GAAI,MAAKD,KAAL,CAAWD,SAAX,EAAsBG,SAAtB,CAAgC,UAAAC,GAAG;AAAA,iBAAEA,GAAG,KAAGN,KAAR;AAAA,SAAnC,IAAkD,CAAC,CAArE;;AACA,YAAII,QAAJ,EAAa;AACX,gBAAKG,QAAL,qBAAgBL,SAAhB,EAA4BP,MAAM,CAACa,MAAP,CAAc,UAAAF,GAAG;AAAA,mBAAEA,GAAG,KAAGN,KAAR;AAAA,WAAjB,CAA5B,GAA6D,YAAI;AAC/D,kBAAKS,WAAL;AACD,WAFD;AAGD,SAJD,MAIK;AACH,gBAAKF,QAAL,qBAAgBL,SAAhB,+BAAgCP,MAAhC,IAAuCK,KAAvC,KAA+C,YAAI;AACjD,kBAAKS,WAAL;AACD,WAFD;AAGD;AACF,OAbiB;AAAA,K;;qEAeD,YAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACA,UAAMC,QAAQ,GAAG1C,KAAK,CAAC2C,GAAN,CAAU,UAAV,CAAjB;;AACA,UAAMC,UAAU,GAAG9B,CAAC,CAAC+B,IAAF,CAAO,MAAKZ,KAAZ,EAAmB,CAAC,aAAD,EAAgB,eAAhB,EAAiC,WAAjC,EAA6C,QAA7C,EAAuD,WAAvD,CAAnB,CAAnB;;AACA,UAAMa,SAAS,GAAG,aAAYF,UAAZ,EAAwBG,IAAxB,GAA+BC,GAA/B,CAAmC,UAAAC,CAAC;AAAA,eAAIL,UAAU,CAACK,CAAD,CAAV,CAAcC,QAAd,EAAJ;AAAA,OAApC,EAAkEC,IAAlE,CAAuE,GAAvE,CAAlB;;AACA,UAAG,CAAC,MAAKlB,KAAL,CAAWT,KAAf,EAAqB;AACnB,YAAI,CAACxB,KAAK,CAAC2C,GAAN,CAAU,UAAV,CAAL,EAA2B;AACzBH,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAeK,SAA3B;AACA9C,UAAAA,KAAK,CAACoD,GAAN,CAAU,UAAV,sBAAuBN,SAAvB,EAAkCF,UAAlC;AACD,SAJD,MAIK;AACHJ,UAAAA,OAAO,CAACC,GAAR,CAAYzC,KAAK,CAAC2C,GAAN,CAAU,UAAV,CAAZ;AACA3C,UAAAA,KAAK,CAACoD,GAAN,CAAU,UAAV,oBAAyBV,QAAzB,sBAAoCI,SAApC,EAA+CF,UAA/C;AACD;;AACD,cAAKP,QAAL,CAAc;AAAEb,UAAAA,KAAK,EAAC;AAAR,SAAd;AACD,OAVD,MAUK;AACH,eAAOkB,QAAQ,CAACI,SAAD,CAAf;AACA9C,QAAAA,KAAK,CAACoD,GAAN,CAAU,UAAV,EAAqBV,QAArB;;AACA,cAAKL,QAAL,CAAc;AAAEb,UAAAA,KAAK,EAAC;AAAR,SAAd;AACD;AACF,K;;mEAEc,UAAC6B,KAAD;AAAA,aAAY,UAACC,KAAD,EAAW;AACpC,YAAID,KAAK,KAAG,WAAZ,EAAwB;AACtBC,UAAAA,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAb;AACD;;AACD,cAAKjB,QAAL,qBAAiBgB,KAAjB,EAAyBC,KAAzB,GAAkC,YAAI;AACpC,cAAMV,UAAU,GAAG9B,CAAC,CAAC+B,IAAF,CAAO,MAAKZ,KAAZ,EAAmB,CAAC,aAAD,EAAgB,eAAhB,EAAiC,WAAjC,EAA6C,QAA7C,CAAnB,CAAnB;;AACA,cAAMa,SAAS,GAAG,aAAYF,UAAZ,EAAwBG,IAAxB,GAA+BC,GAA/B,CAAmC,UAAAC,CAAC;AAAA,mBAAIL,UAAU,CAACK,CAAD,CAAV,CAAcC,QAAd,EAAJ;AAAA,WAApC,EAAkEC,IAAlE,CAAuE,GAAvE,CAAlB;;AACA,cAAM3B,KAAK,GAAGxB,KAAK,CAAC2C,GAAN,CAAU,UAAV,KAAyB3C,KAAK,CAAC2C,GAAN,CAAU,UAAV,EAAsBG,SAAtB,CAAvC;;AACA,gBAAKT,QAAL,CAAc;AAAEb,YAAAA,KAAK,EAALA;AAAF,WAAd;;AACA,gBAAKe,WAAL;AACD,SAND;AAOD,OAXc;AAAA,K;;oEAaC,YAAM;AACpB,UAAG,CAAC,MAAKN,KAAL,CAAWN,QAAZ,IAAwB,MAAKM,KAAL,CAAWN,QAAX,CAAoB4B,MAApB,GAA2B,CAAtD,EAAwD;AACtD;AACD;;AACD,YAAKlB,QAAL,CAAc;AAAEjB,QAAAA,OAAO,EAAC;AAAV,OAAd;;AACA,UAAMoC,QAAQ,GAAG,MAAKvB,KAAL,CAAWN,QAAX,CAAoB4B,MAArC;AACA,UAAIE,KAAK,GAAGD,QAAZ;;AACA,YAAKvB,KAAL,CAAWN,QAAX,CAAoBqB,GAApB,CAAwB,UAACU,IAAD,EAAMC,GAAN,EAAY;AAClC,cAAKC,KAAL,CAAWC,YAAX,CAAwBC,MAAxB,CAA+B;AAC7BC,UAAAA,QAAQ,EAAEhD,eADmB;AAE7BiD,UAAAA,SAAS,EAAC;AAACC,YAAAA,KAAK,EAAC,MAAKC,aAAL,CAAmBR,IAAI,CAACS,IAAxB;AAAP;AAFmB,SAA/B,EAICC,IAJD,CAIM,UAAAC,QAAQ,EAAE;AACd7B,UAAAA,OAAO,CAACC,GAAR,CAAY4B,QAAZ;AACAZ,UAAAA,KAAK,IAAI,CAAT;;AACA,cAAGA,KAAK,KAAK,CAAb,EAAe;AACb,kBAAKa,UAAL;;AACA,kBAAKjC,QAAL,CAAc;AAAEjB,cAAAA,OAAO,EAAC,KAAV;AAAiBmD,cAAAA,SAAS,EAAC,IAA3B;AAAiCC,cAAAA,YAAY,YAAKhB,QAAL;AAA7C,aAAd;AACD;AACF,SAXD;AAYD,OAbD;AAcD,K;;oEAEe,UAACiB,IAAD,EAAQ;AACtB,UAAMpD,WAAW,GAAG,IAAIqD,MAAJ,CAAW,MAAKzC,KAAL,CAAWZ,WAAtB,EAAmC,MAAKsD,YAAL,EAAnC,CAApB;AACA,UAAIC,MAAM,GAAG;AAACC,QAAAA,EAAE,EAACJ,IAAI,CAACI;AAAT,OAAb;AAFsB,UAGdhD,SAHc,GAGA,MAAKI,KAHL,CAGdJ,SAHc;;AAItB,YAAKI,KAAL,CAAWR,MAAX,CAAkBuB,GAAlB,CAAsB,UAAAZ,GAAG,EAAE;AACzB,YAAGA,GAAG,KAAG,MAAT,EAAgB;AACd,cAAIP,SAAS,KAAK,QAAlB,EAA2B;AACzB+C,YAAAA,MAAM,CAACxC,GAAD,CAAN,IAAgB,MAAKH,KAAL,CAAWX,aAA3B,4BAA6CmD,IAAI,CAACrC,GAAD,CAAjD;AACD,WAFD,MAEM,IAAIP,SAAS,KAAK,QAAlB,EAA2B;AAC/B+C,YAAAA,MAAM,CAACxC,GAAD,CAAN,gCAAkBqC,IAAI,CAACrC,GAAD,CAAtB,IAA6B,MAAKH,KAAL,CAAWX,aAAxC;AACD,WAFK,MAED;AACHsD,YAAAA,MAAM,CAACxC,GAAD,CAAN,GAAcqC,IAAI,CAACrC,GAAD,CAAJ,CAAUY,GAAV,CAAc,UAAA8B,GAAG;AAAA,qBAAEA,GAAG,CAACC,OAAJ,CAAY1D,WAAZ,EAAyB,MAAKY,KAAL,CAAWX,aAApC,CAAF;AAAA,aAAjB,CAAd;AACD;AACF,SARD,MAQM,IAAGc,GAAG,KAAG,aAAT,EAAuB;AAC3B,cAAIP,SAAS,KAAK,QAAlB,EAA2B;AACzB+C,YAAAA,MAAM,CAACxC,GAAD,CAAN,GAAc,aAAM,MAAKH,KAAL,CAAWX,aAAjB,eAA0CmD,IAAI,CAACrC,GAAD,CAA9C,GAAsD,MAApE;AACD,WAFD,MAEM,IAAIP,SAAS,KAAK,QAAlB,EAA2B;AAC/B+C,YAAAA,MAAM,CAACxC,GAAD,CAAN,GAAc,QAAQqC,IAAI,CAACrC,GAAD,CAAZ,oBAA8B,MAAKH,KAAL,CAAWX,aAAzC,SAAd;AACD,WAFK,MAED;AACHsD,YAAAA,MAAM,CAAC,iBAAD,CAAN,GAA4B,QAAQH,IAAI,CAACrC,GAAD,CAAJ,CAAU2C,OAAV,CAAkB1D,WAAlB,EAA+B,MAAKY,KAAL,CAAWX,aAA1C,CAAR,GAAmE,MAA/F;AACD;AACF,SARK,MAQD;AACH,cAAIO,SAAS,KAAK,QAAlB,EAA2B;AACzB+C,YAAAA,MAAM,CAACxC,GAAD,CAAN,GAAc,MAAKH,KAAL,CAAWX,aAAX,GAA2BmD,IAAI,CAACrC,GAAD,CAA7C;AACD,WAFD,MAEM,IAAIP,SAAS,KAAK,QAAlB,EAA2B;AAC/B+C,YAAAA,MAAM,CAACxC,GAAD,CAAN,GAAcqC,IAAI,CAACrC,GAAD,CAAJ,GAAY,MAAKH,KAAL,CAAWX,aAArC;AACD,WAFK,MAED;AACHsD,YAAAA,MAAM,CAACxC,GAAD,CAAN,GAAcqC,IAAI,CAACrC,GAAD,CAAJ,CAAU2C,OAAV,CAAkB1D,WAAlB,EAA+B,MAAKY,KAAL,CAAWX,aAA1C,CAAd;AACD;AACF;AACF,OA1BD;;AA2BAkB,MAAAA,OAAO,CAACC,GAAR,CAAYmC,MAAZ;AACA,aAAOA,MAAP;AACD,K;;sEAEiB,UAACI,IAAD,EAAU;AAC1B,UAAI,CAACA,IAAL,EAAU;AACR,eAAO,IAAP;AACD;;AACD,UAAMD,OAAO,GAAG,IAAIL,MAAJ,CAAW,MAAKzC,KAAL,CAAWZ,WAAtB,EAAmC,MAAKsD,YAAL,EAAnC,CAAhB;AACA,aACE;AACE,QAAA,uBAAuB,EAAE;AACvBM,UAAAA,MAAM,EAAGD,IAAI,CAACD,OAAL,CAAaA,OAAb,EAAsB,UAAU9B,CAAV,EAAa;AAC1C,qEAAgDA,CAAhD;AACD,WAFQ;AADc;AAD3B,QADF;AAQD,K;;yEAEoB,UAACwB,IAAD,EAAS;AAC5B,UAAI,CAACA,IAAD,IAASA,IAAI,CAAClB,MAAL,GAAc,CAA3B,EAA6B;AAC3B,eAAO,CAAC,EAAD,CAAP;AACD;;AACD,aAAOkB,IAAI,CAACzB,GAAL,CAAS,UAAAU,IAAI,EAAE;AACpB,YAAMS,IAAI,GAAGT,IAAI,CAACS,IAAlB;AACA,eAAO,MAAKe,SAAL,GAAiBlC,GAAjB,CAAqB,UAAAZ,GAAG,EAAE;AAC/B,cAAGA,GAAG,KAAG,MAAT,EAAgB;AACd,gBAAI,MAAKH,KAAL,CAAWR,MAAX,CAAkBU,SAAlB,CAA4B,UAAAL,KAAK;AAAA,qBAAEM,GAAG,KAAGN,KAAR;AAAA,aAAjC,KAAiD,CAAC,CAAtD,EAAwD;AACtD,qBAAOqC,IAAI,CAAC/B,GAAD,CAAJ,CAAUe,IAAV,CAAe,IAAf,CAAP;AACD;;AACD,mBAAO,MAAKgC,eAAL,CAAqBhB,IAAI,CAAC/B,GAAD,CAAJ,CAAUe,IAAV,CAAe,IAAf,CAArB,CAAP;AACD;;AACD,cAAI,MAAKlB,KAAL,CAAWR,MAAX,CAAkBU,SAAlB,CAA4B,UAAAL,KAAK;AAAA,mBAAEM,GAAG,KAAGN,KAAR;AAAA,WAAjC,KAAiD,CAAC,CAAtD,EAAwD;AACtD,mBAAOqC,IAAI,CAAC/B,GAAD,CAAX;AACD;;AACD,iBAAO,MAAK+C,eAAL,CAAqBhB,IAAI,CAAC/B,GAAD,CAAzB,CAAP;AACD,SAXM,CAAP;AAYD,OAdM,CAAP;AAeD,K;;;;;;;wCApMkB;AACjB,WAAKkC,UAAL;AACD;;;mCACa;AAAC,aAAO,KAAKrC,KAAL,CAAWV,SAAX,GAAuB,GAAvB,GAA6B,IAApC;AAAyC;;;;;;;;;AAGtDiB,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,mBAAKJ,QAAL,CAAc;AAAClB,gBAAAA,QAAQ,EAAC;AAAV,eAAd;AACIiE,cAAAA,K,GAAQ,I;AACRC,cAAAA,M,GAAS,I;;;mBACND,K;;;;;;+CACkB,KAAKxB,KAAL,CAAWC,YAAX,CAAwByB,KAAxB,CAA8B;AAACA,gBAAAA,KAAK,EAAEtE,oBAAoB;AAA5B,eAA9B,C;;;AAAjBqD,cAAAA,Q;AACNe,cAAAA,KAAK,GAAGf,QAAQ,CAACI,IAAT,CAAc9C,QAAd,CAAuB4D,QAAvB,CAAgCC,WAAxC;AACAH,cAAAA,MAAM,GAAGhB,QAAQ,CAACI,IAAT,CAAc9C,QAAd,CAAuB8D,KAAvB,CAA6BpB,QAAQ,CAACI,IAAT,CAAc9C,QAAd,CAAuB8D,KAAvB,CAA6BlC,MAA7B,GAAoC,CAAjE,EAAoE8B,MAA7E;AACA,mBAAKhD,QAAL,CAAc;AAACT,gBAAAA,WAAW,+BAAK,KAAKK,KAAL,CAAWL,WAAhB,IAA6ByC,QAAQ,CAACI,IAAT,CAAc9C,QAAd,CAAuB8D,KAApD;AAAZ,eAAd;;;;;;;;;;;;;kCAIS;AAAA;;AACXjD,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,UAAG,KAAKR,KAAL,CAAWJ,SAAX,KAAuB,QAAvB,IAAmC,KAAKI,KAAL,CAAWJ,SAAX,KAAwB,QAA9D,EAAuE;AACrEW,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWL,WAAvB;AACA,aAAKS,QAAL,CAAc;AAACV,UAAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWL;AAAtB,SAAd;AACD,OAHD,MAGM,IAAG,KAAKK,KAAL,CAAWZ,WAAX,KAAyB,EAAzB,IAAgC,KAAKY,KAAL,CAAWR,MAAX,CAAkB8B,MAAlB,GAA2B,KAAKtB,KAAL,CAAWP,OAAX,CAAmB6B,MAA9C,KAAyD,CAAzF,IAAgG,KAAKtB,KAAL,CAAWL,WAAX,KAA2B,CAA9H,EAAkI;AACtI,YAAM8D,eAAe,GAAG,KAAKzD,KAAL,CAAWL,WAAX,CAAuBU,MAAvB,CAA8B,UAAAqD,IAAI,EAAE;AAC1D,cAAMC,IAAI,GAAG,IAAIlB,MAAJ,CAAW,MAAI,CAACzC,KAAL,CAAWZ,WAAtB,EAAmC,MAAI,CAACsD,YAAL,EAAnC,CAAb;AACA,iBAAO,MAAI,CAAC1C,KAAL,CAAWR,MAAX,CAAkBoE,IAAlB,CAAuB,UAAAzD,GAAG,EAAE;AACjC,gBAAGA,GAAG,KAAG,MAAT,EAAgB;AACd,qBAAQuD,IAAI,CAACxB,IAAL,CAAU/B,GAAV,EAAee,IAAf,CAAoB,IAApB,EAA0B2C,MAA1B,CAAiCF,IAAjC,IAAuC,CAAC,CAAhD;AACD;;AACD,mBAAQD,IAAI,CAACxB,IAAL,CAAU/B,GAAV,EAAe0D,MAAf,CAAsBF,IAAtB,IAA4B,CAAC,CAArC;AACD,WALM,CAAP;AAMD,SARuB,CAAxB;AASApD,QAAAA,OAAO,CAACC,GAAR,CAAYiD,eAAZ;AACA,aAAKrD,QAAL,CAAc;AAACV,UAAAA,QAAQ,EAAE+D;AAAX,SAAd;AACD,OAZK,MAYD;AACH,aAAKrD,QAAL,CAAc;AAACV,UAAAA,QAAQ,EAAC;AAAV,SAAd;AACD;AACF;;;gCAEU;AACT,cAAQ,OAAR,EAAgB,QAAhB,4BAA4B,KAAKM,KAAL,CAAWR,MAAX,CAAkBa,MAAlB,CAAyB,UAAAF,GAAG;AAAA,eAAGA,GAAG,KAAG,OAAN,IAAiBA,GAAG,KAAG,QAA1B;AAAA,OAA5B,CAA5B;AACD;;;oCACc;AACb,aAAO2D,KAAK,CAAC,KAAK9D,KAAL,CAAWR,MAAX,CAAkB8B,MAAnB,CAAL,CAAgCyC,IAAhC,CAAqC,MAArC,CAAP;AACD;;;oCAEelE,K,EAAMC,S,EAAU;AAC9B,UAAGA,SAAH,EAAa;AACX,eAAQ,KAAKE,KAAL,CAAWP,OAAX,CAAmBS,SAAnB,CAA6B,UAAAC,GAAG;AAAA,iBAAEA,GAAG,KAAGN,KAAR;AAAA,SAAhC,IAA+C,CAAC,CAAxD;AACD;;AACD,aAAQ,KAAKG,KAAL,CAAWR,MAAX,CAAkBU,SAAlB,CAA4B,UAAAC,GAAG;AAAA,eAAEA,GAAG,KAAGN,KAAR;AAAA,OAA/B,IAA8C,CAAC,CAAvD;AACD;;;6BAkJQ;AAAA;;AACP,UAAMmE,GAAG,GAAG,KAAKC,OAAjB;AACA,UAAMC,WAAW,GAAG;AAClB,gBAAQ,cADU;AAElB,kBAAU,aAFQ;AAGlB,kBAAU;AAHQ,OAApB;AAKF,aACE,MAAC,IAAD;AAAM,QAAA,SAAS;AAAf,SACA,MAAC,KAAD,QACE;AAAK,QAAA,SAAS,EAAC;AAAf,SAEE,kBAAI,+BAAJ,CAFF,EAGE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,UAAD,CACE;AADF;AAEE,QAAA,OAAO,EAAE,CACP;AAACC,UAAAA,KAAK,EAAE,gBAAR;AAA0B9C,UAAAA,KAAK,EAAE;AAAjC,SADO,EAEP;AAAC8C,UAAAA,KAAK,EAAE,iBAAR;AAA2B9C,UAAAA,KAAK,EAAE;AAAlC,SAFO,EAGP;AAAC8C,UAAAA,KAAK,EAAE,eAAR;AAAyB9C,UAAAA,KAAK,EAAE;AAAhC,SAHO,CAFX;AAOE,QAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWJ,SAPvB;AAQE,QAAA,QAAQ,EAAE,KAAKwE,YAAL,CAAkB,WAAlB;AARZ,QADF,CAHF,EAgBG,KAAKpE,KAAL,CAAWJ,SAAX,KAAyB,MAAzB,IAAmC;AAAK,QAAA,SAAS,EAAC;AAAf,SAClC;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,SAAD;AAAW,QAAA,WAAW,EAAC,MAAvB;AAA8B,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWZ,WAAhD;AAA6D,QAAA,QAAQ,EAAE,KAAKgF,YAAL,CAAkB,aAAlB;AAAvE,QADF,CADkC,CAhBtC,EAsBE,kBAAI,+BAAJ,CAtBF,EAuBE;AAAK,QAAA,SAAS,EAAC;AAAf,SACI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAC,OAAhB;AAAwB,QAAA,OAAO,EAAE,KAAKC,eAAL,CAAqB,OAArB,CAAjC;AAAgE,QAAA,QAAQ,EAAE,KAAKC,iBAAL,CAAuB,OAAvB;AAA1E,QADJ,EAEI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAC,QAAhB;AAAyB,QAAA,OAAO,EAAE,KAAKD,eAAL,CAAqB,QAArB,CAAlC;AAAkE,QAAA,QAAQ,EAAE,KAAKC,iBAAL,CAAuB,QAAvB;AAA5E,QAFJ,EAGI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAC,eAAhB;AAAgC,QAAA,OAAO,EAAE,KAAKD,eAAL,CAAqB,aAArB,CAAzC;AAA8E,QAAA,QAAQ,EAAE,KAAKC,iBAAL,CAAuB,aAAvB;AAAxF,QAHJ,EAII,MAAC,QAAD;AAAU,QAAA,KAAK,EAAC,QAAhB;AAAyB,QAAA,OAAO,EAAE,KAAKD,eAAL,CAAqB,QAArB,CAAlC;AAAkE,QAAA,QAAQ,EAAE,KAAKC,iBAAL,CAAuB,QAAvB;AAA5E,QAJJ,EAKI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAC,MAAhB;AAAuB,QAAA,OAAO,EAAE,KAAKD,eAAL,CAAqB,MAArB,CAAhC;AAA8D,QAAA,QAAQ,EAAE,KAAKC,iBAAL,CAAuB,MAAvB;AAAxE,QALJ,EAMI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAC,aAAhB;AAA8B,QAAA,OAAO,EAAE,KAAKD,eAAL,CAAqB,aAArB,CAAvC;AAA4E,QAAA,QAAQ,EAAE,KAAKC,iBAAL,CAAuB,aAAvB;AAAtF,QANJ,CAvBF,EAgCE,kBAAI,kCAAJ,mBAhCF,EAiCE;AAAK,QAAA,SAAS,EAAC;AAAf,SACI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAC,OAAhB;AAAwB,QAAA,QAAQ,MAAhC;AAAiC,QAAA,OAAO,EAAE,KAAKD,eAAL,CAAqB,OAArB,EAA6B,IAA7B,CAA1C;AAA8E,QAAA,QAAQ,EAAE,KAAKC,iBAAL,CAAuB,OAAvB,EAA+B,IAA/B;AAAxF,QADJ,EAEI,MAAC,QAAD;AAAU,QAAA,KAAK,EAAC,KAAhB;AAAsB,QAAA,QAAQ,MAA9B;AAA+B,QAAA,OAAO,EAAE,KAAKD,eAAL,CAAqB,KAArB,EAA2B,IAA3B,CAAxC;AAA0E,QAAA,QAAQ,EAAE,KAAKC,iBAAL,CAAuB,KAAvB,EAA6B,IAA7B;AAApF,QAFJ,CAjCF,EAsCE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,SAAD;AAAW,QAAA,WAAW,EAAEJ,WAAW,CAAC,KAAKlE,KAAL,CAAWJ,SAAZ,CAAnC;AAA4D,QAAA,KAAK,EAAE,KAAKI,KAAL,CAAWX,aAA9E;AAA6F,QAAA,QAAQ,EAAE,KAAK+E,YAAL,CAAkB,eAAlB;AAAvG,QADF,CADF,EAIE,MAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,OAAO,EAAE,KAAKpE,KAAL,CAAWb,OAApD;AAA6D,QAAA,OAAO,EAAE,KAAKoF,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB;AAAtE,oBAJF,CAtCF,EA+CE;AAAK,QAAA,SAAS,EAAC;AAAf,SACE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAC,YAAhB;AAA6B,QAAA,OAAO,EAAE,KAAKxE,KAAL,CAAWV,SAAjD;AAA4D,QAAA,QAAQ,EAAE,KAAK8E,YAAL,CAAkB,WAAlB;AAAtE,QADF,EAEE;AAAI,QAAA,SAAS,EAAC,WAAd;AAA0B,QAAA,OAAO,EAAE,KAAKK,cAAL,CAAoBD,IAApB,CAAyB,IAAzB;AAAnC,SACE,MAAC,IAAD;AAAM,QAAA,MAAM,EAAE,KAAKxE,KAAL,CAAWT,KAAX,GAAmBb,eAAnB,GAAqCC;AAAnD,QADF,EAEE,iBAAI,KAAKqB,KAAL,CAAWT,KAAX,GAAmB,OAAnB,GAA6B,kBAAjC,CAFF,CAFF,CA/CF,CADF,EAyDE,MAAC,IAAD,QACE,MAAC,SAAD;AACE,QAAA,kBAAkB,EAAE,KAAKmF,aAAL,EADtB;AAEE,QAAA,QAAQ,EAAE,KAAKzB,SAAL,EAFZ;AAGE,QAAA,IAAI,EAAE,KAAK0B,kBAAL,CAAwB,KAAK3E,KAAL,CAAWN,QAAnC;AAHR,QADF,CAzDF,EAgEG,KAAKM,KAAL,CAAWsC,SAAX,GAAwB,MAAC,KAAD;AAAO,QAAA,OAAO,EAAE,KAAKtC,KAAL,CAAWuC,YAA3B;AAAyC,QAAA,SAAS,EAAE;AAAA,iBAAM,MAAI,CAACnC,QAAL,CAAc;AAACkC,YAAAA,SAAS,EAAC;AAAX,WAAd,CAAN;AAAA;AAApD,QAAxB,GAA0H,IAhE7H,CADA,CADF;AAsED;;;;EAlSiBsC,KAAK,CAACC,S;;gBAApB5F,K,iBACmBL,O;;AAoSzB,eAAeK,KAAf","sourcesContent":["import store from 'store-js';\nimport { \n  Card,\n  Page,\n  TextField,\n  DataTable,\n  Button,\n  Checkbox,\n  Icon,\n  Frame,\n  Toast,\n  ChoiceList\n} from '@shopify/polaris';\nimport {\n  StarFilledMinor,\n  StarOutlineMinor\n} from '@shopify/polaris-icons';\nimport { Context } from '@shopify/app-bridge-react';\nimport _ from 'lodash'\nimport './index.css'\nimport{ UPDATE_PRODUCTS, constructListproduct, constructSearchProduct }from \"../components/graphql\"\n\nclass Index extends React.Component {\n    static contextType = Context;\n    state = {\n      fetching:true,\n      loading:false,\n        searchquery: \"\",\n        replacestring:\"\",\n        matchcase:false,\n        saved: false,\n        scopes:[],\n        scopesV:[],\n        products:[],\n        allproducts:[],\n        operation: 'find'\n    }\n    componentDidMount(){\n      this.fetchQuery()\n    }\n    getRegexCase(){return this.state.matchcase ? \"g\" : \"gi\"}\n\n    async fetchQuery(){\n      console.log(\"fetch\")\n      this.setState({fetching:true})\n      let fetch = true\n      let cursor = null\n      while (fetch) {\n        const response = await this.props.apolloClient.query({query: constructListproduct()})\n        fetch = response.data.products.pageInfo.hasNextPage\n        cursor = response.data.products.edges[response.data.products.edges.length-1].cursor\n        this.setState({allproducts:[...this.state.allproducts, response.data.products.edges]})\n      }\n    }\n\n    filterQuery(){\n      console.log(\"filter\")\n      if(this.state.operation===\"insert\" || this.state.operation ===\"append\"){\n        console.log(this.state.allproducts)\n        this.setState({products: this.state.allproducts})\n      }else if(this.state.searchquery!==\"\" && (this.state.scopes.length + this.state.scopesV.length !== 0) && (this.state.allproducts !== 0) ){\n        const currentproducts = this.state.allproducts.filter(prod=>{\n          const regx = new RegExp(this.state.searchquery, this.getRegexCase());\n          return this.state.scopes.some(sco=>{\n            if(sco===\"tags\"){\n              return (prod.node[sco].join(\"/n\").search(regx)>-1)\n            }\n            return (prod.node[sco].search(regx)>-1)\n          })\n        })\n        console.log(currentproducts)\n        this.setState({products: currentproducts})\n      }else{\n        this.setState({products:[]})\n      }\n    }\n\n    getHeader(){\n      return [\"title\",\"handle\",...this.state.scopes.filter(sco=>(sco!==\"title\" && sco!==\"handle\"))]\n    }\n    getHeaderType(){\n      return Array(this.state.scopes.length).fill('text')\n    }\n\n    isScopeSelected(scope,isVariant){\n      if(isVariant){\n        return (this.state.scopesV.findIndex(sco=>sco===scope)>-1)\n      }\n      return (this.state.scopes.findIndex(sco=>sco===scope)>-1)\n    }\n\n    handleScopeSelect=(scope,isVariant)=>()=>{\n      const scopetype = isVariant ? \"scopesV\" : \"scopes\"\n      const scopes = this.state[scopetype]\n      const selected = (this.state[scopetype].findIndex(sco=>sco===scope)>-1)\n      if (selected){\n        this.setState({[scopetype]: scopes.filter(sco=>sco!==scope)},()=>{\n          this.filterQuery()\n        })\n      }else{\n        this.setState({[scopetype]: [...scopes,scope]},()=>{\n          this.filterQuery()\n        })\n      }\n    }\n\n    toggleFavorite = () => {\n      console.log(\"toggle fav\")\n      const favorite = store.get('favorite')\n      const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase','scopes', 'operation'])\n      const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n      if(!this.state.saved){\n        if (!store.get('favorite')){\n          console.log(\"no current fav\")\n          console.log(\"hashedfav:\" + hashedfav)\n          store.set(\"favorite\",{[hashedfav]:searchform})\n        }else{\n          console.log(store.get('favorite'))\n          store.set(\"favorite\",{...favorite, [hashedfav]:searchform})\n        }\n        this.setState({ saved:true })\n      }else{\n        delete favorite[hashedfav]\n        store.set(\"favorite\",favorite)\n        this.setState({ saved:false })\n      }\n    }\n\n    handleChange = (field) =>  (value) => {\n      if (field===\"operation\"){\n        value = value[0]\n      }\n      this.setState({ [field]: value }, ()=>{\n        const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase','scopes'])\n        const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n        const saved = store.get('favorite') && store.get('favorite')[hashedfav]\n        this.setState({ saved })\n        this.filterQuery()\n      })\n    };\n\n    handleReplace = () => {\n      if(!this.state.products || this.state.products.length<1){\n        return \n      }\n      this.setState({ loading:true })\n      const promises = this.state.products.length\n      let count = promises\n      this.state.products.map((item,idx)=>{\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables:{input:this.transformData(item.node)}\n        })\n        .then(response=>{\n          console.log(response)\n          count -= 1\n          if(count === 0){\n            this.fetchQuery()\n            this.setState({ loading:false, showtoast:true, toastcontent: `${promises} products changed.` })\n          }\n        })\n      })\n    }\n\n    transformData = (data)=>{\n      const searchquery = new RegExp(this.state.searchquery, this.getRegexCase());\n      let result = {id:data.id}\n      const { operation } = this.state\n      this.state.scopes.map(sco=>{\n        if(sco===\"tags\"){\n          if (operation === \"insert\"){\n            result[sco] = [ this.state.replacestring, ...data[sco]]\n          }else if (operation === \"append\"){\n            result[sco] = [...data[sco], this.state.replacestring]\n          }else{\n            result[sco] = data[sco].map(tag=>tag.replace(searchquery, this.state.replacestring))\n          }\n        }else if(sco===\"description\"){\n          if (operation === \"insert\"){\n            result[sco] = `<p>${this.state.replacestring}</p><p>` + data[sco] + '</p>'\n          }else if (operation === \"append\"){\n            result[sco] = '<p>' + data[sco] + `</p><p>${this.state.replacestring}</p>`\n          }else{\n            result[\"descriptionHtml\"] = '<p>' + data[sco].replace(searchquery, this.state.replacestring) + '</p>'\n          }\n        }else{\n          if (operation === \"insert\"){\n            result[sco] = this.state.replacestring + data[sco]\n          }else if (operation === \"append\"){\n            result[sco] = data[sco] + this.state.replacestring\n          }else{\n            result[sco] = data[sco].replace(searchquery, this.state.replacestring)\n          }\n        }\n      })\n      console.log(result)\n      return result\n    }\n\n    InjectHighlight = (text) => {\n      if (!text){\n        return \"NA\"\n      }\n      const replace = new RegExp(this.state.searchquery, this.getRegexCase());\n      return (\n        <span\n          dangerouslySetInnerHTML={{\n            __html : text.replace(replace, function (x) {\n              return `<span style=\"background-color:yellow\">${x}</span>`;\n            })\n          }} />\n      )\n    }\n\n    ConvertDatatoTable = (data) =>{\n      if (!data || data.length < 1){\n        return [[]]\n      }\n      return data.map(item=>{\n        const node = item.node\n        return this.getHeader().map(sco=>{\n          if(sco===\"tags\"){\n            if (this.state.scopes.findIndex(scope=>sco===scope)==-1){\n              return node[sco].join(\"/n\")\n            }\n            return this.InjectHighlight(node[sco].join(\"/n\"))\n          }\n          if (this.state.scopes.findIndex(scope=>sco===scope)==-1){\n            return node[sco]\n          }\n          return this.InjectHighlight(node[sco])\n        })\n      })\n    }\n    \n    render() {\n      const app = this.context;\n      const placeholder = {\n        \"find\": \"Replace with\",\n        \"insert\": \"Insert text\",\n        \"append\": \"Append text\"\n      }\n    return (\n      <Page fullWidth>\n      <Frame>\n        <div className=\"form-container\">\n\n          <h3><b>Operation: </b></h3>\n          <div className=\"form-row\">\n            <ChoiceList\n              // title=\"Operation: \"\n              choices={[\n                {label: 'Find and Place', value: 'find'},\n                {label: 'Insert in front', value: 'insert'},\n                {label: 'Append to end', value: 'append'},\n              ]}\n              selected={this.state.operation}\n              onChange={this.handleChange('operation')}\n            />\n          </div>\n\n          {this.state.operation === 'find' && <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Find\" value={this.state.searchquery} onChange={this.handleChange('searchquery')} />\n            </div>\n          </div>}\n          \n          <h3><b>In fields: </b></h3>\n          <div className=\"form-row\">\n              <Checkbox label=\"Title\" checked={this.isScopeSelected('title')} onChange={this.handleScopeSelect('title')} />\n              <Checkbox label=\"Handle\" checked={this.isScopeSelected('handle')} onChange={this.handleScopeSelect('handle')} />\n              <Checkbox label=\"Product types\" checked={this.isScopeSelected('productType')} onChange={this.handleScopeSelect('productType')} />\n              <Checkbox label=\"Vendor\" checked={this.isScopeSelected('vendor')} onChange={this.handleScopeSelect('vendor')} />\n              <Checkbox label=\"Tags\" checked={this.isScopeSelected('tags')} onChange={this.handleScopeSelect('tags')} />\n              <Checkbox label=\"Description\" checked={this.isScopeSelected('description')} onChange={this.handleScopeSelect('description')} />\n          </div>\n\n          <h3><b>Variant fields</b>(not in use): </h3>\n          <div className=\"form-row\">\n              <Checkbox label=\"Price\" disabled checked={this.isScopeSelected('price',true)} onChange={this.handleScopeSelect('price',true)} />\n              <Checkbox label=\"SKU\" disabled checked={this.isScopeSelected('sku',true)} onChange={this.handleScopeSelect('sku',true)} />\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder={placeholder[this.state.operation]}  value={this.state.replacestring} onChange={this.handleChange('replacestring')} />\n            </div>\n            <Button className=\"form-button\" loading={this.state.loading} onClick={this.handleReplace.bind(this)}>Replace </Button>\n            {/* <Button className=\"form-button\" loading={this.state.loading} onClick={this.handleReplace.bind(this)}>Replace all</Button> */}\n          </div>\n\n\n          <div className=\"form-row\">\n            <Checkbox label=\"Match case\" checked={this.state.matchcase} onChange={this.handleChange('matchcase')} />\n            <a  className=\"form-item\" onClick={this.toggleFavorite.bind(this)} >\n              <Icon source={this.state.saved ? StarFilledMinor : StarOutlineMinor} />\n              <p>{this.state.saved ? \"Saved\" : \"Save to Favorite\"}</p>\n            </a>\n          </div>\n\n        </div>\n        <Card>\n          <DataTable\n            columnContentTypes={this.getHeaderType()}\n            headings={this.getHeader()}\n            rows={this.ConvertDatatoTable(this.state.products)}\n          />\n        </Card>\n        {this.state.showtoast ? (<Toast content={this.state.toastcontent} onDismiss={() => this.setState({showtoast:false})} />) : null}\n      </Frame>\n      </Page>\n    );\n  }\n}\n\nexport default Index;"]},"metadata":{},"sourceType":"module"}