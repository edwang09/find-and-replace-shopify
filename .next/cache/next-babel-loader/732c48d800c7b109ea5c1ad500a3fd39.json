{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, ResourceItem, TextField, Thumbnail, DataTable, Button, Checkbox, Icon } from '@shopify/polaris';\nimport { StarFilledMinor, StarOutlineMinor } from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport './ResourceList.css';\nimport { UPDATE_PRODUCTS, SEARCH_PRODUCTS } from \"./graphql.js\";\n\nvar ResourceListWithProducts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  function ResourceListWithProducts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResourceListWithProducts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      favorites: {},\n      bundles: {},\n      selectedItems: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"transformData\", function (data, searchquery, replacestring, scopes, matchcase) {\n      var regsearchquery = new RegExp(searchquery, _this.getRegexCase(matchcase));\n      var result = {\n        id: data.id\n      };\n      scopes.map(function (sco) {\n        if (sco === \"tags\") {\n          result[sco] = data[sco].map(function (tag) {\n            return tag.replace(regsearchquery, replacestring);\n          });\n        } else if (sco === \"description\") {\n          result[\"descriptionHtml\"] = data[sco].replace(regsearchquery, replacestring);\n        } else {\n          result[sco] = data[sco].replace(regsearchquery, replacestring);\n        }\n      });\n      console.log(result);\n      return result;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleReplace\", function (products, searchquery, replacestring, scopes, matchcase) {\n      if (!products || products.length < 1) {\n        return;\n      }\n\n      products.edges.map(function (item) {\n        _this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables: {\n            input: _this.transformData(item.node, searchquery, replacestring, scopes, matchcase)\n          }\n        }).then(function (response) {\n          console.log(response);\n        });\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"getRegexCase\",\n    value: function getRegexCase(matchcase) {\n      return matchcase ? \"g\" : \"gi\";\n    }\n  }, {\n    key: \"setSelectedItems\",\n    value: function setSelectedItems(selectedItems) {\n      console.log(selectedItems);\n      return this.setState({\n        selectedItems: selectedItems\n      });\n    }\n  }, {\n    key: \"ObjtoArray\",\n    value: function ObjtoArray(obj) {\n      return _Object$keys(obj).map(function (key) {\n        return _objectSpread({}, obj[key], {\n          key: key\n        });\n      });\n    }\n  }, {\n    key: \"ArrayobjtoArray\",\n    value: function ArrayobjtoArray(obj) {\n      return _Object$keys(obj).map(function (key) {\n        return {\n          content: obj[key],\n          key: key\n        };\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var favorites = store.get(\"favorite\") ? store.get(\"favorite\") : {};\n      var bundles = store.get(\"bundle\") ? store.get(\"bundle\") : {}; // if(Object.keys.length(bundles)===0){\n      //     store.set(\"bundle\",{})\n      // }\n\n      console.log(favorites);\n      console.log(bundles);\n      this.setState({\n        favorites: favorites,\n        bundles: bundles\n      });\n    }\n  }, {\n    key: \"runFavorite\",\n    value: function runFavorite(key) {\n      var _this2 = this;\n\n      var _this$state$favorites = this.state.favorites[key],\n          searchquery = _this$state$favorites.searchquery,\n          replacestring = _this$state$favorites.replacestring,\n          scopes = _this$state$favorites.scopes,\n          matchcase = _this$state$favorites.matchcase;\n      this.props.apolloClient.query({\n        query: SEARCH_PRODUCTS,\n        variables: {\n          searchquery: searchquery\n        }\n      }).then(function (response) {\n        console.log(response);\n\n        if (response && response.data && response.data.products) {\n          _this2.handleReplace(response.data.products, searchquery, replacestring, scopes, matchcase);\n        } else {\n          console.log(\"no item found\");\n        }\n      });\n    }\n  }, {\n    key: \"removeFavorite\",\n    value: function removeFavorite(key) {\n      var favorites = this.state.favorites;\n      delete favorites[key];\n      store.set(\"favorite\", favorites);\n      this.setState({\n        favorites: favorites\n      });\n    }\n  }, {\n    key: \"createBundle\",\n    value: function createBundle() {\n      var _this$state = this.state,\n          favorites = _this$state.favorites,\n          bundles = _this$state.bundles;\n      var newbundle = this.state.selectedItems.reduce(function (bundle, key) {\n        console.log(bundle);\n        var fav = favorites[key];\n        console.log(fav);\n        delete favorites[key];\n        return [].concat(_toConsumableArray(bundle), [fav]);\n      }, []);\n      var newbundlekey = \"bundle:\" + this.state.selectedItems.join(';');\n      console.log(newbundle);\n      console.log(newbundlekey);\n      console.log(favorites);\n      store.set(\"favorite\", favorites);\n      var newbundles;\n\n      if (!store.get('bundle')) {\n        console.log(\"no current bundle\");\n        newbundles = _defineProperty({}, newbundlekey, newbundle);\n      } else {\n        newbundles = _objectSpread({}, bundles, _defineProperty({}, newbundlekey, newbundle));\n      }\n\n      store.set(\"bundle\", newbundles);\n      this.setState({\n        selectedItems: [],\n        favorites: favorites,\n        bundles: newbundles\n      });\n    }\n  }, {\n    key: \"unbundle\",\n    value: function unbundle(key) {\n      var _this$state2 = this.state,\n          favorites = _this$state2.favorites,\n          bundles = _this$state2.bundles;\n      var bundle = bundles[key];\n      bundle.map(function (fav) {\n        var hashedfav = _Object$keys(fav).sort().map(function (x) {\n          return fav[x].toString();\n        }).join(\";\");\n\n        favorites[hashedfav] = fav;\n      });\n      delete bundles[key];\n      console.log(bundles);\n      console.log(favorites);\n      store.set(\"favorite\", favorites);\n      store.set(\"bundle\", bundles);\n      this.setState({\n        favorites: favorites,\n        bundles: bundles\n      });\n    }\n  }, {\n    key: \"runBundle\",\n    value: function runBundle(key) {\n      var _this3 = this;\n\n      var bundle = this.state.bundles[key];\n      bundle.map(function (fav) {\n        var searchquery = fav.searchquery,\n            replacestring = fav.replacestring,\n            scopes = fav.scopes,\n            matchcase = fav.matchcase;\n\n        _this3.props.apolloClient.query({\n          query: SEARCH_PRODUCTS,\n          variables: {\n            searchquery: searchquery\n          }\n        }).then(function (response) {\n          console.log(response);\n\n          if (response && response.data && response.data.products) {\n            _this3.handleReplace(response.data.products, searchquery, replacestring, scopes, matchcase);\n          } else {\n            console.log(\"no item found\");\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var app = this.context;\n\n      var redirectToProduct = function redirectToProduct() {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.APP, '/edit-products');\n      };\n\n      return __jsx(\"div\", null, __jsx(Card, null, __jsx(ResourceList, {\n        resourceName: {\n          singular: 'favorite',\n          plural: 'favorites'\n        },\n        items: this.ObjtoArray(this.state.favorites),\n        selectedItems: this.state.selectedItems,\n        onSelectionChange: this.setSelectedItems.bind(this),\n        selectable: true,\n        promotedBulkActions: [{\n          content: 'Bundle',\n          onAction: function onAction() {\n            return _this4.createBundle();\n          }\n        }],\n        renderItem: function renderItem(item) {\n          var key = item.key,\n              searchquery = item.searchquery,\n              replacestring = item.replacestring,\n              matchcase = item.matchcase,\n              scopes = item.scopes;\n          var shortcutActions = [{\n            content: 'Run',\n            onAction: function onAction() {\n              return _this4.runFavorite(key);\n            }\n          }, {\n            content: 'Remove',\n            onAction: function onAction() {\n              return _this4.removeFavorite(key);\n            }\n          }];\n          return __jsx(ResourceItem, {\n            id: key,\n            shortcutActions: shortcutActions,\n            persistActions: true,\n            name: searchquery\n          }, __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, searchquery, \" | \"), __jsx(TextStyle, {\n            variation: \"subdued\"\n          }, \"in (\", scopes.toString(), \")\")), __jsx(\"div\", null, \"Replace with :\\\"\", replacestring, \"\\\" \", matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"));\n        }\n      })), __jsx(Card, null, __jsx(ResourceList, {\n        resourceName: {\n          singular: 'bundle',\n          plural: 'bundles'\n        },\n        items: this.ArrayobjtoArray(this.state.bundles),\n        renderItem: function renderItem(item) {\n          var key = item.key,\n              content = item.content;\n          console.log(item);\n          var shortcutActions = [{\n            content: 'Run',\n            onAction: function onAction() {\n              return _this4.runBundle(key);\n            }\n          }, {\n            content: 'Unbundle',\n            onAction: function onAction() {\n              return _this4.unbundle(key);\n            }\n          }];\n          return __jsx(ResourceItem, {\n            id: key,\n            shortcutActions: shortcutActions\n          }, __jsx(\"h3\", null, __jsx(TextStyle, {\n            variation: \"strong\"\n          }, \"Bundle\")), content.map(function (item) {\n            return __jsx(\"div\", null, \"Find: \\\"\", item.searchquery, \"\\\" in (\", item.scopes.toString(), \"); Replace with :\\\"\", item.replacestring, \"\\\" \", item.matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\");\n          }));\n        }\n      })));\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":null,"metadata":{},"sourceType":"module"}