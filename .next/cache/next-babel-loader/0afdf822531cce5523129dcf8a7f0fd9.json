{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, ResourceItem, TextField, Thumbnail, DataTable, Button, Checkbox, Icon, Toast, Frame } from '@shopify/polaris';\nimport { StarFilledMinor, StarOutlineMinor } from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport './ResourceList.css';\nimport { UPDATE_PRODUCTS, SEARCH_PRODUCTS } from \"./graphql.js\";\n\nclass ResourceListWithProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      favorites: {},\n      bundles: {},\n      selectedItems: [],\n      loading: \"\",\n      toasts: []\n    });\n\n    _defineProperty(this, \"transformData\", (data, searchquery, replacestring, scopes, matchcase) => {\n      const regsearchquery = new RegExp(searchquery, this.getRegexCase(matchcase));\n      let result = {\n        id: data.id\n      };\n      scopes.map(sco => {\n        if (sco === \"tags\") {\n          result[sco] = data[sco].map(tag => tag.replace(regsearchquery, replacestring));\n        } else if (sco === \"description\") {\n          result[\"descriptionHtml\"] = data[sco].replace(regsearchquery, replacestring);\n        } else {\n          result[sco] = data[sco].replace(regsearchquery, replacestring);\n        }\n      });\n      console.log(result);\n      return result;\n    });\n\n    _defineProperty(this, \"handleReplace\", (products, searchquery, replacestring, scopes, matchcase) => {\n      return new _Promise((resolve, reject) => {\n        if (!products || products.edges.length < 1) {\n          reject(\"no product\");\n        }\n\n        const promises = products.edges.length;\n        let count = promises;\n        products.edges.map(item => {\n          this.props.apolloClient.mutate({\n            mutation: UPDATE_PRODUCTS,\n            variables: {\n              input: this.transformData(item.node, searchquery, replacestring, scopes, matchcase)\n            }\n          }).then(response => {\n            console.log(response);\n            count -= 1;\n\n            if (count === 0) {\n              resolve();\n            }\n          });\n        });\n      });\n    });\n  }\n\n  randomString(length) {\n    return Math.round(Math.pow(36, length + 1) - Math.random() * Math.pow(36, length)).toString(36).slice(1);\n  }\n\n  getRegexCase(matchcase) {\n    return matchcase ? \"g\" : \"gi\";\n  }\n\n  setSelectedItems(selectedItems) {\n    console.log(selectedItems);\n    return this.setState({\n      selectedItems\n    });\n  }\n\n  ObjtoArray(obj) {\n    return _Object$keys(obj).map(key => {\n      return _objectSpread({}, obj[key], {\n        key\n      });\n    });\n  }\n\n  ArrayobjtoArray(obj) {\n    return _Object$keys(obj).map(key => {\n      return {\n        content: obj[key],\n        key\n      };\n    });\n  }\n\n  componentDidMount() {\n    const favorites = store.get(\"favorite\") ? store.get(\"favorite\") : {};\n    const bundles = store.get(\"bundle\") ? store.get(\"bundle\") : {}; // if(Object.keys.length(bundles)===0){\n    //     store.set(\"bundle\",{})\n    // }\n\n    console.log(favorites);\n    console.log(bundles);\n    this.setState({\n      favorites,\n      bundles\n    });\n  }\n\n  runFavorite(key) {\n    const {\n      searchquery,\n      replacestring,\n      scopes,\n      matchcase\n    } = this.state.favorites[key];\n    this.setState({\n      loading: key\n    });\n    this.props.apolloClient.query({\n      query: SEARCH_PRODUCTS,\n      variables: {\n        searchquery\n      }\n    }).then(response => {\n      console.log(response);\n\n      if (response && response.data && response.data.products) {\n        this.handleReplace(response.data.products, searchquery, replacestring, scopes, matchcase).then(() => {\n          this.setState({\n            loading: null,\n            toasts: [...this.state.toasts, {\n              key: this.randomString(10),\n              content: `${promises} products changed.`\n            }]\n          });\n        });\n      } else {\n        this.setState({\n          loading: null,\n          toasts: [...this.state.toasts, {\n            key: this.randomString(10),\n            content: `no matching product found`\n          }]\n        });\n      }\n    });\n  }\n\n  removeFavorite(key) {\n    const {\n      favorites\n    } = this.state;\n    delete favorites[key];\n    store.set(\"favorite\", favorites);\n    this.setState({\n      favorites\n    });\n  }\n\n  createBundle() {\n    const {\n      favorites,\n      bundles\n    } = this.state;\n    const newbundle = this.state.selectedItems.reduce((bundle, key) => {\n      console.log(bundle);\n      const fav = favorites[key];\n      console.log(fav);\n      delete favorites[key];\n      return [...bundle, fav];\n    }, []);\n    const newbundlekey = \"bundle:\" + this.state.selectedItems.join(';');\n    console.log(newbundle);\n    console.log(newbundlekey);\n    console.log(favorites);\n    store.set(\"favorite\", favorites);\n    let newbundles;\n\n    if (!store.get('bundle')) {\n      console.log(\"no current bundle\");\n      newbundles = {\n        [newbundlekey]: newbundle\n      };\n    } else {\n      newbundles = _objectSpread({}, bundles, {\n        [newbundlekey]: newbundle\n      });\n    }\n\n    store.set(\"bundle\", newbundles);\n    this.setState({\n      selectedItems: [],\n      favorites,\n      bundles: newbundles\n    });\n  }\n\n  unbundle(key) {\n    const {\n      favorites,\n      bundles\n    } = this.state;\n    const bundle = bundles[key];\n    bundle.map(fav => {\n      const hashedfav = _Object$keys(fav).sort().map(x => fav[x].toString()).join(\";\");\n\n      favorites[hashedfav] = fav;\n    });\n    delete bundles[key];\n    console.log(bundles);\n    console.log(favorites);\n    store.set(\"favorite\", favorites);\n    store.set(\"bundle\", bundles);\n    this.setState({\n      favorites,\n      bundles\n    });\n  }\n\n  runBundle(key) {\n    const bundle = this.state.bundles[key];\n    this.setState({\n      loading: key\n    });\n    const bundles = bundle.length;\n    let count = bundles;\n    bundle.map(fav => {\n      const {\n        searchquery,\n        replacestring,\n        scopes,\n        matchcase\n      } = fav;\n      this.props.apolloClient.query({\n        query: SEARCH_PRODUCTS,\n        variables: {\n          searchquery\n        }\n      }).then(response => {\n        console.log(response);\n\n        if (response && response.data && response.data.products) {\n          this.handleReplace(response.data.products, searchquery, replacestring, scopes, matchcase).then(() => {\n            count -= count;\n            this.setState({\n              toasts: [...this.state.toasts, {\n                key: this.randomString(10),\n                content: `${promises} products changed.`\n              }]\n            }, () => {\n              if (count === 0) {\n                this.setState({\n                  loading: null,\n                  toasts: [...this.state.toasts, {\n                    key: this.randomString(10),\n                    content: `bundle completed.`\n                  }]\n                });\n              }\n            });\n          });\n        } else {\n          count -= count;\n          this.setState({\n            toasts: [...this.state.toasts, {\n              key: this.randomString(10),\n              content: `no matching product found.`\n            }]\n          }, () => {\n            if (count === 0) {\n              this.setState({\n                loading: null,\n                toasts: [...this.state.toasts, {\n                  key: this.randomString(10),\n                  content: `bundle completed.`\n                }]\n              });\n            }\n          });\n        }\n      });\n    });\n  }\n\n  render() {\n    const toastMarkup = this.state.toasts.map(toast => {\n      return __jsx(Toast, {\n        content: toast.content,\n        onDismiss: () => this.setState({\n          toasts: this.state.toasts.filter(to => to.key !== toast.key)\n        })\n      });\n    });\n    return __jsx(Frame, null, __jsx(Card, null, __jsx(ResourceList, {\n      resourceName: {\n        singular: 'favorite',\n        plural: 'favorites'\n      },\n      items: this.ObjtoArray(this.state.favorites),\n      selectedItems: this.state.selectedItems,\n      onSelectionChange: this.setSelectedItems.bind(this),\n      selectable: true,\n      promotedBulkActions: [{\n        content: 'Bundle',\n        onAction: () => this.createBundle()\n      }],\n      renderItem: item => {\n        const {\n          key,\n          searchquery,\n          replacestring,\n          matchcase,\n          scopes\n        } = item;\n        const shortcutActions = [{\n          content: 'Run',\n          loading: this.state.loading === key,\n          onAction: () => this.runFavorite(key)\n        }, {\n          content: 'Remove',\n          onAction: () => this.removeFavorite(key)\n        }];\n        return __jsx(ResourceItem, {\n          id: key,\n          shortcutActions: shortcutActions,\n          persistActions: true,\n          name: searchquery\n        }, __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, searchquery, \" | \"), __jsx(TextStyle, {\n          variation: \"subdued\"\n        }, \"in (\", scopes.toString(), \")\")), __jsx(\"div\", null, \"Replace with :\\\"\", replacestring, \"\\\" \", matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"));\n      }\n    })), __jsx(Card, null, __jsx(ResourceList, {\n      resourceName: {\n        singular: 'bundle',\n        plural: 'bundles'\n      },\n      items: this.ArrayobjtoArray(this.state.bundles),\n      renderItem: item => {\n        const {\n          key,\n          content\n        } = item;\n        console.log(item);\n        const shortcutActions = [{\n          content: 'Run',\n          loading: this.state.loading === key,\n          onAction: () => this.runBundle(key)\n        }, {\n          content: 'Unbundle',\n          onAction: () => this.unbundle(key)\n        }];\n        return __jsx(ResourceItem, {\n          id: key,\n          persistActions: true,\n          shortcutActions: shortcutActions\n        }, __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, \"Bundle\")), content.map(item => {\n          return __jsx(\"div\", null, \"Find: \\\"\", item.searchquery, \"\\\" in (\", item.scopes.toString(), \"); Replace with :\\\"\", item.replacestring, \"\\\" \", item.matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\");\n        }));\n      }\n    })), this.state.showtoast ? __jsx(Toast, {\n      content: this.state.toastcontent,\n      onDismiss: () => this.setState({\n        showtoast: false\n      })\n    }) : null, toastMarkup);\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/components/FavoriteList.js"],"names":["gql","Query","Mutation","Card","ResourceList","Stack","TextStyle","ResourceItem","TextField","Thumbnail","DataTable","Button","Checkbox","Icon","Toast","Frame","StarFilledMinor","StarOutlineMinor","store","Redirect","Context","useMutation","_","UPDATE_PRODUCTS","SEARCH_PRODUCTS","ResourceListWithProducts","React","Component","favorites","bundles","selectedItems","loading","toasts","data","searchquery","replacestring","scopes","matchcase","regsearchquery","RegExp","getRegexCase","result","id","map","sco","tag","replace","console","log","products","resolve","reject","edges","length","promises","count","item","props","apolloClient","mutate","mutation","variables","input","transformData","node","then","response","randomString","Math","round","pow","random","toString","slice","setSelectedItems","setState","ObjtoArray","obj","key","ArrayobjtoArray","content","componentDidMount","get","runFavorite","state","query","handleReplace","removeFavorite","set","createBundle","newbundle","reduce","bundle","fav","newbundlekey","join","newbundles","unbundle","hashedfav","sort","x","runBundle","render","toastMarkup","toast","filter","to","singular","plural","bind","onAction","shortcutActions","showtoast","toastcontent"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    ResourceItem,\n    TextField,\n    Thumbnail,\n    DataTable,\n    Button,\n    Checkbox,\n    Icon,\n    Toast,\n    Frame\n } from '@shopify/polaris';\n import {\n  StarFilledMinor,\n  StarOutlineMinor\n} from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash'\nimport './ResourceList.css'\nimport{ UPDATE_PRODUCTS, SEARCH_PRODUCTS }from \"./graphql.js\"\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n    state = {\n        favorites:{},\n        bundles:{},\n        selectedItems: [],\n        loading: \"\",\n        toasts:[]\n\n    }\n    randomString(length) {\n        return Math.round((Math.pow(36, length + 1) - Math.random() * Math.pow(36, length))).toString(36).slice(1);\n    }\n    getRegexCase(matchcase){return matchcase ? \"g\" : \"gi\"}\n    transformData = (data, searchquery, replacestring, scopes, matchcase)=>{\n        const regsearchquery = new RegExp(searchquery, this.getRegexCase(matchcase));\n        let result = {id:data.id}\n        scopes.map(sco=>{\n            if(sco===\"tags\"){\n                result[sco] = data[sco].map(tag=>tag.replace(regsearchquery, replacestring))\n            }else if(sco===\"description\"){\n                result[\"descriptionHtml\"] = data[sco].replace(regsearchquery, replacestring)\n            }else{\n                result[sco] = data[sco].replace(regsearchquery, replacestring)\n            }\n        })\n        console.log(result)\n        return result\n    }\n    handleReplace = (products, searchquery, replacestring, scopes, matchcase) => {\n        return new Promise((resolve, reject)=>{\n            if(!products || products.edges.length<1){\n                reject(\"no product\") \n            }\n            const promises =products.edges.length\n            let count = promises\n            products.edges.map(item=>{\n                this.props.apolloClient.mutate({\n                    mutation: UPDATE_PRODUCTS,\n                    variables:{input:this.transformData(item.node, searchquery, replacestring, scopes, matchcase)}\n                })\n                .then(response=>{\n                    console.log(response)\n                    count -= 1\n                    if(count === 0){\n                        resolve()\n                    }\n                })\n            })\n\n        })\n    }\n\n    setSelectedItems(selectedItems){\n        console.log(selectedItems)\n        return this.setState({selectedItems})\n    }\n\n    ObjtoArray(obj){\n        return Object.keys(obj).map((key)=>{\n            return {...obj[key], key}\n        })\n    }\n    ArrayobjtoArray(obj){\n        return Object.keys(obj).map((key)=>{\n            return {content: obj[key], key}\n        })\n    }\n    componentDidMount(){\n        const favorites = store.get(\"favorite\") ? store.get(\"favorite\") : {}\n        const bundles = store.get(\"bundle\") ? store.get(\"bundle\") : {}\n        // if(Object.keys.length(bundles)===0){\n        //     store.set(\"bundle\",{})\n        // }\n        console.log(favorites)\n        console.log(bundles)\n        this.setState({favorites, bundles})\n    }\n    runFavorite(key){\n        const  {searchquery, replacestring, scopes, matchcase} = this.state.favorites[key]\n        this.setState({loading:key})\n        this.props.apolloClient.query({\n            query: SEARCH_PRODUCTS,\n            variables:{searchquery}\n        })\n        .then(response=>{\n            console.log(response)\n            if(response && response.data && response.data.products){\n                this.handleReplace(response.data.products,searchquery, replacestring, scopes, matchcase).then(()=>{\n                    this.setState({ loading:null, toasts: [...this.state.toasts, {key: this.randomString(10), content: `${promises} products changed.`}] })\n                })\n            }else{\n                this.setState({ loading:null, toasts: [...this.state.toasts, {key: this.randomString(10), content: `no matching product found`}] })\n            }\n        })\n    }\n    removeFavorite(key){\n        const { favorites } = this.state\n        delete favorites[key]\n        store.set(\"favorite\",favorites)\n        this.setState({favorites})\n    }\n\n    createBundle(){\n        const { favorites, bundles } = this.state\n        const newbundle = this.state.selectedItems.reduce((bundle, key)=>{\n            console.log(bundle)\n            const fav = favorites[key]\n            console.log(fav)\n            delete favorites[key]\n            return [...bundle,fav]\n        },[])\n        const newbundlekey = \"bundle:\"+this.state.selectedItems.join(';')\n        console.log(newbundle)\n        console.log(newbundlekey)\n        console.log(favorites)\n        store.set(\"favorite\",favorites)\n        let newbundles\n        if (!store.get('bundle')){\n            console.log(\"no current bundle\")\n            newbundles = {[newbundlekey]:newbundle}\n        }else{\n            newbundles = {...bundles, [newbundlekey]:newbundle}\n        }\n        store.set(\"bundle\",newbundles)\n        this.setState({selectedItems:[], favorites, bundles: newbundles})\n    }\n    \n    unbundle(key){\n        const { favorites, bundles } = this.state\n        const bundle = bundles[key]\n        bundle.map(fav => {\n            const hashedfav = Object.keys(fav).sort().map(x => fav[x].toString()).join(\";\");\n            favorites[hashedfav] = fav\n        })\n        delete bundles[key]\n        console.log(bundles)\n        console.log(favorites)\n        store.set(\"favorite\",favorites)\n        store.set(\"bundle\",bundles)\n        this.setState({favorites, bundles})\n    }\n\n    runBundle(key){\n        const bundle = this.state.bundles[key]\n        this.setState({loading:key})\n        const bundles = bundle.length\n        let count = bundles\n        bundle.map(fav => {\n            const  {searchquery, replacestring, scopes, matchcase} = fav\n            this.props.apolloClient.query({\n                query: SEARCH_PRODUCTS,\n                variables:{searchquery}\n            })\n            .then(response=>{\n                console.log(response)\n                if(response && response.data && response.data.products){\n                    this.handleReplace(response.data.products,searchquery, replacestring, scopes, matchcase).then(()=>{\n                        count -= count\n                        this.setState({ toasts: [...this.state.toasts, {key: this.randomString(10), content: `${promises} products changed.`}] },()=>{\n                            if (count === 0){\n                                this.setState({ loading:null, toasts: [...this.state.toasts, {key: this.randomString(10), content: `bundle completed.`}] })\n                            }\n                        })\n                    })\n                }else{\n                    count -= count\n                    this.setState({ toasts: [...this.state.toasts, {key: this.randomString(10), content: `no matching product found.`}] },()=>{\n                        if (count === 0){\n                            this.setState({ loading:null, toasts: [...this.state.toasts, {key: this.randomString(10), content: `bundle completed.`}] })\n                        }\n                    })\n                }\n            })\n        })\n    }\n    \n    render() {\n      const toastMarkup = this.state.toasts.map(toast=>{\n          return  (<Toast content={toast.content} onDismiss={()=>this.setState({toasts:this.state.toasts.filter(to=>to.key !== toast.key)})}/>)\n      })\n    return (\n        <Frame>\n        <Card>\n        <ResourceList\n            resourceName={{singular: 'favorite', plural: 'favorites'}}\n            items={this.ObjtoArray(this.state.favorites)}\n            selectedItems={this.state.selectedItems}\n            onSelectionChange={this.setSelectedItems.bind(this)}\n            selectable\n            promotedBulkActions={[\n                {\n                  content: 'Bundle',\n                  onAction: ()=>this.createBundle(),\n                }\n            ]}\n            renderItem={(item) => {\n            const {key, searchquery, replacestring, matchcase, scopes} = item;\n            const shortcutActions = [\n                {\n                    content: 'Run',\n                    loading: (this.state.loading === key),\n                    onAction: ()=>this.runFavorite(key),\n                }, {\n                    content: 'Remove',\n                    onAction: ()=>this.removeFavorite(key),\n                }]\n              \n            return (\n                <ResourceItem\n                id={key}\n                shortcutActions={shortcutActions}\n                persistActions\n                name={searchquery}\n                >\n                <h3>\n                <TextStyle variation=\"strong\">{searchquery} | </TextStyle>\n                <TextStyle variation=\"subdued\">in ({scopes.toString()})</TextStyle>\n                </h3>\n                <div>Replace with :\"{replacestring}\" {matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"}</div>\n                </ResourceItem>\n            );\n            }}\n        />\n        </Card>\n\n        <Card>\n        <ResourceList\n            resourceName={{singular: 'bundle', plural: 'bundles'}}\n            items={this.ArrayobjtoArray(this.state.bundles)}\n            renderItem={(item) => {\n            const {key, content} = item;\n            console.log(item)\n            const shortcutActions = [\n                {\n                    content: 'Run',\n                    loading: (this.state.loading === key),\n                    onAction: ()=>this.runBundle(key),\n                }, {\n                    content: 'Unbundle',\n                    onAction: ()=>this.unbundle(key),\n                }]\n              \n            return (\n                <ResourceItem\n                id={key}\n                persistActions\n                shortcutActions={shortcutActions}\n                >\n                <h3>\n                    <TextStyle variation=\"strong\">Bundle</TextStyle>\n                </h3>\n                {content.map((item)=>{\n                    return (<div>Find: \"{item.searchquery}\" in ({item.scopes.toString()}); Replace with :\"{item.replacestring}\" {item.matchcase ? \"(Case Sensitive)\" : \"(Case Insensitive)\"}</div>)\n                })}\n                </ResourceItem>\n            );\n            }}\n        />\n        </Card>\n        {this.state.showtoast ? (<Toast content={this.state.toastcontent} onDismiss={() => this.setState({showtoast:false})} />) : null}\n        {toastMarkup}\n        </Frame>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}