{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, ResourceItem, TextField, Thumbnail, DataTable, Button, Checkbox, Icon } from '@shopify/polaris';\nimport { StarFilledMinor, StarOutlineMinor } from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport './ResourceList.css';\nconst UPDATE_PRODUCTS = gql`\n  mutation productUpdate($input: ProductInput!) {\n    productUpdate(input: $input) {\n      product {\n        id\n        title\n        handle\n        description\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\nconst SEARCH_PRODUCTS = gql`\n  query getProducts($searchquery: String!) {\n    products(query: $searchquery first: 50) {\n      edges {\n        node {\n          title\n          handle\n          description\n          id\n          images(first: 1) {\n            edges {\n              node {\n                originalSrc\n                altText\n              }\n            }\n          }\n          variants(first: 1) {\n            edges {\n              node {\n                price\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      favorites: []\n    });\n\n    _defineProperty(this, \"toggleFavorite\", () => {\n      console.log(\"toggle fav\");\n      const favorite = store.get('favorite');\n\n      const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase']);\n\n      const hashedfav = _Object$keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n\n      if (!this.state.saved) {\n        if (!store.get('favorite')) {\n          console.log(\"no current fav\");\n          console.log(\"hashedfav:\" + hashedfav);\n          store.set(\"favorite\", {\n            [hashedfav]: searchform\n          });\n        } else {\n          console.log(store.get('favorite'));\n          store.set(\"favorite\", _objectSpread({}, favorite, {\n            [hashedfav]: searchform\n          }));\n        }\n\n        this.setState({\n          saved: true\n        });\n      } else {\n        delete favorite[hashedfav];\n        store.set(\"favorite\", favorite);\n        this.setState({\n          saved: false\n        });\n      }\n    });\n\n    _defineProperty(this, \"handleChange\", field => value => {\n      this.setState({\n        [field]: value\n      }, () => {\n        console.log(field);\n\n        const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase']);\n\n        const hashedfav = _Object$keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n\n        console.log(store.get('favorite'));\n        console.log(hashedfav);\n        console.log(store.get('favorite')[hashedfav]);\n        const saved = store.get('favorite') && store.get('favorite')[hashedfav];\n        console.log(saved);\n        this.setState({\n          saved\n        });\n      });\n    });\n\n    _defineProperty(this, \"handleReplace\", () => {\n      if (!this.state.products || this.state.products.length < 1) {\n        return;\n      }\n\n      this.state.products.edges.map(item => {\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables: {\n            input: this.transformData(item.node)\n          }\n        }).then(response => {\n          console.log(response);\n        });\n      });\n      this.setState({\n        searchquery: \"\",\n        replacestring: \"\"\n      });\n    });\n\n    _defineProperty(this, \"transformData\", data => {\n      const searchquery = new RegExp(this.state.searchquery, \"gi\");\n      const result = {\n        id: data.id,\n        title: data.title.replace(searchquery, this.state.replacestring),\n        handle: data.handle.replace(searchquery, this.state.replacestring),\n        descriptionHtml: `<p>${data.description.replace(searchquery, this.state.replacestring)}</p>`\n      };\n      return result;\n    });\n\n    _defineProperty(this, \"InjectHighlight\", text => {\n      const replace = new RegExp(this.state.searchquery, \"gi\");\n      return __jsx(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: text.replace(replace, function (x) {\n            return `<span style=\"background-color:yellow\">${x}</span>`;\n          })\n        }\n      });\n    });\n\n    _defineProperty(this, \"ConvertDatatoTable\", data => {\n      if (!data || data.length < 1) {\n        return [[]];\n      }\n\n      return data.edges.map(item => {\n        const node = item.node;\n        return [this.InjectHighlight(node.title), this.InjectHighlight(node.handle), this.InjectHighlight(node.description)];\n      });\n    });\n  }\n\n  componentDidMount() {\n    const favorite = store.get(\"favorite\");\n\n    const arrayfavorite = _Object$keys(favorite).map(key => {\n      return _objectSpread({}, favorite, {\n        key\n      });\n    });\n\n    console.log(arrayfavorite);\n    this.setState({\n      favorites: arrayfavorite\n    });\n  }\n\n  render() {\n    const app = this.context;\n\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/edit-products');\n    };\n\n    return __jsx(\"div\", null, __jsx(Card, null, __jsx(ResourceList, {\n      resourceName: {\n        singular: 'favorite',\n        plural: 'favorites'\n      },\n      items: this.state.favorites,\n      renderItem: item => {\n        const {\n          key,\n          searchquery,\n          replacestring,\n          matchcase\n        } = item; // const shortcutActions = [{content: 'Run', url: latestOrderUrl}]\n\n        return __jsx(ResourceItem, {\n          id: key // url={url}\n          // shortcutActions={shortcutActions}\n          ,\n          accessibilityLabel: `View details for ${name}` // name={name}\n\n        }, __jsx(\"h3\", null, __jsx(TextStyle, {\n          variation: \"strong\"\n        }, searchquery)), __jsx(\"div\", null, \"Replace with : \", replacestring, \" ; \", matchcase ? \"Case Sensitive\" : \"Case Insensitive\"));\n      }\n    })));\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/components/FavoriteList.js"],"names":["gql","Query","Mutation","Card","ResourceList","Stack","TextStyle","ResourceItem","TextField","Thumbnail","DataTable","Button","Checkbox","Icon","StarFilledMinor","StarOutlineMinor","store","Redirect","Context","useMutation","_","UPDATE_PRODUCTS","SEARCH_PRODUCTS","ResourceListWithProducts","React","Component","favorites","console","log","favorite","get","searchform","pick","state","hashedfav","sort","map","x","toString","join","saved","set","setState","field","value","products","length","edges","item","props","apolloClient","mutate","mutation","variables","input","transformData","node","then","response","searchquery","replacestring","data","RegExp","result","id","title","replace","handle","descriptionHtml","description","text","__html","InjectHighlight","componentDidMount","arrayfavorite","key","render","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","singular","plural","matchcase","name"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    ResourceItem,\n    TextField,\n    Thumbnail,\n    DataTable,\n    Button,\n    Checkbox,\n    Icon\n } from '@shopify/polaris';\n import {\n  StarFilledMinor,\n  StarOutlineMinor\n} from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash'\nimport './ResourceList.css'\nconst UPDATE_PRODUCTS = gql`\n  mutation productUpdate($input: ProductInput!) {\n    productUpdate(input: $input) {\n      product {\n        id\n        title\n        handle\n        description\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\nconst SEARCH_PRODUCTS = gql`\n  query getProducts($searchquery: String!) {\n    products(query: $searchquery first: 50) {\n      edges {\n        node {\n          title\n          handle\n          description\n          id\n          images(first: 1) {\n            edges {\n              node {\n                originalSrc\n                altText\n              }\n            }\n          }\n          variants(first: 1) {\n            edges {\n              node {\n                price\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n    state = {\n        favorites:[]\n    }\n    \n    componentDidMount(){\n        const favorite = store.get(\"favorite\")\n        const arrayfavorite = Object.keys(favorite).map((key)=>{\n            return {...favorite, key}\n        })\n        console.log(arrayfavorite)\n        this.setState({favorites:arrayfavorite})\n    }\n\n\n\n\n    toggleFavorite = () => {\n      console.log(\"toggle fav\")\n      const favorite = store.get('favorite')\n      const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase'])\n      const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n      if(!this.state.saved){\n        if (!store.get('favorite')){\n          console.log(\"no current fav\")\n          console.log(\"hashedfav:\" + hashedfav)\n          store.set(\"favorite\",{[hashedfav]:searchform})\n        }else{\n          console.log(store.get('favorite'))\n          store.set(\"favorite\",{...favorite, [hashedfav]:searchform})\n        }\n        this.setState({ saved:true })\n      }else{\n        delete favorite[hashedfav]\n        store.set(\"favorite\",favorite)\n        this.setState({ saved:false })\n      }\n    }\n\n    handleChange = (field) =>  (value) => {\n      this.setState({ [field]: value }, ()=>{\n        console.log(field)\n        const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase'])\n        const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n        console.log(store.get('favorite'))\n        console.log(hashedfav)\n        console.log(store.get('favorite')[hashedfav])\n        const saved = store.get('favorite') && store.get('favorite')[hashedfav]\n        console.log(saved)\n        this.setState({ saved })\n      })\n    };\n\n    handleReplace = () => {\n      if(!this.state.products || this.state.products.length<1){\n        return \n      }\n      this.state.products.edges.map(item=>{\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables:{input:this.transformData(item.node)}\n        })\n        .then(response=>{\n          console.log(response)\n        })\n      })\n\n      this.setState({searchquery:\"\",replacestring:\"\"})\n\n    }\n\n    transformData = (data)=>{\n      const searchquery = new RegExp(this.state.searchquery, \"gi\");\n      const result = {\n        id:data.id,\n        title: data.title.replace(searchquery, this.state.replacestring),\n        handle: data.handle.replace(searchquery, this.state.replacestring),\n        descriptionHtml: `<p>${data.description.replace(searchquery, this.state.replacestring)}</p>`,\n      }\n      return result\n    }\n\n    InjectHighlight = (text) => {\n      const replace = new RegExp(this.state.searchquery, \"gi\");\n      return (\n        <span\n          dangerouslySetInnerHTML={{\n            __html : text.replace(replace, function (x) {\n              return `<span style=\"background-color:yellow\">${x}</span>`;\n            })\n          }} />\n      )\n    }\n\n    ConvertDatatoTable = (data) =>{\n      if (!data || data.length < 1){\n        return [[]]\n      }\n      return data.edges.map(item=>{\n        const node = item.node\n        return [this.InjectHighlight(node.title), this.InjectHighlight(node.handle), this.InjectHighlight(node.description)]\n      })\n    }\n    \n    render() {\n      const app = this.context;\n      const redirectToProduct = () => {\n        const redirect = Redirect.create(app);\n        redirect.dispatch(\n          Redirect.Action.APP,\n          '/edit-products',\n        );\n      };\n    return (\n      <div>\n        {/* <div className=\"form-container\">\n          \n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Find\" value={this.state.searchquery} onChange={this.handleChange('searchquery')} />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Replace with\"  value={this.state.replacestring} onChange={this.handleChange('replacestring')} />\n            </div>\n            <Button className=\"form-button\" onClick={this.handleReplace.bind(this)}>Replace </Button>\n            <Button className=\"form-button\" onClick={this.handleReplace.bind(this)}>Replace all</Button>\n          </div>\n\n\n          <div className=\"form-row\">\n            <Checkbox label=\"Match case\" checked={this.state.matchcase} onChange={this.handleChange('matchcase')} />\n            <a onClick={this.toggleFavorite.bind(this)} >\n              <Icon source={this.state.saved ? StarFilledMinor : StarOutlineMinor} />\n              {this.state.saved ? \"Saved\" : \"Save to Favorite\"}\n            </a>\n          </div>\n\n        </div> */}\n\n        <Card>\n        <ResourceList\n            resourceName={{singular: 'favorite', plural: 'favorites'}}\n            items={this.state.favorites}\n            renderItem={(item) => {\n            const {key, searchquery, replacestring, matchcase} = item;\n            // const shortcutActions = [{content: 'Run', url: latestOrderUrl}]\n\n            return (\n                <ResourceItem\n                id={key}\n                // url={url}\n                // shortcutActions={shortcutActions}\n                accessibilityLabel={`View details for ${name}`}\n                // name={name}\n                >\n                <h3>\n                    <TextStyle variation=\"strong\">{searchquery}</TextStyle>\n                </h3>\n                <div>Replace with : {replacestring} ; {matchcase ? \"Case Sensitive\" : \"Case Insensitive\"}</div>\n                </ResourceItem>\n            );\n            }}\n        />\n        </Card>\n      </div>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}