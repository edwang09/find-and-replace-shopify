{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, TextField, Thumbnail, DataTable, Button, Checkbox, Icon } from '@shopify/polaris';\nimport { StarFilledMinor, StarOutlineMinor } from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash';\nimport './ResourceList.css';\nconst UPDATE_PRODUCTS = gql`\n  mutation productUpdate($input: ProductInput!) {\n    productUpdate(input: $input) {\n      product {\n        id\n        title\n        handle\n        description\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\nconst SEARCH_PRODUCTS = gql`\n  query getProducts($searchquery: String!) {\n    products(query: $searchquery first: 50) {\n      edges {\n        node {\n          title\n          handle\n          description\n          id\n          images(first: 1) {\n            edges {\n              node {\n                originalSrc\n                altText\n              }\n            }\n          }\n          variants(first: 1) {\n            edges {\n              node {\n                price\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      searchquery: \"\",\n      replacestring: \"\",\n      matchcase: false,\n      saved: false\n    });\n\n    _defineProperty(this, \"toggleFavorite\", () => {\n      const favorite = store.get('favorite');\n\n      if (!this.state.saved) {\n        const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase']);\n\n        const hashedfav = _Object$keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n\n        if (!store.get('favorite')) {\n          console.log(\"no current fav\");\n          console.log(\"hashedfav:\" + hashedfav);\n          store.set(\"favorite\", {\n            [hashedfav]: searchform\n          });\n        } else {\n          console.log(store.get('favorite'));\n          store.set(\"favorite\", _objectSpread({}, favorite, {\n            [hashedfav]: searchform\n          }));\n        }\n      } else {\n        delete favorite.hashedfav;\n        store.set(\"favorite\", favorite);\n      }\n    });\n\n    _defineProperty(this, \"handleChange\", field => {\n      const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase']);\n\n      const hashedfav = _Object$keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n\n      const saved = store.get('favorite') && store.get('favorite')[hashedfav];\n      return value => this.setState({\n        [field]: value,\n        saved\n      });\n    });\n\n    _defineProperty(this, \"handleReplace\", () => {\n      if (!this.state.products || this.state.products.length < 1) {\n        return;\n      }\n\n      this.state.products.edges.map(item => {\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables: {\n            input: this.transformData(item.node)\n          }\n        }).then(response => {\n          console.log(response);\n        });\n      });\n      this.setState({\n        searchquery: \"\",\n        replacestring: \"\"\n      });\n    });\n\n    _defineProperty(this, \"transformData\", data => {\n      const searchquery = new RegExp(this.state.searchquery, \"gi\");\n      const result = {\n        id: data.id,\n        title: data.title.replace(searchquery, this.state.replacestring),\n        handle: data.handle.replace(searchquery, this.state.replacestring),\n        descriptionHtml: `<p>${data.description.replace(searchquery, this.state.replacestring)}</p>`\n      };\n      return result;\n    });\n\n    _defineProperty(this, \"InjectHighlight\", text => {\n      const replace = new RegExp(this.state.searchquery, \"gi\");\n      return __jsx(\"span\", {\n        dangerouslySetInnerHTML: {\n          __html: text.replace(replace, function (x) {\n            return `<span style=\"background-color:yellow\">${x}</span>`;\n          })\n        }\n      });\n    });\n\n    _defineProperty(this, \"ConvertDatatoTable\", data => {\n      if (!data || data.length < 1) {\n        return [[]];\n      }\n\n      return data.edges.map(item => {\n        const node = item.node;\n        return [this.InjectHighlight(node.title), this.InjectHighlight(node.handle), this.InjectHighlight(node.description)];\n      });\n    });\n  }\n\n  render() {\n    const app = this.context;\n\n    const redirectToProduct = () => {\n      const redirect = Redirect.create(app);\n      redirect.dispatch(Redirect.Action.APP, '/edit-products');\n    };\n\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: \"form-container\"\n    }, __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(\"div\", {\n      className: \"form-input\"\n    }, __jsx(TextField, {\n      placeholder: \"Find\",\n      value: this.state.searchquery,\n      onChange: this.handleChange('searchquery')\n    }))), __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(\"div\", {\n      className: \"form-input\"\n    }, __jsx(TextField, {\n      placeholder: \"Replace with\",\n      value: this.state.replacestring,\n      onChange: this.handleChange('replacestring')\n    })), __jsx(Button, {\n      className: \"form-button\",\n      onClick: this.handleReplace.bind(this)\n    }, \"Replace \"), __jsx(Button, {\n      className: \"form-button\",\n      onClick: this.handleReplace.bind(this)\n    }, \"Replace all\")), __jsx(\"div\", {\n      className: \"form-row\"\n    }, __jsx(Checkbox, {\n      label: \"Match case\",\n      checked: this.state.matchcase,\n      onChange: this.handleChange('matchcase')\n    }), __jsx(Icon, {\n      source: this.state.saved ? StarFilledMinor : StarOutlineMinor,\n      onChange: this.toggleFavorite()\n    }))), __jsx(Query, {\n      query: SEARCH_PRODUCTS,\n      variables: {\n        searchquery: this.state.searchquery\n      },\n      pollInterval: 500,\n      onCompleted: data => {\n        this.setState({\n          products: data.products\n        });\n      }\n    }, ({\n      data,\n      loading,\n      error\n    }) => {\n      if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n      if (error) return __jsx(\"div\", null, error.message);\n      const rows = this.ConvertDatatoTable(data.products);\n      return __jsx(Card, null, __jsx(DataTable, {\n        columnContentTypes: ['text', 'text', 'text'],\n        headings: ['title', 'handle', 'description'],\n        rows: rows\n      }));\n    }));\n  }\n\n}\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/components/ResourceList.js"],"names":["gql","Query","Mutation","Card","ResourceList","Stack","TextStyle","TextField","Thumbnail","DataTable","Button","Checkbox","Icon","StarFilledMinor","StarOutlineMinor","store","Redirect","Context","useMutation","_","UPDATE_PRODUCTS","SEARCH_PRODUCTS","ResourceListWithProducts","React","Component","searchquery","replacestring","matchcase","saved","favorite","get","state","searchform","pick","hashedfav","sort","map","x","toString","join","console","log","set","field","value","setState","products","length","edges","item","props","apolloClient","mutate","mutation","variables","input","transformData","node","then","response","data","RegExp","result","id","title","replace","handle","descriptionHtml","description","text","__html","InjectHighlight","render","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","handleChange","handleReplace","bind","toggleFavorite","loading","error","message","rows","ConvertDatatoTable"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query, Mutation } from 'react-apollo';\nimport { Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    TextField,\n    Thumbnail,\n    DataTable,\n    Button,\n    Checkbox,\n    Icon\n } from '@shopify/polaris';\n import {\n  StarFilledMinor,\n  StarOutlineMinor\n} from '@shopify/polaris-icons';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nimport { useMutation } from '@apollo/react-hooks';\nimport _ from 'lodash'\nimport './ResourceList.css'\nconst UPDATE_PRODUCTS = gql`\n  mutation productUpdate($input: ProductInput!) {\n    productUpdate(input: $input) {\n      product {\n        id\n        title\n        handle\n        description\n      }\n      userErrors {\n        field\n        message\n      }\n    }\n  }\n`;\nconst SEARCH_PRODUCTS = gql`\n  query getProducts($searchquery: String!) {\n    products(query: $searchquery first: 50) {\n      edges {\n        node {\n          title\n          handle\n          description\n          id\n          images(first: 1) {\n            edges {\n              node {\n                originalSrc\n                altText\n              }\n            }\n          }\n          variants(first: 1) {\n            edges {\n              node {\n                price\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n    state = {\n        searchquery: \"\",\n        replacestring:\"\",\n        matchcase:false,\n        saved: false\n    }\n    \n    toggleFavorite = () => {\n      const favorite = store.get('favorite')\n      if(!this.state.saved){\n        const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase'])\n        const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n        if (!store.get('favorite')){\n          console.log(\"no current fav\")\n          console.log(\"hashedfav:\" + hashedfav)\n          store.set(\"favorite\",{[hashedfav]:searchform})\n        }else{\n          console.log(store.get('favorite'))\n          store.set(\"favorite\",{...favorite, [hashedfav]:searchform})\n        }\n      }else{\n        delete favorite.hashedfav\n        store.set(\"favorite\",favorite)\n      }\n    }\n\n    handleChange = (field) => {\n      const searchform = _.pick(this.state, ['searchquery', 'replacestring', 'matchcase'])\n      const hashedfav = Object.keys(searchform).sort().map(x => searchform[x].toString()).join(\";\");\n      const saved = store.get('favorite') && store.get('favorite')[hashedfav]\n      return (value) => this.setState({ [field]: value, saved });\n    };\n\n    handleReplace = () => {\n      if(!this.state.products || this.state.products.length<1){\n        return \n      }\n      this.state.products.edges.map(item=>{\n        this.props.apolloClient.mutate({\n          mutation: UPDATE_PRODUCTS,\n          variables:{input:this.transformData(item.node)}\n        })\n        .then(response=>{\n          console.log(response)\n        })\n      })\n\n      this.setState({searchquery:\"\",replacestring:\"\"})\n\n    }\n\n    transformData = (data)=>{\n      const searchquery = new RegExp(this.state.searchquery, \"gi\");\n      const result = {\n        id:data.id,\n        title: data.title.replace(searchquery, this.state.replacestring),\n        handle: data.handle.replace(searchquery, this.state.replacestring),\n        descriptionHtml: `<p>${data.description.replace(searchquery, this.state.replacestring)}</p>`,\n      }\n      return result\n    }\n\n    InjectHighlight = (text) => {\n      const replace = new RegExp(this.state.searchquery, \"gi\");\n      return (\n        <span\n          dangerouslySetInnerHTML={{\n            __html : text.replace(replace, function (x) {\n              return `<span style=\"background-color:yellow\">${x}</span>`;\n            })\n          }} />\n      )\n    }\n\n    ConvertDatatoTable = (data) =>{\n      if (!data || data.length < 1){\n        return [[]]\n      }\n      return data.edges.map(item=>{\n        const node = item.node\n        return [this.InjectHighlight(node.title), this.InjectHighlight(node.handle), this.InjectHighlight(node.description)]\n      })\n    }\n    \n    render() {\n      const app = this.context;\n      const redirectToProduct = () => {\n        const redirect = Redirect.create(app);\n        redirect.dispatch(\n          Redirect.Action.APP,\n          '/edit-products',\n        );\n      };\n    return (\n      <div>\n        <div className=\"form-container\">\n          \n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Find\" value={this.state.searchquery} onChange={this.handleChange('searchquery')} />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"form-input\" >\n              <TextField placeholder=\"Replace with\"  value={this.state.replacestring} onChange={this.handleChange('replacestring')} />\n            </div>\n            <Button className=\"form-button\" onClick={this.handleReplace.bind(this)}>Replace </Button>\n            <Button className=\"form-button\" onClick={this.handleReplace.bind(this)}>Replace all</Button>\n          </div>\n\n\n          <div className=\"form-row\">\n            <Checkbox label=\"Match case\" checked={this.state.matchcase} onChange={this.handleChange('matchcase')} />\n            <Icon source={this.state.saved ? StarFilledMinor : StarOutlineMinor} onChange={this.toggleFavorite()} />\n            {/* <Checkbox label=\"Saved\" checked={this.state.saved} onChange={this.toggleFavorite()} /> */}\n          </div>\n\n        </div>\n      <Query query={SEARCH_PRODUCTS} variables={{ searchquery: this.state.searchquery }} \n    pollInterval={500} onCompleted={(data)=>{\n          this.setState({products : data.products})}}>\n        {({ data, loading, error }) => {\n          if (loading) return <div>Loading…</div>;\n          if (error) return <div>{error.message}</div>;\n          const rows = this.ConvertDatatoTable(data.products)\n          return (\n            <Card>\n              <DataTable\n                columnContentTypes={[\n                  'text',\n                  'text',\n                  'text',\n                ]}\n                headings={[\n                  'title',\n                  'handle',\n                  'description',\n                ]}\n                rows={rows}\n              />\n            </Card>\n          );\n        }}\n      </Query>\n\n      </div>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}