{"ast":null,"code":"import _Date$now from \"@babel/runtime-corejs2/core-js/date/now\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getProducts($searchquery: String!) {\\n    products(query: $searchquery first: 1) {\\n      edges {\\n        node {\\n          title\\n          handle\\n          descriptionHtml\\n          id\\n          images(first: 1) {\\n            edges {\\n              node {\\n                originalSrc\\n                altText\\n              }\\n            }\\n          }\\n          variants(first: 1) {\\n            edges {\\n              node {\\n                price\\n                id\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card, ResourceList, Stack, TextStyle, TextField, Thumbnail } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\nvar SEARCH_PRODUCTS = gql(_templateObject());\n\nvar ResourceListWithProducts =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ResourceListWithProducts, _React$Component);\n\n  function ResourceListWithProducts() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ResourceListWithProducts);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ResourceListWithProducts)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      searchquery: \"LED\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (field) {// return (value) => this.setState({ [field]: value });\n    });\n\n    return _this;\n  }\n\n  _createClass(ResourceListWithProducts, [{\n    key: \"render\",\n    value: function render() {\n      var app = this.context;\n\n      var redirectToProduct = function redirectToProduct() {\n        var redirect = Redirect.create(app);\n        redirect.dispatch(Redirect.Action.APP, '/edit-products');\n      };\n\n      var twoWeeksFromNow = new Date(_Date$now() + 12096e5).toDateString();\n      return __jsx(\"div\", null, __jsx(Query, {\n        query: SEARCH_PRODUCTS,\n        variables: {\n          searchquery: this.state.searchquery\n        }\n      }, function (_ref) {\n        var data = _ref.data,\n            loading = _ref.loading,\n            error = _ref.error;\n        if (loading) return __jsx(\"div\", null, \"Loading\\u2026\");\n        if (error) return __jsx(\"div\", null, error.message);\n        console.log(data);\n        return __jsx(Card, null, __jsx(ResourceList, {\n          showHeader: true,\n          resourceName: {\n            singular: 'Product',\n            plural: 'Products'\n          },\n          items: data.products.edges,\n          renderItem: function renderItem(item) {\n            var media = __jsx(Thumbnail, {\n              source: item.node.images.edges[0] ? item.node.images.edges[0].node.originalSrc : '',\n              alt: item.node.images.edges[0] ? item.node.images.edges[0].node.altText : ''\n            });\n\n            var price = item.node.variants.edges[0].node.price;\n            console.log(item.node);\n            return __jsx(ResourceList.item, {\n              id: item.node.id,\n              media: media,\n              accessibilityLabel: \"View details for \".concat(item.node.title),\n              onClick: function onClick() {\n                store.set('item', item.node);\n                redirectToProduct();\n              }\n            }, __jsx(Stack, null, __jsx(Stack.item, {\n              fill: true\n            }, __jsx(\"h3\", null, __jsx(TextStyle, {\n              variation: \"strong\"\n            }, item.node.title))), __jsx(Stack.item, null, __jsx(\"p\", null, \"$\", price)), __jsx(Stack.item, null, __jsx(\"p\", null, \"Expires on \", twoWeeksFromNow, \" \"))));\n          }\n        }));\n      }));\n    }\n  }]);\n\n  return ResourceListWithProducts;\n}(React.Component);\n\n_defineProperty(ResourceListWithProducts, \"contextType\", Context);\n\nexport default ResourceListWithProducts;","map":{"version":3,"sources":["/home/edwang09/Documents/Upwork/Shopify/components/ResourceList.js"],"names":["gql","Query","Card","ResourceList","Stack","TextStyle","TextField","Thumbnail","store","Redirect","Context","SEARCH_PRODUCTS","ResourceListWithProducts","searchquery","field","app","context","redirectToProduct","redirect","create","dispatch","Action","APP","twoWeeksFromNow","Date","toDateString","state","data","loading","error","message","console","log","singular","plural","products","edges","item","media","node","images","originalSrc","altText","price","variants","id","title","set","React","Component"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Card,\n    ResourceList,\n    Stack,\n    TextStyle,\n    TextField,\n    Thumbnail,\n } from '@shopify/polaris';\nimport store from 'store-js';\nimport { Redirect } from '@shopify/app-bridge/actions';\nimport { Context } from '@shopify/app-bridge-react';\n\nconst SEARCH_PRODUCTS = gql`\n  query getProducts($searchquery: String!) {\n    products(query: $searchquery first: 1) {\n      edges {\n        node {\n          title\n          handle\n          descriptionHtml\n          id\n          images(first: 1) {\n            edges {\n              node {\n                originalSrc\n                altText\n              }\n            }\n          }\n          variants(first: 1) {\n            edges {\n              node {\n                price\n                id\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nclass ResourceListWithProducts extends React.Component {\n    static contextType = Context;\n    state = {\n        searchquery: \"LED\"\n    }\n    \n    handleChange = (field) => {\n      // return (value) => this.setState({ [field]: value });\n    };\n    render() {\n      const app = this.context;\n      const redirectToProduct = () => {\n        const redirect = Redirect.create(app);\n        redirect.dispatch(\n          Redirect.Action.APP,\n          '/edit-products',\n        );\n      };\n    const twoWeeksFromNow = new Date(Date.now() + 12096e5).toDateString();\n    return (\n      <div>\n      {/* <TextField label=\"search\" value={this.state.searchquery} onChange={this.handleChange('searchquery')} /> */}\n      <Query query={SEARCH_PRODUCTS} variables={{ searchquery: this.state.searchquery }}>\n        {({ data, loading, error }) => {\n          if (loading) return <div>Loading…</div>;\n          if (error) return <div>{error.message}</div>;\n          console.log(data);\n          return (\n            <Card>\n              <ResourceList\n                showHeader\n                resourceName={{ singular: 'Product', plural: 'Products' }}\n                items={data.products.edges}\n                renderItem={item => {\n                  const media = (\n                    <Thumbnail\n                      source={\n                        item.node.images.edges[0]\n                          ? item.node.images.edges[0].node.originalSrc\n                          : ''\n                      }\n                      alt={\n                        item.node.images.edges[0]\n                          ? item.node.images.edges[0].node.altText\n                          : ''\n                      }\n                    />\n                  );\n                  const price = item.node.variants.edges[0].node.price;\n                  console.log(item.node)\n                  return (\n                    <ResourceList.item\n                      id={item.node.id}\n                      media={media}\n                      accessibilityLabel={`View details for ${item.node.title}`} \n                      onClick={() => {\n                        store.set('item', item.node);\n                        redirectToProduct();\n                      }}\n                    >\n                      <Stack>\n                        <Stack.item fill>\n                          <h3>\n                            <TextStyle variation=\"strong\">\n                              {item.node.title}\n                            </TextStyle>\n                          </h3>\n                        </Stack.item>\n                        <Stack.item>\n                          <p>${price}</p>\n                        </Stack.item>\n                        <Stack.item>\n                          <p>Expires on {twoWeeksFromNow} </p>\n                        </Stack.item>\n                      </Stack>\n                    </ResourceList.item>\n                  );\n                }}\n              />\n            </Card>\n          );\n        }}\n      </Query>\n\n      </div>\n    );\n  }\n}\n\n export default ResourceListWithProducts;"]},"metadata":{},"sourceType":"module"}